// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: KmreCore.proto

#ifndef PROTOBUF_INCLUDED_KmreCore_2eproto
#define PROTOBUF_INCLUDED_KmreCore_2eproto

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3006001
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
#define PROTOBUF_INTERNAL_EXPORT_protobuf_KmreCore_2eproto 

namespace protobuf_KmreCore_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[45];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
}  // namespace protobuf_KmreCore_2eproto
namespace cn {
namespace kylinos {
namespace kmre {
namespace kmrecore {
class ActionResult;
class ActionResultDefaultTypeInternal;
extern ActionResultDefaultTypeInternal _ActionResult_default_instance_;
class AnswerCall;
class AnswerCallDefaultTypeInternal;
extern AnswerCallDefaultTypeInternal _AnswerCall_default_instance_;
class AppMultiplier;
class AppMultiplierDefaultTypeInternal;
extern AppMultiplierDefaultTypeInternal _AppMultiplier_default_instance_;
class AppMultiplierList;
class AppMultiplierListDefaultTypeInternal;
extern AppMultiplierListDefaultTypeInternal _AppMultiplierList_default_instance_;
class CloseApp;
class CloseAppDefaultTypeInternal;
extern CloseAppDefaultTypeInternal _CloseApp_default_instance_;
class CloseResult;
class CloseResultDefaultTypeInternal;
extern CloseResultDefaultTypeInternal _CloseResult_default_instance_;
class ContainerEnvBootStatus;
class ContainerEnvBootStatusDefaultTypeInternal;
extern ContainerEnvBootStatusDefaultTypeInternal _ContainerEnvBootStatus_default_instance_;
class ControlApp;
class ControlAppDefaultTypeInternal;
extern ControlAppDefaultTypeInternal _ControlApp_default_instance_;
class DragFile;
class DragFileDefaultTypeInternal;
extern DragFileDefaultTypeInternal _DragFile_default_instance_;
class EventInfo;
class EventInfoDefaultTypeInternal;
extern EventInfoDefaultTypeInternal _EventInfo_default_instance_;
class EventSequence;
class EventSequenceDefaultTypeInternal;
extern EventSequenceDefaultTypeInternal _EventSequence_default_instance_;
class FilesList;
class FilesListDefaultTypeInternal;
extern FilesListDefaultTypeInternal _FilesList_default_instance_;
class FocusWin;
class FocusWinDefaultTypeInternal;
extern FocusWinDefaultTypeInternal _FocusWin_default_instance_;
class GetInfoList;
class GetInfoListDefaultTypeInternal;
extern GetInfoListDefaultTypeInternal _GetInfoList_default_instance_;
class GetInstalledAppList;
class GetInstalledAppListDefaultTypeInternal;
extern GetInstalledAppListDefaultTypeInternal _GetInstalledAppList_default_instance_;
class GetRunningAppList;
class GetRunningAppListDefaultTypeInternal;
extern GetRunningAppListDefaultTypeInternal _GetRunningAppList_default_instance_;
class GetSystemProp;
class GetSystemPropDefaultTypeInternal;
extern GetSystemPropDefaultTypeInternal _GetSystemProp_default_instance_;
class Info;
class InfoDefaultTypeInternal;
extern InfoDefaultTypeInternal _Info_default_instance_;
class InputMethodRequest;
class InputMethodRequestDefaultTypeInternal;
extern InputMethodRequestDefaultTypeInternal _InputMethodRequest_default_instance_;
class InsertFile;
class InsertFileDefaultTypeInternal;
extern InsertFileDefaultTypeInternal _InsertFile_default_instance_;
class InstallApp;
class InstallAppDefaultTypeInternal;
extern InstallAppDefaultTypeInternal _InstallApp_default_instance_;
class InstalledAppItem;
class InstalledAppItemDefaultTypeInternal;
extern InstalledAppItemDefaultTypeInternal _InstalledAppItem_default_instance_;
class InstalledAppList;
class InstalledAppListDefaultTypeInternal;
extern InstalledAppListDefaultTypeInternal _InstalledAppList_default_instance_;
class LaunchApp;
class LaunchAppDefaultTypeInternal;
extern LaunchAppDefaultTypeInternal _LaunchApp_default_instance_;
class LaunchResult;
class LaunchResultDefaultTypeInternal;
extern LaunchResultDefaultTypeInternal _LaunchResult_default_instance_;
class LinkOpen;
class LinkOpenDefaultTypeInternal;
extern LinkOpenDefaultTypeInternal _LinkOpen_default_instance_;
class MediaPlayStatus;
class MediaPlayStatusDefaultTypeInternal;
extern MediaPlayStatusDefaultTypeInternal _MediaPlayStatus_default_instance_;
class MultiplierSwitch;
class MultiplierSwitchDefaultTypeInternal;
extern MultiplierSwitchDefaultTypeInternal _MultiplierSwitch_default_instance_;
class Notification;
class NotificationDefaultTypeInternal;
extern NotificationDefaultTypeInternal _Notification_default_instance_;
class RemoveFile;
class RemoveFileDefaultTypeInternal;
extern RemoveFileDefaultTypeInternal _RemoveFile_default_instance_;
class RequestMediaFiles;
class RequestMediaFilesDefaultTypeInternal;
extern RequestMediaFilesDefaultTypeInternal _RequestMediaFiles_default_instance_;
class ResponseInfo;
class ResponseInfoDefaultTypeInternal;
extern ResponseInfoDefaultTypeInternal _ResponseInfo_default_instance_;
class RotationChanged;
class RotationChangedDefaultTypeInternal;
extern RotationChangedDefaultTypeInternal _RotationChanged_default_instance_;
class RunningAppItem;
class RunningAppItemDefaultTypeInternal;
extern RunningAppItemDefaultTypeInternal _RunningAppItem_default_instance_;
class RunningAppList;
class RunningAppListDefaultTypeInternal;
extern RunningAppListDefaultTypeInternal _RunningAppList_default_instance_;
class SendSystemProp;
class SendSystemPropDefaultTypeInternal;
extern SendSystemPropDefaultTypeInternal _SendSystemProp_default_instance_;
class SetClipboard;
class SetClipboardDefaultTypeInternal;
extern SetClipboardDefaultTypeInternal _SetClipboard_default_instance_;
class SetProxy;
class SetProxyDefaultTypeInternal;
extern SetProxyDefaultTypeInternal _SetProxy_default_instance_;
class SetSystemProp;
class SetSystemPropDefaultTypeInternal;
extern SetSystemPropDefaultTypeInternal _SetSystemProp_default_instance_;
class SingleFile;
class SingleFileDefaultTypeInternal;
extern SingleFileDefaultTypeInternal _SingleFile_default_instance_;
class UninstallApp;
class UninstallAppDefaultTypeInternal;
extern UninstallAppDefaultTypeInternal _UninstallApp_default_instance_;
class UpdateAppWindowSize;
class UpdateAppWindowSizeDefaultTypeInternal;
extern UpdateAppWindowSizeDefaultTypeInternal _UpdateAppWindowSize_default_instance_;
class UpdateDisplaySize;
class UpdateDisplaySizeDefaultTypeInternal;
extern UpdateDisplaySizeDefaultTypeInternal _UpdateDisplaySize_default_instance_;
class UpdatePackageStatus;
class UpdatePackageStatusDefaultTypeInternal;
extern UpdatePackageStatusDefaultTypeInternal _UpdatePackageStatus_default_instance_;
class VirtualScreenFocusResult;
class VirtualScreenFocusResultDefaultTypeInternal;
extern VirtualScreenFocusResultDefaultTypeInternal _VirtualScreenFocusResult_default_instance_;
}  // namespace kmrecore
}  // namespace kmre
}  // namespace kylinos
}  // namespace cn
namespace google {
namespace protobuf {
template<> ::cn::kylinos::kmre::kmrecore::ActionResult* Arena::CreateMaybeMessage<::cn::kylinos::kmre::kmrecore::ActionResult>(Arena*);
template<> ::cn::kylinos::kmre::kmrecore::AnswerCall* Arena::CreateMaybeMessage<::cn::kylinos::kmre::kmrecore::AnswerCall>(Arena*);
template<> ::cn::kylinos::kmre::kmrecore::AppMultiplier* Arena::CreateMaybeMessage<::cn::kylinos::kmre::kmrecore::AppMultiplier>(Arena*);
template<> ::cn::kylinos::kmre::kmrecore::AppMultiplierList* Arena::CreateMaybeMessage<::cn::kylinos::kmre::kmrecore::AppMultiplierList>(Arena*);
template<> ::cn::kylinos::kmre::kmrecore::CloseApp* Arena::CreateMaybeMessage<::cn::kylinos::kmre::kmrecore::CloseApp>(Arena*);
template<> ::cn::kylinos::kmre::kmrecore::CloseResult* Arena::CreateMaybeMessage<::cn::kylinos::kmre::kmrecore::CloseResult>(Arena*);
template<> ::cn::kylinos::kmre::kmrecore::ContainerEnvBootStatus* Arena::CreateMaybeMessage<::cn::kylinos::kmre::kmrecore::ContainerEnvBootStatus>(Arena*);
template<> ::cn::kylinos::kmre::kmrecore::ControlApp* Arena::CreateMaybeMessage<::cn::kylinos::kmre::kmrecore::ControlApp>(Arena*);
template<> ::cn::kylinos::kmre::kmrecore::DragFile* Arena::CreateMaybeMessage<::cn::kylinos::kmre::kmrecore::DragFile>(Arena*);
template<> ::cn::kylinos::kmre::kmrecore::EventInfo* Arena::CreateMaybeMessage<::cn::kylinos::kmre::kmrecore::EventInfo>(Arena*);
template<> ::cn::kylinos::kmre::kmrecore::EventSequence* Arena::CreateMaybeMessage<::cn::kylinos::kmre::kmrecore::EventSequence>(Arena*);
template<> ::cn::kylinos::kmre::kmrecore::FilesList* Arena::CreateMaybeMessage<::cn::kylinos::kmre::kmrecore::FilesList>(Arena*);
template<> ::cn::kylinos::kmre::kmrecore::FocusWin* Arena::CreateMaybeMessage<::cn::kylinos::kmre::kmrecore::FocusWin>(Arena*);
template<> ::cn::kylinos::kmre::kmrecore::GetInfoList* Arena::CreateMaybeMessage<::cn::kylinos::kmre::kmrecore::GetInfoList>(Arena*);
template<> ::cn::kylinos::kmre::kmrecore::GetInstalledAppList* Arena::CreateMaybeMessage<::cn::kylinos::kmre::kmrecore::GetInstalledAppList>(Arena*);
template<> ::cn::kylinos::kmre::kmrecore::GetRunningAppList* Arena::CreateMaybeMessage<::cn::kylinos::kmre::kmrecore::GetRunningAppList>(Arena*);
template<> ::cn::kylinos::kmre::kmrecore::GetSystemProp* Arena::CreateMaybeMessage<::cn::kylinos::kmre::kmrecore::GetSystemProp>(Arena*);
template<> ::cn::kylinos::kmre::kmrecore::Info* Arena::CreateMaybeMessage<::cn::kylinos::kmre::kmrecore::Info>(Arena*);
template<> ::cn::kylinos::kmre::kmrecore::InputMethodRequest* Arena::CreateMaybeMessage<::cn::kylinos::kmre::kmrecore::InputMethodRequest>(Arena*);
template<> ::cn::kylinos::kmre::kmrecore::InsertFile* Arena::CreateMaybeMessage<::cn::kylinos::kmre::kmrecore::InsertFile>(Arena*);
template<> ::cn::kylinos::kmre::kmrecore::InstallApp* Arena::CreateMaybeMessage<::cn::kylinos::kmre::kmrecore::InstallApp>(Arena*);
template<> ::cn::kylinos::kmre::kmrecore::InstalledAppItem* Arena::CreateMaybeMessage<::cn::kylinos::kmre::kmrecore::InstalledAppItem>(Arena*);
template<> ::cn::kylinos::kmre::kmrecore::InstalledAppList* Arena::CreateMaybeMessage<::cn::kylinos::kmre::kmrecore::InstalledAppList>(Arena*);
template<> ::cn::kylinos::kmre::kmrecore::LaunchApp* Arena::CreateMaybeMessage<::cn::kylinos::kmre::kmrecore::LaunchApp>(Arena*);
template<> ::cn::kylinos::kmre::kmrecore::LaunchResult* Arena::CreateMaybeMessage<::cn::kylinos::kmre::kmrecore::LaunchResult>(Arena*);
template<> ::cn::kylinos::kmre::kmrecore::LinkOpen* Arena::CreateMaybeMessage<::cn::kylinos::kmre::kmrecore::LinkOpen>(Arena*);
template<> ::cn::kylinos::kmre::kmrecore::MediaPlayStatus* Arena::CreateMaybeMessage<::cn::kylinos::kmre::kmrecore::MediaPlayStatus>(Arena*);
template<> ::cn::kylinos::kmre::kmrecore::MultiplierSwitch* Arena::CreateMaybeMessage<::cn::kylinos::kmre::kmrecore::MultiplierSwitch>(Arena*);
template<> ::cn::kylinos::kmre::kmrecore::Notification* Arena::CreateMaybeMessage<::cn::kylinos::kmre::kmrecore::Notification>(Arena*);
template<> ::cn::kylinos::kmre::kmrecore::RemoveFile* Arena::CreateMaybeMessage<::cn::kylinos::kmre::kmrecore::RemoveFile>(Arena*);
template<> ::cn::kylinos::kmre::kmrecore::RequestMediaFiles* Arena::CreateMaybeMessage<::cn::kylinos::kmre::kmrecore::RequestMediaFiles>(Arena*);
template<> ::cn::kylinos::kmre::kmrecore::ResponseInfo* Arena::CreateMaybeMessage<::cn::kylinos::kmre::kmrecore::ResponseInfo>(Arena*);
template<> ::cn::kylinos::kmre::kmrecore::RotationChanged* Arena::CreateMaybeMessage<::cn::kylinos::kmre::kmrecore::RotationChanged>(Arena*);
template<> ::cn::kylinos::kmre::kmrecore::RunningAppItem* Arena::CreateMaybeMessage<::cn::kylinos::kmre::kmrecore::RunningAppItem>(Arena*);
template<> ::cn::kylinos::kmre::kmrecore::RunningAppList* Arena::CreateMaybeMessage<::cn::kylinos::kmre::kmrecore::RunningAppList>(Arena*);
template<> ::cn::kylinos::kmre::kmrecore::SendSystemProp* Arena::CreateMaybeMessage<::cn::kylinos::kmre::kmrecore::SendSystemProp>(Arena*);
template<> ::cn::kylinos::kmre::kmrecore::SetClipboard* Arena::CreateMaybeMessage<::cn::kylinos::kmre::kmrecore::SetClipboard>(Arena*);
template<> ::cn::kylinos::kmre::kmrecore::SetProxy* Arena::CreateMaybeMessage<::cn::kylinos::kmre::kmrecore::SetProxy>(Arena*);
template<> ::cn::kylinos::kmre::kmrecore::SetSystemProp* Arena::CreateMaybeMessage<::cn::kylinos::kmre::kmrecore::SetSystemProp>(Arena*);
template<> ::cn::kylinos::kmre::kmrecore::SingleFile* Arena::CreateMaybeMessage<::cn::kylinos::kmre::kmrecore::SingleFile>(Arena*);
template<> ::cn::kylinos::kmre::kmrecore::UninstallApp* Arena::CreateMaybeMessage<::cn::kylinos::kmre::kmrecore::UninstallApp>(Arena*);
template<> ::cn::kylinos::kmre::kmrecore::UpdateAppWindowSize* Arena::CreateMaybeMessage<::cn::kylinos::kmre::kmrecore::UpdateAppWindowSize>(Arena*);
template<> ::cn::kylinos::kmre::kmrecore::UpdateDisplaySize* Arena::CreateMaybeMessage<::cn::kylinos::kmre::kmrecore::UpdateDisplaySize>(Arena*);
template<> ::cn::kylinos::kmre::kmrecore::UpdatePackageStatus* Arena::CreateMaybeMessage<::cn::kylinos::kmre::kmrecore::UpdatePackageStatus>(Arena*);
template<> ::cn::kylinos::kmre::kmrecore::VirtualScreenFocusResult* Arena::CreateMaybeMessage<::cn::kylinos::kmre::kmrecore::VirtualScreenFocusResult>(Arena*);
}  // namespace protobuf
}  // namespace google
namespace cn {
namespace kylinos {
namespace kmre {
namespace kmrecore {

// ===================================================================

class InstallApp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:cn.kylinos.kmre.kmrecore.InstallApp) */ {
 public:
  InstallApp();
  virtual ~InstallApp();

  InstallApp(const InstallApp& from);

  inline InstallApp& operator=(const InstallApp& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  InstallApp(InstallApp&& from) noexcept
    : InstallApp() {
    *this = ::std::move(from);
  }

  inline InstallApp& operator=(InstallApp&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const InstallApp& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const InstallApp* internal_default_instance() {
    return reinterpret_cast<const InstallApp*>(
               &_InstallApp_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  void Swap(InstallApp* other);
  friend void swap(InstallApp& a, InstallApp& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline InstallApp* New() const final {
    return CreateMaybeMessage<InstallApp>(NULL);
  }

  InstallApp* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<InstallApp>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const InstallApp& from);
  void MergeFrom(const InstallApp& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(InstallApp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string file_name = 1;
  bool has_file_name() const;
  void clear_file_name();
  static const int kFileNameFieldNumber = 1;
  const ::std::string& file_name() const;
  void set_file_name(const ::std::string& value);
  #if LANG_CXX11
  void set_file_name(::std::string&& value);
  #endif
  void set_file_name(const char* value);
  void set_file_name(const char* value, size_t size);
  ::std::string* mutable_file_name();
  ::std::string* release_file_name();
  void set_allocated_file_name(::std::string* file_name);

  // required string app_name = 2;
  bool has_app_name() const;
  void clear_app_name();
  static const int kAppNameFieldNumber = 2;
  const ::std::string& app_name() const;
  void set_app_name(const ::std::string& value);
  #if LANG_CXX11
  void set_app_name(::std::string&& value);
  #endif
  void set_app_name(const char* value);
  void set_app_name(const char* value, size_t size);
  ::std::string* mutable_app_name();
  ::std::string* release_app_name();
  void set_allocated_app_name(::std::string* app_name);

  // required string package_name = 3;
  bool has_package_name() const;
  void clear_package_name();
  static const int kPackageNameFieldNumber = 3;
  const ::std::string& package_name() const;
  void set_package_name(const ::std::string& value);
  #if LANG_CXX11
  void set_package_name(::std::string&& value);
  #endif
  void set_package_name(const char* value);
  void set_package_name(const char* value, size_t size);
  ::std::string* mutable_package_name();
  ::std::string* release_package_name();
  void set_allocated_package_name(::std::string* package_name);

  // @@protoc_insertion_point(class_scope:cn.kylinos.kmre.kmrecore.InstallApp)
 private:
  void set_has_file_name();
  void clear_has_file_name();
  void set_has_app_name();
  void clear_has_app_name();
  void set_has_package_name();
  void clear_has_package_name();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr file_name_;
  ::google::protobuf::internal::ArenaStringPtr app_name_;
  ::google::protobuf::internal::ArenaStringPtr package_name_;
  friend struct ::protobuf_KmreCore_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class UninstallApp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:cn.kylinos.kmre.kmrecore.UninstallApp) */ {
 public:
  UninstallApp();
  virtual ~UninstallApp();

  UninstallApp(const UninstallApp& from);

  inline UninstallApp& operator=(const UninstallApp& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  UninstallApp(UninstallApp&& from) noexcept
    : UninstallApp() {
    *this = ::std::move(from);
  }

  inline UninstallApp& operator=(UninstallApp&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const UninstallApp& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const UninstallApp* internal_default_instance() {
    return reinterpret_cast<const UninstallApp*>(
               &_UninstallApp_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  void Swap(UninstallApp* other);
  friend void swap(UninstallApp& a, UninstallApp& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline UninstallApp* New() const final {
    return CreateMaybeMessage<UninstallApp>(NULL);
  }

  UninstallApp* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<UninstallApp>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const UninstallApp& from);
  void MergeFrom(const UninstallApp& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(UninstallApp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string package_name = 1;
  bool has_package_name() const;
  void clear_package_name();
  static const int kPackageNameFieldNumber = 1;
  const ::std::string& package_name() const;
  void set_package_name(const ::std::string& value);
  #if LANG_CXX11
  void set_package_name(::std::string&& value);
  #endif
  void set_package_name(const char* value);
  void set_package_name(const char* value, size_t size);
  ::std::string* mutable_package_name();
  ::std::string* release_package_name();
  void set_allocated_package_name(::std::string* package_name);

  // @@protoc_insertion_point(class_scope:cn.kylinos.kmre.kmrecore.UninstallApp)
 private:
  void set_has_package_name();
  void clear_has_package_name();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr package_name_;
  friend struct ::protobuf_KmreCore_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class LaunchApp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:cn.kylinos.kmre.kmrecore.LaunchApp) */ {
 public:
  LaunchApp();
  virtual ~LaunchApp();

  LaunchApp(const LaunchApp& from);

  inline LaunchApp& operator=(const LaunchApp& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  LaunchApp(LaunchApp&& from) noexcept
    : LaunchApp() {
    *this = ::std::move(from);
  }

  inline LaunchApp& operator=(LaunchApp&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const LaunchApp& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const LaunchApp* internal_default_instance() {
    return reinterpret_cast<const LaunchApp*>(
               &_LaunchApp_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  void Swap(LaunchApp* other);
  friend void swap(LaunchApp& a, LaunchApp& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline LaunchApp* New() const final {
    return CreateMaybeMessage<LaunchApp>(NULL);
  }

  LaunchApp* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<LaunchApp>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const LaunchApp& from);
  void MergeFrom(const LaunchApp& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(LaunchApp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string package_name = 1;
  bool has_package_name() const;
  void clear_package_name();
  static const int kPackageNameFieldNumber = 1;
  const ::std::string& package_name() const;
  void set_package_name(const ::std::string& value);
  #if LANG_CXX11
  void set_package_name(::std::string&& value);
  #endif
  void set_package_name(const char* value);
  void set_package_name(const char* value, size_t size);
  ::std::string* mutable_package_name();
  ::std::string* release_package_name();
  void set_allocated_package_name(::std::string* package_name);

  // required bool fullscreen = 2;
  bool has_fullscreen() const;
  void clear_fullscreen();
  static const int kFullscreenFieldNumber = 2;
  bool fullscreen() const;
  void set_fullscreen(bool value);

  // required int32 width = 3;
  bool has_width() const;
  void clear_width();
  static const int kWidthFieldNumber = 3;
  ::google::protobuf::int32 width() const;
  void set_width(::google::protobuf::int32 value);

  // required int32 height = 4;
  bool has_height() const;
  void clear_height();
  static const int kHeightFieldNumber = 4;
  ::google::protobuf::int32 height() const;
  void set_height(::google::protobuf::int32 value);

  // required int32 density = 5;
  bool has_density() const;
  void clear_density();
  static const int kDensityFieldNumber = 5;
  ::google::protobuf::int32 density() const;
  void set_density(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:cn.kylinos.kmre.kmrecore.LaunchApp)
 private:
  void set_has_package_name();
  void clear_has_package_name();
  void set_has_fullscreen();
  void clear_has_fullscreen();
  void set_has_width();
  void clear_has_width();
  void set_has_height();
  void clear_has_height();
  void set_has_density();
  void clear_has_density();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr package_name_;
  bool fullscreen_;
  ::google::protobuf::int32 width_;
  ::google::protobuf::int32 height_;
  ::google::protobuf::int32 density_;
  friend struct ::protobuf_KmreCore_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CloseApp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:cn.kylinos.kmre.kmrecore.CloseApp) */ {
 public:
  CloseApp();
  virtual ~CloseApp();

  CloseApp(const CloseApp& from);

  inline CloseApp& operator=(const CloseApp& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CloseApp(CloseApp&& from) noexcept
    : CloseApp() {
    *this = ::std::move(from);
  }

  inline CloseApp& operator=(CloseApp&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CloseApp& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CloseApp* internal_default_instance() {
    return reinterpret_cast<const CloseApp*>(
               &_CloseApp_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    3;

  void Swap(CloseApp* other);
  friend void swap(CloseApp& a, CloseApp& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CloseApp* New() const final {
    return CreateMaybeMessage<CloseApp>(NULL);
  }

  CloseApp* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CloseApp>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CloseApp& from);
  void MergeFrom(const CloseApp& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CloseApp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string app_name = 1;
  bool has_app_name() const;
  void clear_app_name();
  static const int kAppNameFieldNumber = 1;
  const ::std::string& app_name() const;
  void set_app_name(const ::std::string& value);
  #if LANG_CXX11
  void set_app_name(::std::string&& value);
  #endif
  void set_app_name(const char* value);
  void set_app_name(const char* value, size_t size);
  ::std::string* mutable_app_name();
  ::std::string* release_app_name();
  void set_allocated_app_name(::std::string* app_name);

  // required string package_name = 2;
  bool has_package_name() const;
  void clear_package_name();
  static const int kPackageNameFieldNumber = 2;
  const ::std::string& package_name() const;
  void set_package_name(const ::std::string& value);
  #if LANG_CXX11
  void set_package_name(::std::string&& value);
  #endif
  void set_package_name(const char* value);
  void set_package_name(const char* value, size_t size);
  ::std::string* mutable_package_name();
  ::std::string* release_package_name();
  void set_allocated_package_name(::std::string* package_name);

  // optional bool force_kill = 3;
  bool has_force_kill() const;
  void clear_force_kill();
  static const int kForceKillFieldNumber = 3;
  bool force_kill() const;
  void set_force_kill(bool value);

  // @@protoc_insertion_point(class_scope:cn.kylinos.kmre.kmrecore.CloseApp)
 private:
  void set_has_app_name();
  void clear_has_app_name();
  void set_has_package_name();
  void clear_has_package_name();
  void set_has_force_kill();
  void clear_has_force_kill();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr app_name_;
  ::google::protobuf::internal::ArenaStringPtr package_name_;
  bool force_kill_;
  friend struct ::protobuf_KmreCore_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class GetInstalledAppList : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:cn.kylinos.kmre.kmrecore.GetInstalledAppList) */ {
 public:
  GetInstalledAppList();
  virtual ~GetInstalledAppList();

  GetInstalledAppList(const GetInstalledAppList& from);

  inline GetInstalledAppList& operator=(const GetInstalledAppList& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  GetInstalledAppList(GetInstalledAppList&& from) noexcept
    : GetInstalledAppList() {
    *this = ::std::move(from);
  }

  inline GetInstalledAppList& operator=(GetInstalledAppList&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GetInstalledAppList& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const GetInstalledAppList* internal_default_instance() {
    return reinterpret_cast<const GetInstalledAppList*>(
               &_GetInstalledAppList_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    4;

  void Swap(GetInstalledAppList* other);
  friend void swap(GetInstalledAppList& a, GetInstalledAppList& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline GetInstalledAppList* New() const final {
    return CreateMaybeMessage<GetInstalledAppList>(NULL);
  }

  GetInstalledAppList* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<GetInstalledAppList>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const GetInstalledAppList& from);
  void MergeFrom(const GetInstalledAppList& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(GetInstalledAppList* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional bool include_hide_app = 1;
  bool has_include_hide_app() const;
  void clear_include_hide_app();
  static const int kIncludeHideAppFieldNumber = 1;
  bool include_hide_app() const;
  void set_include_hide_app(bool value);

  // @@protoc_insertion_point(class_scope:cn.kylinos.kmre.kmrecore.GetInstalledAppList)
 private:
  void set_has_include_hide_app();
  void clear_has_include_hide_app();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  bool include_hide_app_;
  friend struct ::protobuf_KmreCore_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class GetRunningAppList : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:cn.kylinos.kmre.kmrecore.GetRunningAppList) */ {
 public:
  GetRunningAppList();
  virtual ~GetRunningAppList();

  GetRunningAppList(const GetRunningAppList& from);

  inline GetRunningAppList& operator=(const GetRunningAppList& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  GetRunningAppList(GetRunningAppList&& from) noexcept
    : GetRunningAppList() {
    *this = ::std::move(from);
  }

  inline GetRunningAppList& operator=(GetRunningAppList&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GetRunningAppList& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const GetRunningAppList* internal_default_instance() {
    return reinterpret_cast<const GetRunningAppList*>(
               &_GetRunningAppList_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    5;

  void Swap(GetRunningAppList* other);
  friend void swap(GetRunningAppList& a, GetRunningAppList& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline GetRunningAppList* New() const final {
    return CreateMaybeMessage<GetRunningAppList>(NULL);
  }

  GetRunningAppList* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<GetRunningAppList>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const GetRunningAppList& from);
  void MergeFrom(const GetRunningAppList& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(GetRunningAppList* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required bool with_thumbnail = 1;
  bool has_with_thumbnail() const;
  void clear_with_thumbnail();
  static const int kWithThumbnailFieldNumber = 1;
  bool with_thumbnail() const;
  void set_with_thumbnail(bool value);

  // @@protoc_insertion_point(class_scope:cn.kylinos.kmre.kmrecore.GetRunningAppList)
 private:
  void set_has_with_thumbnail();
  void clear_has_with_thumbnail();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  bool with_thumbnail_;
  friend struct ::protobuf_KmreCore_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SetClipboard : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:cn.kylinos.kmre.kmrecore.SetClipboard) */ {
 public:
  SetClipboard();
  virtual ~SetClipboard();

  SetClipboard(const SetClipboard& from);

  inline SetClipboard& operator=(const SetClipboard& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  SetClipboard(SetClipboard&& from) noexcept
    : SetClipboard() {
    *this = ::std::move(from);
  }

  inline SetClipboard& operator=(SetClipboard&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SetClipboard& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const SetClipboard* internal_default_instance() {
    return reinterpret_cast<const SetClipboard*>(
               &_SetClipboard_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    6;

  void Swap(SetClipboard* other);
  friend void swap(SetClipboard& a, SetClipboard& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline SetClipboard* New() const final {
    return CreateMaybeMessage<SetClipboard>(NULL);
  }

  SetClipboard* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<SetClipboard>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const SetClipboard& from);
  void MergeFrom(const SetClipboard& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(SetClipboard* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string content = 1;
  bool has_content() const;
  void clear_content();
  static const int kContentFieldNumber = 1;
  const ::std::string& content() const;
  void set_content(const ::std::string& value);
  #if LANG_CXX11
  void set_content(::std::string&& value);
  #endif
  void set_content(const char* value);
  void set_content(const char* value, size_t size);
  ::std::string* mutable_content();
  ::std::string* release_content();
  void set_allocated_content(::std::string* content);

  // @@protoc_insertion_point(class_scope:cn.kylinos.kmre.kmrecore.SetClipboard)
 private:
  void set_has_content();
  void clear_has_content();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr content_;
  friend struct ::protobuf_KmreCore_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class FocusWin : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:cn.kylinos.kmre.kmrecore.FocusWin) */ {
 public:
  FocusWin();
  virtual ~FocusWin();

  FocusWin(const FocusWin& from);

  inline FocusWin& operator=(const FocusWin& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  FocusWin(FocusWin&& from) noexcept
    : FocusWin() {
    *this = ::std::move(from);
  }

  inline FocusWin& operator=(FocusWin&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const FocusWin& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const FocusWin* internal_default_instance() {
    return reinterpret_cast<const FocusWin*>(
               &_FocusWin_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    7;

  void Swap(FocusWin* other);
  friend void swap(FocusWin& a, FocusWin& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline FocusWin* New() const final {
    return CreateMaybeMessage<FocusWin>(NULL);
  }

  FocusWin* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<FocusWin>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const FocusWin& from);
  void MergeFrom(const FocusWin& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(FocusWin* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 focus_win = 1;
  bool has_focus_win() const;
  void clear_focus_win();
  static const int kFocusWinFieldNumber = 1;
  ::google::protobuf::int32 focus_win() const;
  void set_focus_win(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:cn.kylinos.kmre.kmrecore.FocusWin)
 private:
  void set_has_focus_win();
  void clear_has_focus_win();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::int32 focus_win_;
  friend struct ::protobuf_KmreCore_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ControlApp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:cn.kylinos.kmre.kmrecore.ControlApp) */ {
 public:
  ControlApp();
  virtual ~ControlApp();

  ControlApp(const ControlApp& from);

  inline ControlApp& operator=(const ControlApp& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ControlApp(ControlApp&& from) noexcept
    : ControlApp() {
    *this = ::std::move(from);
  }

  inline ControlApp& operator=(ControlApp&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ControlApp& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ControlApp* internal_default_instance() {
    return reinterpret_cast<const ControlApp*>(
               &_ControlApp_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    8;

  void Swap(ControlApp* other);
  friend void swap(ControlApp& a, ControlApp& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ControlApp* New() const final {
    return CreateMaybeMessage<ControlApp>(NULL);
  }

  ControlApp* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ControlApp>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ControlApp& from);
  void MergeFrom(const ControlApp& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ControlApp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string package_name = 2;
  bool has_package_name() const;
  void clear_package_name();
  static const int kPackageNameFieldNumber = 2;
  const ::std::string& package_name() const;
  void set_package_name(const ::std::string& value);
  #if LANG_CXX11
  void set_package_name(::std::string&& value);
  #endif
  void set_package_name(const char* value);
  void set_package_name(const char* value, size_t size);
  ::std::string* mutable_package_name();
  ::std::string* release_package_name();
  void set_allocated_package_name(::std::string* package_name);

  // required int32 display_id = 1;
  bool has_display_id() const;
  void clear_display_id();
  static const int kDisplayIdFieldNumber = 1;
  ::google::protobuf::int32 display_id() const;
  void set_display_id(::google::protobuf::int32 value);

  // required int32 event_type = 3;
  bool has_event_type() const;
  void clear_event_type();
  static const int kEventTypeFieldNumber = 3;
  ::google::protobuf::int32 event_type() const;
  void set_event_type(::google::protobuf::int32 value);

  // optional int32 event_value = 4;
  bool has_event_value() const;
  void clear_event_value();
  static const int kEventValueFieldNumber = 4;
  ::google::protobuf::int32 event_value() const;
  void set_event_value(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:cn.kylinos.kmre.kmrecore.ControlApp)
 private:
  void set_has_display_id();
  void clear_has_display_id();
  void set_has_package_name();
  void clear_has_package_name();
  void set_has_event_type();
  void clear_has_event_type();
  void set_has_event_value();
  void clear_has_event_value();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr package_name_;
  ::google::protobuf::int32 display_id_;
  ::google::protobuf::int32 event_type_;
  ::google::protobuf::int32 event_value_;
  friend struct ::protobuf_KmreCore_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class InsertFile : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:cn.kylinos.kmre.kmrecore.InsertFile) */ {
 public:
  InsertFile();
  virtual ~InsertFile();

  InsertFile(const InsertFile& from);

  inline InsertFile& operator=(const InsertFile& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  InsertFile(InsertFile&& from) noexcept
    : InsertFile() {
    *this = ::std::move(from);
  }

  inline InsertFile& operator=(InsertFile&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const InsertFile& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const InsertFile* internal_default_instance() {
    return reinterpret_cast<const InsertFile*>(
               &_InsertFile_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    9;

  void Swap(InsertFile* other);
  friend void swap(InsertFile& a, InsertFile& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline InsertFile* New() const final {
    return CreateMaybeMessage<InsertFile>(NULL);
  }

  InsertFile* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<InsertFile>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const InsertFile& from);
  void MergeFrom(const InsertFile& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(InsertFile* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string data = 1;
  bool has_data() const;
  void clear_data();
  static const int kDataFieldNumber = 1;
  const ::std::string& data() const;
  void set_data(const ::std::string& value);
  #if LANG_CXX11
  void set_data(::std::string&& value);
  #endif
  void set_data(const char* value);
  void set_data(const char* value, size_t size);
  ::std::string* mutable_data();
  ::std::string* release_data();
  void set_allocated_data(::std::string* data);

  // required string mime_type = 2;
  bool has_mime_type() const;
  void clear_mime_type();
  static const int kMimeTypeFieldNumber = 2;
  const ::std::string& mime_type() const;
  void set_mime_type(const ::std::string& value);
  #if LANG_CXX11
  void set_mime_type(::std::string&& value);
  #endif
  void set_mime_type(const char* value);
  void set_mime_type(const char* value, size_t size);
  ::std::string* mutable_mime_type();
  ::std::string* release_mime_type();
  void set_allocated_mime_type(::std::string* mime_type);

  // @@protoc_insertion_point(class_scope:cn.kylinos.kmre.kmrecore.InsertFile)
 private:
  void set_has_data();
  void clear_has_data();
  void set_has_mime_type();
  void clear_has_mime_type();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr data_;
  ::google::protobuf::internal::ArenaStringPtr mime_type_;
  friend struct ::protobuf_KmreCore_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class RemoveFile : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:cn.kylinos.kmre.kmrecore.RemoveFile) */ {
 public:
  RemoveFile();
  virtual ~RemoveFile();

  RemoveFile(const RemoveFile& from);

  inline RemoveFile& operator=(const RemoveFile& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  RemoveFile(RemoveFile&& from) noexcept
    : RemoveFile() {
    *this = ::std::move(from);
  }

  inline RemoveFile& operator=(RemoveFile&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RemoveFile& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const RemoveFile* internal_default_instance() {
    return reinterpret_cast<const RemoveFile*>(
               &_RemoveFile_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    10;

  void Swap(RemoveFile* other);
  friend void swap(RemoveFile& a, RemoveFile& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline RemoveFile* New() const final {
    return CreateMaybeMessage<RemoveFile>(NULL);
  }

  RemoveFile* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<RemoveFile>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const RemoveFile& from);
  void MergeFrom(const RemoveFile& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(RemoveFile* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string data = 1;
  bool has_data() const;
  void clear_data();
  static const int kDataFieldNumber = 1;
  const ::std::string& data() const;
  void set_data(const ::std::string& value);
  #if LANG_CXX11
  void set_data(::std::string&& value);
  #endif
  void set_data(const char* value);
  void set_data(const char* value, size_t size);
  ::std::string* mutable_data();
  ::std::string* release_data();
  void set_allocated_data(::std::string* data);

  // required string mime_type = 2;
  bool has_mime_type() const;
  void clear_mime_type();
  static const int kMimeTypeFieldNumber = 2;
  const ::std::string& mime_type() const;
  void set_mime_type(const ::std::string& value);
  #if LANG_CXX11
  void set_mime_type(::std::string&& value);
  #endif
  void set_mime_type(const char* value);
  void set_mime_type(const char* value, size_t size);
  ::std::string* mutable_mime_type();
  ::std::string* release_mime_type();
  void set_allocated_mime_type(::std::string* mime_type);

  // @@protoc_insertion_point(class_scope:cn.kylinos.kmre.kmrecore.RemoveFile)
 private:
  void set_has_data();
  void clear_has_data();
  void set_has_mime_type();
  void clear_has_mime_type();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr data_;
  ::google::protobuf::internal::ArenaStringPtr mime_type_;
  friend struct ::protobuf_KmreCore_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class RequestMediaFiles : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:cn.kylinos.kmre.kmrecore.RequestMediaFiles) */ {
 public:
  RequestMediaFiles();
  virtual ~RequestMediaFiles();

  RequestMediaFiles(const RequestMediaFiles& from);

  inline RequestMediaFiles& operator=(const RequestMediaFiles& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  RequestMediaFiles(RequestMediaFiles&& from) noexcept
    : RequestMediaFiles() {
    *this = ::std::move(from);
  }

  inline RequestMediaFiles& operator=(RequestMediaFiles&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RequestMediaFiles& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const RequestMediaFiles* internal_default_instance() {
    return reinterpret_cast<const RequestMediaFiles*>(
               &_RequestMediaFiles_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    11;

  void Swap(RequestMediaFiles* other);
  friend void swap(RequestMediaFiles& a, RequestMediaFiles& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline RequestMediaFiles* New() const final {
    return CreateMaybeMessage<RequestMediaFiles>(NULL);
  }

  RequestMediaFiles* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<RequestMediaFiles>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const RequestMediaFiles& from);
  void MergeFrom(const RequestMediaFiles& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(RequestMediaFiles* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 type = 1;
  bool has_type() const;
  void clear_type();
  static const int kTypeFieldNumber = 1;
  ::google::protobuf::int32 type() const;
  void set_type(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:cn.kylinos.kmre.kmrecore.RequestMediaFiles)
 private:
  void set_has_type();
  void clear_has_type();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::int32 type_;
  friend struct ::protobuf_KmreCore_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class DragFile : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:cn.kylinos.kmre.kmrecore.DragFile) */ {
 public:
  DragFile();
  virtual ~DragFile();

  DragFile(const DragFile& from);

  inline DragFile& operator=(const DragFile& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  DragFile(DragFile&& from) noexcept
    : DragFile() {
    *this = ::std::move(from);
  }

  inline DragFile& operator=(DragFile&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DragFile& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const DragFile* internal_default_instance() {
    return reinterpret_cast<const DragFile*>(
               &_DragFile_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    12;

  void Swap(DragFile* other);
  friend void swap(DragFile& a, DragFile& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline DragFile* New() const final {
    return CreateMaybeMessage<DragFile>(NULL);
  }

  DragFile* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<DragFile>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const DragFile& from);
  void MergeFrom(const DragFile& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(DragFile* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string file_path = 1;
  bool has_file_path() const;
  void clear_file_path();
  static const int kFilePathFieldNumber = 1;
  const ::std::string& file_path() const;
  void set_file_path(const ::std::string& value);
  #if LANG_CXX11
  void set_file_path(::std::string&& value);
  #endif
  void set_file_path(const char* value);
  void set_file_path(const char* value, size_t size);
  ::std::string* mutable_file_path();
  ::std::string* release_file_path();
  void set_allocated_file_path(::std::string* file_path);

  // required string package_name = 2;
  bool has_package_name() const;
  void clear_package_name();
  static const int kPackageNameFieldNumber = 2;
  const ::std::string& package_name() const;
  void set_package_name(const ::std::string& value);
  #if LANG_CXX11
  void set_package_name(::std::string&& value);
  #endif
  void set_package_name(const char* value);
  void set_package_name(const char* value, size_t size);
  ::std::string* mutable_package_name();
  ::std::string* release_package_name();
  void set_allocated_package_name(::std::string* package_name);

  // optional int32 display_id = 3;
  bool has_display_id() const;
  void clear_display_id();
  static const int kDisplayIdFieldNumber = 3;
  ::google::protobuf::int32 display_id() const;
  void set_display_id(::google::protobuf::int32 value);

  // optional bool has_double_display = 4;
  bool has_has_double_display() const;
  void clear_has_double_display();
  static const int kHasDoubleDisplayFieldNumber = 4;
  bool has_double_display() const;
  void set_has_double_display(bool value);

  // @@protoc_insertion_point(class_scope:cn.kylinos.kmre.kmrecore.DragFile)
 private:
  void set_has_file_path();
  void clear_has_file_path();
  void set_has_package_name();
  void clear_has_package_name();
  void set_has_display_id();
  void clear_has_display_id();
  void set_has_has_double_display();
  void clear_has_has_double_display();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr file_path_;
  ::google::protobuf::internal::ArenaStringPtr package_name_;
  ::google::protobuf::int32 display_id_;
  bool has_double_display_;
  friend struct ::protobuf_KmreCore_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class RotationChanged : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:cn.kylinos.kmre.kmrecore.RotationChanged) */ {
 public:
  RotationChanged();
  virtual ~RotationChanged();

  RotationChanged(const RotationChanged& from);

  inline RotationChanged& operator=(const RotationChanged& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  RotationChanged(RotationChanged&& from) noexcept
    : RotationChanged() {
    *this = ::std::move(from);
  }

  inline RotationChanged& operator=(RotationChanged&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RotationChanged& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const RotationChanged* internal_default_instance() {
    return reinterpret_cast<const RotationChanged*>(
               &_RotationChanged_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    13;

  void Swap(RotationChanged* other);
  friend void swap(RotationChanged& a, RotationChanged& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline RotationChanged* New() const final {
    return CreateMaybeMessage<RotationChanged>(NULL);
  }

  RotationChanged* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<RotationChanged>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const RotationChanged& from);
  void MergeFrom(const RotationChanged& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(RotationChanged* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string package_name = 2;
  bool has_package_name() const;
  void clear_package_name();
  static const int kPackageNameFieldNumber = 2;
  const ::std::string& package_name() const;
  void set_package_name(const ::std::string& value);
  #if LANG_CXX11
  void set_package_name(::std::string&& value);
  #endif
  void set_package_name(const char* value);
  void set_package_name(const char* value, size_t size);
  ::std::string* mutable_package_name();
  ::std::string* release_package_name();
  void set_allocated_package_name(::std::string* package_name);

  // required int32 display_id = 1;
  bool has_display_id() const;
  void clear_display_id();
  static const int kDisplayIdFieldNumber = 1;
  ::google::protobuf::int32 display_id() const;
  void set_display_id(::google::protobuf::int32 value);

  // required int32 width = 3;
  bool has_width() const;
  void clear_width();
  static const int kWidthFieldNumber = 3;
  ::google::protobuf::int32 width() const;
  void set_width(::google::protobuf::int32 value);

  // required int32 height = 4;
  bool has_height() const;
  void clear_height();
  static const int kHeightFieldNumber = 4;
  ::google::protobuf::int32 height() const;
  void set_height(::google::protobuf::int32 value);

  // required int32 rotation = 5;
  bool has_rotation() const;
  void clear_rotation();
  static const int kRotationFieldNumber = 5;
  ::google::protobuf::int32 rotation() const;
  void set_rotation(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:cn.kylinos.kmre.kmrecore.RotationChanged)
 private:
  void set_has_display_id();
  void clear_has_display_id();
  void set_has_package_name();
  void clear_has_package_name();
  void set_has_width();
  void clear_has_width();
  void set_has_height();
  void clear_has_height();
  void set_has_rotation();
  void clear_has_rotation();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr package_name_;
  ::google::protobuf::int32 display_id_;
  ::google::protobuf::int32 width_;
  ::google::protobuf::int32 height_;
  ::google::protobuf::int32 rotation_;
  friend struct ::protobuf_KmreCore_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SetSystemProp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:cn.kylinos.kmre.kmrecore.SetSystemProp) */ {
 public:
  SetSystemProp();
  virtual ~SetSystemProp();

  SetSystemProp(const SetSystemProp& from);

  inline SetSystemProp& operator=(const SetSystemProp& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  SetSystemProp(SetSystemProp&& from) noexcept
    : SetSystemProp() {
    *this = ::std::move(from);
  }

  inline SetSystemProp& operator=(SetSystemProp&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SetSystemProp& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const SetSystemProp* internal_default_instance() {
    return reinterpret_cast<const SetSystemProp*>(
               &_SetSystemProp_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    14;

  void Swap(SetSystemProp* other);
  friend void swap(SetSystemProp& a, SetSystemProp& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline SetSystemProp* New() const final {
    return CreateMaybeMessage<SetSystemProp>(NULL);
  }

  SetSystemProp* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<SetSystemProp>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const SetSystemProp& from);
  void MergeFrom(const SetSystemProp& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(SetSystemProp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string value_field = 2;
  bool has_value_field() const;
  void clear_value_field();
  static const int kValueFieldFieldNumber = 2;
  const ::std::string& value_field() const;
  void set_value_field(const ::std::string& value);
  #if LANG_CXX11
  void set_value_field(::std::string&& value);
  #endif
  void set_value_field(const char* value);
  void set_value_field(const char* value, size_t size);
  ::std::string* mutable_value_field();
  ::std::string* release_value_field();
  void set_allocated_value_field(::std::string* value_field);

  // required string value = 3;
  bool has_value() const;
  void clear_value();
  static const int kValueFieldNumber = 3;
  const ::std::string& value() const;
  void set_value(const ::std::string& value);
  #if LANG_CXX11
  void set_value(::std::string&& value);
  #endif
  void set_value(const char* value);
  void set_value(const char* value, size_t size);
  ::std::string* mutable_value();
  ::std::string* release_value();
  void set_allocated_value(::std::string* value);

  // required int32 event_type = 1;
  bool has_event_type() const;
  void clear_event_type();
  static const int kEventTypeFieldNumber = 1;
  ::google::protobuf::int32 event_type() const;
  void set_event_type(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:cn.kylinos.kmre.kmrecore.SetSystemProp)
 private:
  void set_has_event_type();
  void clear_has_event_type();
  void set_has_value_field();
  void clear_has_value_field();
  void set_has_value();
  void clear_has_value();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr value_field_;
  ::google::protobuf::internal::ArenaStringPtr value_;
  ::google::protobuf::int32 event_type_;
  friend struct ::protobuf_KmreCore_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class GetSystemProp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:cn.kylinos.kmre.kmrecore.GetSystemProp) */ {
 public:
  GetSystemProp();
  virtual ~GetSystemProp();

  GetSystemProp(const GetSystemProp& from);

  inline GetSystemProp& operator=(const GetSystemProp& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  GetSystemProp(GetSystemProp&& from) noexcept
    : GetSystemProp() {
    *this = ::std::move(from);
  }

  inline GetSystemProp& operator=(GetSystemProp&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GetSystemProp& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const GetSystemProp* internal_default_instance() {
    return reinterpret_cast<const GetSystemProp*>(
               &_GetSystemProp_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    15;

  void Swap(GetSystemProp* other);
  friend void swap(GetSystemProp& a, GetSystemProp& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline GetSystemProp* New() const final {
    return CreateMaybeMessage<GetSystemProp>(NULL);
  }

  GetSystemProp* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<GetSystemProp>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const GetSystemProp& from);
  void MergeFrom(const GetSystemProp& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(GetSystemProp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string value_field = 2;
  bool has_value_field() const;
  void clear_value_field();
  static const int kValueFieldFieldNumber = 2;
  const ::std::string& value_field() const;
  void set_value_field(const ::std::string& value);
  #if LANG_CXX11
  void set_value_field(::std::string&& value);
  #endif
  void set_value_field(const char* value);
  void set_value_field(const char* value, size_t size);
  ::std::string* mutable_value_field();
  ::std::string* release_value_field();
  void set_allocated_value_field(::std::string* value_field);

  // required int32 event_type = 1;
  bool has_event_type() const;
  void clear_event_type();
  static const int kEventTypeFieldNumber = 1;
  ::google::protobuf::int32 event_type() const;
  void set_event_type(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:cn.kylinos.kmre.kmrecore.GetSystemProp)
 private:
  void set_has_event_type();
  void clear_has_event_type();
  void set_has_value_field();
  void clear_has_value_field();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr value_field_;
  ::google::protobuf::int32 event_type_;
  friend struct ::protobuf_KmreCore_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class UpdateAppWindowSize : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:cn.kylinos.kmre.kmrecore.UpdateAppWindowSize) */ {
 public:
  UpdateAppWindowSize();
  virtual ~UpdateAppWindowSize();

  UpdateAppWindowSize(const UpdateAppWindowSize& from);

  inline UpdateAppWindowSize& operator=(const UpdateAppWindowSize& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  UpdateAppWindowSize(UpdateAppWindowSize&& from) noexcept
    : UpdateAppWindowSize() {
    *this = ::std::move(from);
  }

  inline UpdateAppWindowSize& operator=(UpdateAppWindowSize&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const UpdateAppWindowSize& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const UpdateAppWindowSize* internal_default_instance() {
    return reinterpret_cast<const UpdateAppWindowSize*>(
               &_UpdateAppWindowSize_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    16;

  void Swap(UpdateAppWindowSize* other);
  friend void swap(UpdateAppWindowSize& a, UpdateAppWindowSize& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline UpdateAppWindowSize* New() const final {
    return CreateMaybeMessage<UpdateAppWindowSize>(NULL);
  }

  UpdateAppWindowSize* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<UpdateAppWindowSize>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const UpdateAppWindowSize& from);
  void MergeFrom(const UpdateAppWindowSize& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(UpdateAppWindowSize* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string package_name = 1;
  bool has_package_name() const;
  void clear_package_name();
  static const int kPackageNameFieldNumber = 1;
  const ::std::string& package_name() const;
  void set_package_name(const ::std::string& value);
  #if LANG_CXX11
  void set_package_name(::std::string&& value);
  #endif
  void set_package_name(const char* value);
  void set_package_name(const char* value, size_t size);
  ::std::string* mutable_package_name();
  ::std::string* release_package_name();
  void set_allocated_package_name(::std::string* package_name);

  // required int32 display_id = 2;
  bool has_display_id() const;
  void clear_display_id();
  static const int kDisplayIdFieldNumber = 2;
  ::google::protobuf::int32 display_id() const;
  void set_display_id(::google::protobuf::int32 value);

  // required int32 width = 3;
  bool has_width() const;
  void clear_width();
  static const int kWidthFieldNumber = 3;
  ::google::protobuf::int32 width() const;
  void set_width(::google::protobuf::int32 value);

  // required int32 height = 4;
  bool has_height() const;
  void clear_height();
  static const int kHeightFieldNumber = 4;
  ::google::protobuf::int32 height() const;
  void set_height(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:cn.kylinos.kmre.kmrecore.UpdateAppWindowSize)
 private:
  void set_has_package_name();
  void clear_has_package_name();
  void set_has_display_id();
  void clear_has_display_id();
  void set_has_width();
  void clear_has_width();
  void set_has_height();
  void clear_has_height();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr package_name_;
  ::google::protobuf::int32 display_id_;
  ::google::protobuf::int32 width_;
  ::google::protobuf::int32 height_;
  friend struct ::protobuf_KmreCore_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SetProxy : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:cn.kylinos.kmre.kmrecore.SetProxy) */ {
 public:
  SetProxy();
  virtual ~SetProxy();

  SetProxy(const SetProxy& from);

  inline SetProxy& operator=(const SetProxy& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  SetProxy(SetProxy&& from) noexcept
    : SetProxy() {
    *this = ::std::move(from);
  }

  inline SetProxy& operator=(SetProxy&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SetProxy& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const SetProxy* internal_default_instance() {
    return reinterpret_cast<const SetProxy*>(
               &_SetProxy_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    17;

  void Swap(SetProxy* other);
  friend void swap(SetProxy& a, SetProxy& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline SetProxy* New() const final {
    return CreateMaybeMessage<SetProxy>(NULL);
  }

  SetProxy* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<SetProxy>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const SetProxy& from);
  void MergeFrom(const SetProxy& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(SetProxy* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string host = 2;
  bool has_host() const;
  void clear_host();
  static const int kHostFieldNumber = 2;
  const ::std::string& host() const;
  void set_host(const ::std::string& value);
  #if LANG_CXX11
  void set_host(::std::string&& value);
  #endif
  void set_host(const char* value);
  void set_host(const char* value, size_t size);
  ::std::string* mutable_host();
  ::std::string* release_host();
  void set_allocated_host(::std::string* host);

  // optional string type = 4;
  bool has_type() const;
  void clear_type();
  static const int kTypeFieldNumber = 4;
  const ::std::string& type() const;
  void set_type(const ::std::string& value);
  #if LANG_CXX11
  void set_type(::std::string&& value);
  #endif
  void set_type(const char* value);
  void set_type(const char* value, size_t size);
  ::std::string* mutable_type();
  ::std::string* release_type();
  void set_allocated_type(::std::string* type);

  // required bool open = 1;
  bool has_open() const;
  void clear_open();
  static const int kOpenFieldNumber = 1;
  bool open() const;
  void set_open(bool value);

  // optional int32 port = 3;
  bool has_port() const;
  void clear_port();
  static const int kPortFieldNumber = 3;
  ::google::protobuf::int32 port() const;
  void set_port(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:cn.kylinos.kmre.kmrecore.SetProxy)
 private:
  void set_has_open();
  void clear_has_open();
  void set_has_host();
  void clear_has_host();
  void set_has_port();
  void clear_has_port();
  void set_has_type();
  void clear_has_type();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr host_;
  ::google::protobuf::internal::ArenaStringPtr type_;
  bool open_;
  ::google::protobuf::int32 port_;
  friend struct ::protobuf_KmreCore_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class UpdateDisplaySize : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:cn.kylinos.kmre.kmrecore.UpdateDisplaySize) */ {
 public:
  UpdateDisplaySize();
  virtual ~UpdateDisplaySize();

  UpdateDisplaySize(const UpdateDisplaySize& from);

  inline UpdateDisplaySize& operator=(const UpdateDisplaySize& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  UpdateDisplaySize(UpdateDisplaySize&& from) noexcept
    : UpdateDisplaySize() {
    *this = ::std::move(from);
  }

  inline UpdateDisplaySize& operator=(UpdateDisplaySize&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const UpdateDisplaySize& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const UpdateDisplaySize* internal_default_instance() {
    return reinterpret_cast<const UpdateDisplaySize*>(
               &_UpdateDisplaySize_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    18;

  void Swap(UpdateDisplaySize* other);
  friend void swap(UpdateDisplaySize& a, UpdateDisplaySize& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline UpdateDisplaySize* New() const final {
    return CreateMaybeMessage<UpdateDisplaySize>(NULL);
  }

  UpdateDisplaySize* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<UpdateDisplaySize>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const UpdateDisplaySize& from);
  void MergeFrom(const UpdateDisplaySize& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(UpdateDisplaySize* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 display_id = 1;
  bool has_display_id() const;
  void clear_display_id();
  static const int kDisplayIdFieldNumber = 1;
  ::google::protobuf::int32 display_id() const;
  void set_display_id(::google::protobuf::int32 value);

  // required int32 width = 2;
  bool has_width() const;
  void clear_width();
  static const int kWidthFieldNumber = 2;
  ::google::protobuf::int32 width() const;
  void set_width(::google::protobuf::int32 value);

  // required int32 height = 3;
  bool has_height() const;
  void clear_height();
  static const int kHeightFieldNumber = 3;
  ::google::protobuf::int32 height() const;
  void set_height(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:cn.kylinos.kmre.kmrecore.UpdateDisplaySize)
 private:
  void set_has_display_id();
  void clear_has_display_id();
  void set_has_width();
  void clear_has_width();
  void set_has_height();
  void clear_has_height();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::int32 display_id_;
  ::google::protobuf::int32 width_;
  ::google::protobuf::int32 height_;
  friend struct ::protobuf_KmreCore_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class AnswerCall : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:cn.kylinos.kmre.kmrecore.AnswerCall) */ {
 public:
  AnswerCall();
  virtual ~AnswerCall();

  AnswerCall(const AnswerCall& from);

  inline AnswerCall& operator=(const AnswerCall& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  AnswerCall(AnswerCall&& from) noexcept
    : AnswerCall() {
    *this = ::std::move(from);
  }

  inline AnswerCall& operator=(AnswerCall&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const AnswerCall& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const AnswerCall* internal_default_instance() {
    return reinterpret_cast<const AnswerCall*>(
               &_AnswerCall_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    19;

  void Swap(AnswerCall* other);
  friend void swap(AnswerCall& a, AnswerCall& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline AnswerCall* New() const final {
    return CreateMaybeMessage<AnswerCall>(NULL);
  }

  AnswerCall* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<AnswerCall>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const AnswerCall& from);
  void MergeFrom(const AnswerCall& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(AnswerCall* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required bool answer = 1;
  bool has_answer() const;
  void clear_answer();
  static const int kAnswerFieldNumber = 1;
  bool answer() const;
  void set_answer(bool value);

  // @@protoc_insertion_point(class_scope:cn.kylinos.kmre.kmrecore.AnswerCall)
 private:
  void set_has_answer();
  void clear_has_answer();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  bool answer_;
  friend struct ::protobuf_KmreCore_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ContainerEnvBootStatus : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:cn.kylinos.kmre.kmrecore.ContainerEnvBootStatus) */ {
 public:
  ContainerEnvBootStatus();
  virtual ~ContainerEnvBootStatus();

  ContainerEnvBootStatus(const ContainerEnvBootStatus& from);

  inline ContainerEnvBootStatus& operator=(const ContainerEnvBootStatus& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ContainerEnvBootStatus(ContainerEnvBootStatus&& from) noexcept
    : ContainerEnvBootStatus() {
    *this = ::std::move(from);
  }

  inline ContainerEnvBootStatus& operator=(ContainerEnvBootStatus&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ContainerEnvBootStatus& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ContainerEnvBootStatus* internal_default_instance() {
    return reinterpret_cast<const ContainerEnvBootStatus*>(
               &_ContainerEnvBootStatus_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    20;

  void Swap(ContainerEnvBootStatus* other);
  friend void swap(ContainerEnvBootStatus& a, ContainerEnvBootStatus& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ContainerEnvBootStatus* New() const final {
    return CreateMaybeMessage<ContainerEnvBootStatus>(NULL);
  }

  ContainerEnvBootStatus* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ContainerEnvBootStatus>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ContainerEnvBootStatus& from);
  void MergeFrom(const ContainerEnvBootStatus& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ContainerEnvBootStatus* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string err_info = 2;
  bool has_err_info() const;
  void clear_err_info();
  static const int kErrInfoFieldNumber = 2;
  const ::std::string& err_info() const;
  void set_err_info(const ::std::string& value);
  #if LANG_CXX11
  void set_err_info(::std::string&& value);
  #endif
  void set_err_info(const char* value);
  void set_err_info(const char* value, size_t size);
  ::std::string* mutable_err_info();
  ::std::string* release_err_info();
  void set_allocated_err_info(::std::string* err_info);

  // required bool status = 1;
  bool has_status() const;
  void clear_status();
  static const int kStatusFieldNumber = 1;
  bool status() const;
  void set_status(bool value);

  // @@protoc_insertion_point(class_scope:cn.kylinos.kmre.kmrecore.ContainerEnvBootStatus)
 private:
  void set_has_status();
  void clear_has_status();
  void set_has_err_info();
  void clear_has_err_info();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr err_info_;
  bool status_;
  friend struct ::protobuf_KmreCore_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ActionResult : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:cn.kylinos.kmre.kmrecore.ActionResult) */ {
 public:
  ActionResult();
  virtual ~ActionResult();

  ActionResult(const ActionResult& from);

  inline ActionResult& operator=(const ActionResult& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ActionResult(ActionResult&& from) noexcept
    : ActionResult() {
    *this = ::std::move(from);
  }

  inline ActionResult& operator=(ActionResult&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ActionResult& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ActionResult* internal_default_instance() {
    return reinterpret_cast<const ActionResult*>(
               &_ActionResult_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    21;

  void Swap(ActionResult* other);
  friend void swap(ActionResult& a, ActionResult& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ActionResult* New() const final {
    return CreateMaybeMessage<ActionResult>(NULL);
  }

  ActionResult* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ActionResult>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ActionResult& from);
  void MergeFrom(const ActionResult& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ActionResult* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string org_cmd = 2;
  bool has_org_cmd() const;
  void clear_org_cmd();
  static const int kOrgCmdFieldNumber = 2;
  const ::std::string& org_cmd() const;
  void set_org_cmd(const ::std::string& value);
  #if LANG_CXX11
  void set_org_cmd(::std::string&& value);
  #endif
  void set_org_cmd(const char* value);
  void set_org_cmd(const char* value, size_t size);
  ::std::string* mutable_org_cmd();
  ::std::string* release_org_cmd();
  void set_allocated_org_cmd(::std::string* org_cmd);

  // optional string err_info = 3;
  bool has_err_info() const;
  void clear_err_info();
  static const int kErrInfoFieldNumber = 3;
  const ::std::string& err_info() const;
  void set_err_info(const ::std::string& value);
  #if LANG_CXX11
  void set_err_info(::std::string&& value);
  #endif
  void set_err_info(const char* value);
  void set_err_info(const char* value, size_t size);
  ::std::string* mutable_err_info();
  ::std::string* release_err_info();
  void set_allocated_err_info(::std::string* err_info);

  // required bool result = 1;
  bool has_result() const;
  void clear_result();
  static const int kResultFieldNumber = 1;
  bool result() const;
  void set_result(bool value);

  // @@protoc_insertion_point(class_scope:cn.kylinos.kmre.kmrecore.ActionResult)
 private:
  void set_has_result();
  void clear_has_result();
  void set_has_org_cmd();
  void clear_has_org_cmd();
  void set_has_err_info();
  void clear_has_err_info();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr org_cmd_;
  ::google::protobuf::internal::ArenaStringPtr err_info_;
  bool result_;
  friend struct ::protobuf_KmreCore_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class EventInfo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:cn.kylinos.kmre.kmrecore.EventInfo) */ {
 public:
  EventInfo();
  virtual ~EventInfo();

  EventInfo(const EventInfo& from);

  inline EventInfo& operator=(const EventInfo& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  EventInfo(EventInfo&& from) noexcept
    : EventInfo() {
    *this = ::std::move(from);
  }

  inline EventInfo& operator=(EventInfo&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const EventInfo& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const EventInfo* internal_default_instance() {
    return reinterpret_cast<const EventInfo*>(
               &_EventInfo_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    22;

  void Swap(EventInfo* other);
  friend void swap(EventInfo& a, EventInfo& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline EventInfo* New() const final {
    return CreateMaybeMessage<EventInfo>(NULL);
  }

  EventInfo* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<EventInfo>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const EventInfo& from);
  void MergeFrom(const EventInfo& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(EventInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string package_name = 2;
  bool has_package_name() const;
  void clear_package_name();
  static const int kPackageNameFieldNumber = 2;
  const ::std::string& package_name() const;
  void set_package_name(const ::std::string& value);
  #if LANG_CXX11
  void set_package_name(::std::string&& value);
  #endif
  void set_package_name(const char* value);
  void set_package_name(const char* value, size_t size);
  ::std::string* mutable_package_name();
  ::std::string* release_package_name();
  void set_allocated_package_name(::std::string* package_name);

  // required int32 event_id = 1;
  bool has_event_id() const;
  void clear_event_id();
  static const int kEventIdFieldNumber = 1;
  ::google::protobuf::int32 event_id() const;
  void set_event_id(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:cn.kylinos.kmre.kmrecore.EventInfo)
 private:
  void set_has_event_id();
  void clear_has_event_id();
  void set_has_package_name();
  void clear_has_package_name();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr package_name_;
  ::google::protobuf::int32 event_id_;
  friend struct ::protobuf_KmreCore_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class InstalledAppItem : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:cn.kylinos.kmre.kmrecore.InstalledAppItem) */ {
 public:
  InstalledAppItem();
  virtual ~InstalledAppItem();

  InstalledAppItem(const InstalledAppItem& from);

  inline InstalledAppItem& operator=(const InstalledAppItem& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  InstalledAppItem(InstalledAppItem&& from) noexcept
    : InstalledAppItem() {
    *this = ::std::move(from);
  }

  inline InstalledAppItem& operator=(InstalledAppItem&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const InstalledAppItem& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const InstalledAppItem* internal_default_instance() {
    return reinterpret_cast<const InstalledAppItem*>(
               &_InstalledAppItem_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    23;

  void Swap(InstalledAppItem* other);
  friend void swap(InstalledAppItem& a, InstalledAppItem& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline InstalledAppItem* New() const final {
    return CreateMaybeMessage<InstalledAppItem>(NULL);
  }

  InstalledAppItem* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<InstalledAppItem>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const InstalledAppItem& from);
  void MergeFrom(const InstalledAppItem& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(InstalledAppItem* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string app_name = 1;
  bool has_app_name() const;
  void clear_app_name();
  static const int kAppNameFieldNumber = 1;
  const ::std::string& app_name() const;
  void set_app_name(const ::std::string& value);
  #if LANG_CXX11
  void set_app_name(::std::string&& value);
  #endif
  void set_app_name(const char* value);
  void set_app_name(const char* value, size_t size);
  ::std::string* mutable_app_name();
  ::std::string* release_app_name();
  void set_allocated_app_name(::std::string* app_name);

  // required string package_name = 2;
  bool has_package_name() const;
  void clear_package_name();
  static const int kPackageNameFieldNumber = 2;
  const ::std::string& package_name() const;
  void set_package_name(const ::std::string& value);
  #if LANG_CXX11
  void set_package_name(::std::string&& value);
  #endif
  void set_package_name(const char* value);
  void set_package_name(const char* value, size_t size);
  ::std::string* mutable_package_name();
  ::std::string* release_package_name();
  void set_allocated_package_name(::std::string* package_name);

  // required string version_name = 4;
  bool has_version_name() const;
  void clear_version_name();
  static const int kVersionNameFieldNumber = 4;
  const ::std::string& version_name() const;
  void set_version_name(const ::std::string& value);
  #if LANG_CXX11
  void set_version_name(::std::string&& value);
  #endif
  void set_version_name(const char* value);
  void set_version_name(const char* value, size_t size);
  ::std::string* mutable_version_name();
  ::std::string* release_version_name();
  void set_allocated_version_name(::std::string* version_name);

  // optional string app_info = 5;
  bool has_app_info() const;
  void clear_app_info();
  static const int kAppInfoFieldNumber = 5;
  const ::std::string& app_info() const;
  void set_app_info(const ::std::string& value);
  #if LANG_CXX11
  void set_app_info(::std::string&& value);
  #endif
  void set_app_info(const char* value);
  void set_app_info(const char* value, size_t size);
  ::std::string* mutable_app_info();
  ::std::string* release_app_info();
  void set_allocated_app_info(::std::string* app_info);

  // required int64 version_code = 3;
  bool has_version_code() const;
  void clear_version_code();
  static const int kVersionCodeFieldNumber = 3;
  ::google::protobuf::int64 version_code() const;
  void set_version_code(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:cn.kylinos.kmre.kmrecore.InstalledAppItem)
 private:
  void set_has_app_name();
  void clear_has_app_name();
  void set_has_package_name();
  void clear_has_package_name();
  void set_has_version_code();
  void clear_has_version_code();
  void set_has_version_name();
  void clear_has_version_name();
  void set_has_app_info();
  void clear_has_app_info();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr app_name_;
  ::google::protobuf::internal::ArenaStringPtr package_name_;
  ::google::protobuf::internal::ArenaStringPtr version_name_;
  ::google::protobuf::internal::ArenaStringPtr app_info_;
  ::google::protobuf::int64 version_code_;
  friend struct ::protobuf_KmreCore_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class InstalledAppList : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:cn.kylinos.kmre.kmrecore.InstalledAppList) */ {
 public:
  InstalledAppList();
  virtual ~InstalledAppList();

  InstalledAppList(const InstalledAppList& from);

  inline InstalledAppList& operator=(const InstalledAppList& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  InstalledAppList(InstalledAppList&& from) noexcept
    : InstalledAppList() {
    *this = ::std::move(from);
  }

  inline InstalledAppList& operator=(InstalledAppList&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const InstalledAppList& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const InstalledAppList* internal_default_instance() {
    return reinterpret_cast<const InstalledAppList*>(
               &_InstalledAppList_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    24;

  void Swap(InstalledAppList* other);
  friend void swap(InstalledAppList& a, InstalledAppList& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline InstalledAppList* New() const final {
    return CreateMaybeMessage<InstalledAppList>(NULL);
  }

  InstalledAppList* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<InstalledAppList>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const InstalledAppList& from);
  void MergeFrom(const InstalledAppList& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(InstalledAppList* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .cn.kylinos.kmre.kmrecore.InstalledAppItem item = 1;
  int item_size() const;
  void clear_item();
  static const int kItemFieldNumber = 1;
  ::cn::kylinos::kmre::kmrecore::InstalledAppItem* mutable_item(int index);
  ::google::protobuf::RepeatedPtrField< ::cn::kylinos::kmre::kmrecore::InstalledAppItem >*
      mutable_item();
  const ::cn::kylinos::kmre::kmrecore::InstalledAppItem& item(int index) const;
  ::cn::kylinos::kmre::kmrecore::InstalledAppItem* add_item();
  const ::google::protobuf::RepeatedPtrField< ::cn::kylinos::kmre::kmrecore::InstalledAppItem >&
      item() const;

  // required int32 size = 2;
  bool has_size() const;
  void clear_size();
  static const int kSizeFieldNumber = 2;
  ::google::protobuf::int32 size() const;
  void set_size(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:cn.kylinos.kmre.kmrecore.InstalledAppList)
 private:
  void set_has_size();
  void clear_has_size();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::cn::kylinos::kmre::kmrecore::InstalledAppItem > item_;
  ::google::protobuf::int32 size_;
  friend struct ::protobuf_KmreCore_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class RunningAppItem : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:cn.kylinos.kmre.kmrecore.RunningAppItem) */ {
 public:
  RunningAppItem();
  virtual ~RunningAppItem();

  RunningAppItem(const RunningAppItem& from);

  inline RunningAppItem& operator=(const RunningAppItem& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  RunningAppItem(RunningAppItem&& from) noexcept
    : RunningAppItem() {
    *this = ::std::move(from);
  }

  inline RunningAppItem& operator=(RunningAppItem&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RunningAppItem& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const RunningAppItem* internal_default_instance() {
    return reinterpret_cast<const RunningAppItem*>(
               &_RunningAppItem_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    25;

  void Swap(RunningAppItem* other);
  friend void swap(RunningAppItem& a, RunningAppItem& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline RunningAppItem* New() const final {
    return CreateMaybeMessage<RunningAppItem>(NULL);
  }

  RunningAppItem* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<RunningAppItem>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const RunningAppItem& from);
  void MergeFrom(const RunningAppItem& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(RunningAppItem* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string app_name = 1;
  bool has_app_name() const;
  void clear_app_name();
  static const int kAppNameFieldNumber = 1;
  const ::std::string& app_name() const;
  void set_app_name(const ::std::string& value);
  #if LANG_CXX11
  void set_app_name(::std::string&& value);
  #endif
  void set_app_name(const char* value);
  void set_app_name(const char* value, size_t size);
  ::std::string* mutable_app_name();
  ::std::string* release_app_name();
  void set_allocated_app_name(::std::string* app_name);

  // required string package_name = 2;
  bool has_package_name() const;
  void clear_package_name();
  static const int kPackageNameFieldNumber = 2;
  const ::std::string& package_name() const;
  void set_package_name(const ::std::string& value);
  #if LANG_CXX11
  void set_package_name(::std::string&& value);
  #endif
  void set_package_name(const char* value);
  void set_package_name(const char* value, size_t size);
  ::std::string* mutable_package_name();
  ::std::string* release_package_name();
  void set_allocated_package_name(::std::string* package_name);

  // @@protoc_insertion_point(class_scope:cn.kylinos.kmre.kmrecore.RunningAppItem)
 private:
  void set_has_app_name();
  void clear_has_app_name();
  void set_has_package_name();
  void clear_has_package_name();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr app_name_;
  ::google::protobuf::internal::ArenaStringPtr package_name_;
  friend struct ::protobuf_KmreCore_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class RunningAppList : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:cn.kylinos.kmre.kmrecore.RunningAppList) */ {
 public:
  RunningAppList();
  virtual ~RunningAppList();

  RunningAppList(const RunningAppList& from);

  inline RunningAppList& operator=(const RunningAppList& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  RunningAppList(RunningAppList&& from) noexcept
    : RunningAppList() {
    *this = ::std::move(from);
  }

  inline RunningAppList& operator=(RunningAppList&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RunningAppList& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const RunningAppList* internal_default_instance() {
    return reinterpret_cast<const RunningAppList*>(
               &_RunningAppList_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    26;

  void Swap(RunningAppList* other);
  friend void swap(RunningAppList& a, RunningAppList& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline RunningAppList* New() const final {
    return CreateMaybeMessage<RunningAppList>(NULL);
  }

  RunningAppList* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<RunningAppList>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const RunningAppList& from);
  void MergeFrom(const RunningAppList& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(RunningAppList* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .cn.kylinos.kmre.kmrecore.RunningAppItem item = 1;
  int item_size() const;
  void clear_item();
  static const int kItemFieldNumber = 1;
  ::cn::kylinos::kmre::kmrecore::RunningAppItem* mutable_item(int index);
  ::google::protobuf::RepeatedPtrField< ::cn::kylinos::kmre::kmrecore::RunningAppItem >*
      mutable_item();
  const ::cn::kylinos::kmre::kmrecore::RunningAppItem& item(int index) const;
  ::cn::kylinos::kmre::kmrecore::RunningAppItem* add_item();
  const ::google::protobuf::RepeatedPtrField< ::cn::kylinos::kmre::kmrecore::RunningAppItem >&
      item() const;

  // required int32 size = 2;
  bool has_size() const;
  void clear_size();
  static const int kSizeFieldNumber = 2;
  ::google::protobuf::int32 size() const;
  void set_size(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:cn.kylinos.kmre.kmrecore.RunningAppList)
 private:
  void set_has_size();
  void clear_has_size();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::cn::kylinos::kmre::kmrecore::RunningAppItem > item_;
  ::google::protobuf::int32 size_;
  friend struct ::protobuf_KmreCore_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class Notification : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:cn.kylinos.kmre.kmrecore.Notification) */ {
 public:
  Notification();
  virtual ~Notification();

  Notification(const Notification& from);

  inline Notification& operator=(const Notification& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Notification(Notification&& from) noexcept
    : Notification() {
    *this = ::std::move(from);
  }

  inline Notification& operator=(Notification&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Notification& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Notification* internal_default_instance() {
    return reinterpret_cast<const Notification*>(
               &_Notification_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    27;

  void Swap(Notification* other);
  friend void swap(Notification& a, Notification& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Notification* New() const final {
    return CreateMaybeMessage<Notification>(NULL);
  }

  Notification* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<Notification>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const Notification& from);
  void MergeFrom(const Notification& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Notification* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string package_name = 1;
  bool has_package_name() const;
  void clear_package_name();
  static const int kPackageNameFieldNumber = 1;
  const ::std::string& package_name() const;
  void set_package_name(const ::std::string& value);
  #if LANG_CXX11
  void set_package_name(::std::string&& value);
  #endif
  void set_package_name(const char* value);
  void set_package_name(const char* value, size_t size);
  ::std::string* mutable_package_name();
  ::std::string* release_package_name();
  void set_allocated_package_name(::std::string* package_name);

  // required string app_name = 2;
  bool has_app_name() const;
  void clear_app_name();
  static const int kAppNameFieldNumber = 2;
  const ::std::string& app_name() const;
  void set_app_name(const ::std::string& value);
  #if LANG_CXX11
  void set_app_name(::std::string&& value);
  #endif
  void set_app_name(const char* value);
  void set_app_name(const char* value, size_t size);
  ::std::string* mutable_app_name();
  ::std::string* release_app_name();
  void set_allocated_app_name(::std::string* app_name);

  // optional string text = 3;
  bool has_text() const;
  void clear_text();
  static const int kTextFieldNumber = 3;
  const ::std::string& text() const;
  void set_text(const ::std::string& value);
  #if LANG_CXX11
  void set_text(::std::string&& value);
  #endif
  void set_text(const char* value);
  void set_text(const char* value, size_t size);
  ::std::string* mutable_text();
  ::std::string* release_text();
  void set_allocated_text(::std::string* text);

  // optional string title = 7;
  bool has_title() const;
  void clear_title();
  static const int kTitleFieldNumber = 7;
  const ::std::string& title() const;
  void set_title(const ::std::string& value);
  #if LANG_CXX11
  void set_title(::std::string&& value);
  #endif
  void set_title(const char* value);
  void set_title(const char* value, size_t size);
  ::std::string* mutable_title();
  ::std::string* release_title();
  void set_allocated_title(::std::string* title);

  // optional int32 display_id = 4;
  bool has_display_id() const;
  void clear_display_id();
  static const int kDisplayIdFieldNumber = 4;
  ::google::protobuf::int32 display_id() const;
  void set_display_id(::google::protobuf::int32 value);

  // optional bool hide = 5;
  bool has_hide() const;
  void clear_hide();
  static const int kHideFieldNumber = 5;
  bool hide() const;
  void set_hide(bool value);

  // optional bool incoming_call = 6;
  bool has_incoming_call() const;
  void clear_incoming_call();
  static const int kIncomingCallFieldNumber = 6;
  bool incoming_call() const;
  void set_incoming_call(bool value);

  // @@protoc_insertion_point(class_scope:cn.kylinos.kmre.kmrecore.Notification)
 private:
  void set_has_package_name();
  void clear_has_package_name();
  void set_has_app_name();
  void clear_has_app_name();
  void set_has_text();
  void clear_has_text();
  void set_has_display_id();
  void clear_has_display_id();
  void set_has_hide();
  void clear_has_hide();
  void set_has_incoming_call();
  void clear_has_incoming_call();
  void set_has_title();
  void clear_has_title();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr package_name_;
  ::google::protobuf::internal::ArenaStringPtr app_name_;
  ::google::protobuf::internal::ArenaStringPtr text_;
  ::google::protobuf::internal::ArenaStringPtr title_;
  ::google::protobuf::int32 display_id_;
  bool hide_;
  bool incoming_call_;
  friend struct ::protobuf_KmreCore_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class LaunchResult : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:cn.kylinos.kmre.kmrecore.LaunchResult) */ {
 public:
  LaunchResult();
  virtual ~LaunchResult();

  LaunchResult(const LaunchResult& from);

  inline LaunchResult& operator=(const LaunchResult& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  LaunchResult(LaunchResult&& from) noexcept
    : LaunchResult() {
    *this = ::std::move(from);
  }

  inline LaunchResult& operator=(LaunchResult&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const LaunchResult& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const LaunchResult* internal_default_instance() {
    return reinterpret_cast<const LaunchResult*>(
               &_LaunchResult_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    28;

  void Swap(LaunchResult* other);
  friend void swap(LaunchResult& a, LaunchResult& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline LaunchResult* New() const final {
    return CreateMaybeMessage<LaunchResult>(NULL);
  }

  LaunchResult* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<LaunchResult>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const LaunchResult& from);
  void MergeFrom(const LaunchResult& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(LaunchResult* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string app_name = 1;
  bool has_app_name() const;
  void clear_app_name();
  static const int kAppNameFieldNumber = 1;
  const ::std::string& app_name() const;
  void set_app_name(const ::std::string& value);
  #if LANG_CXX11
  void set_app_name(::std::string&& value);
  #endif
  void set_app_name(const char* value);
  void set_app_name(const char* value, size_t size);
  ::std::string* mutable_app_name();
  ::std::string* release_app_name();
  void set_allocated_app_name(::std::string* app_name);

  // required string package_name = 2;
  bool has_package_name() const;
  void clear_package_name();
  static const int kPackageNameFieldNumber = 2;
  const ::std::string& package_name() const;
  void set_package_name(const ::std::string& value);
  #if LANG_CXX11
  void set_package_name(::std::string&& value);
  #endif
  void set_package_name(const char* value);
  void set_package_name(const char* value, size_t size);
  ::std::string* mutable_package_name();
  ::std::string* release_package_name();
  void set_allocated_package_name(::std::string* package_name);

  // required int32 display_id = 4;
  bool has_display_id() const;
  void clear_display_id();
  static const int kDisplayIdFieldNumber = 4;
  ::google::protobuf::int32 display_id() const;
  void set_display_id(::google::protobuf::int32 value);

  // required int32 width = 5;
  bool has_width() const;
  void clear_width();
  static const int kWidthFieldNumber = 5;
  ::google::protobuf::int32 width() const;
  void set_width(::google::protobuf::int32 value);

  // required int32 height = 6;
  bool has_height() const;
  void clear_height();
  static const int kHeightFieldNumber = 6;
  ::google::protobuf::int32 height() const;
  void set_height(::google::protobuf::int32 value);

  // required int32 density = 7;
  bool has_density() const;
  void clear_density();
  static const int kDensityFieldNumber = 7;
  ::google::protobuf::int32 density() const;
  void set_density(::google::protobuf::int32 value);

  // required bool result = 3;
  bool has_result() const;
  void clear_result();
  static const int kResultFieldNumber = 3;
  bool result() const;
  void set_result(bool value);

  // required bool fullscreen = 8;
  bool has_fullscreen() const;
  void clear_fullscreen();
  static const int kFullscreenFieldNumber = 8;
  bool fullscreen() const;
  void set_fullscreen(bool value);

  // optional bool exists = 9;
  bool has_exists() const;
  void clear_exists();
  static const int kExistsFieldNumber = 9;
  bool exists() const;
  void set_exists(bool value);

  // optional bool app_resumed = 10;
  bool has_app_resumed() const;
  void clear_app_resumed();
  static const int kAppResumedFieldNumber = 10;
  bool app_resumed() const;
  void set_app_resumed(bool value);

  // @@protoc_insertion_point(class_scope:cn.kylinos.kmre.kmrecore.LaunchResult)
 private:
  void set_has_app_name();
  void clear_has_app_name();
  void set_has_package_name();
  void clear_has_package_name();
  void set_has_result();
  void clear_has_result();
  void set_has_display_id();
  void clear_has_display_id();
  void set_has_width();
  void clear_has_width();
  void set_has_height();
  void clear_has_height();
  void set_has_density();
  void clear_has_density();
  void set_has_fullscreen();
  void clear_has_fullscreen();
  void set_has_exists();
  void clear_has_exists();
  void set_has_app_resumed();
  void clear_has_app_resumed();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr app_name_;
  ::google::protobuf::internal::ArenaStringPtr package_name_;
  ::google::protobuf::int32 display_id_;
  ::google::protobuf::int32 width_;
  ::google::protobuf::int32 height_;
  ::google::protobuf::int32 density_;
  bool result_;
  bool fullscreen_;
  bool exists_;
  bool app_resumed_;
  friend struct ::protobuf_KmreCore_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CloseResult : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:cn.kylinos.kmre.kmrecore.CloseResult) */ {
 public:
  CloseResult();
  virtual ~CloseResult();

  CloseResult(const CloseResult& from);

  inline CloseResult& operator=(const CloseResult& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CloseResult(CloseResult&& from) noexcept
    : CloseResult() {
    *this = ::std::move(from);
  }

  inline CloseResult& operator=(CloseResult&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CloseResult& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CloseResult* internal_default_instance() {
    return reinterpret_cast<const CloseResult*>(
               &_CloseResult_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    29;

  void Swap(CloseResult* other);
  friend void swap(CloseResult& a, CloseResult& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CloseResult* New() const final {
    return CreateMaybeMessage<CloseResult>(NULL);
  }

  CloseResult* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CloseResult>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CloseResult& from);
  void MergeFrom(const CloseResult& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CloseResult* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string package_name = 1;
  bool has_package_name() const;
  void clear_package_name();
  static const int kPackageNameFieldNumber = 1;
  const ::std::string& package_name() const;
  void set_package_name(const ::std::string& value);
  #if LANG_CXX11
  void set_package_name(::std::string&& value);
  #endif
  void set_package_name(const char* value);
  void set_package_name(const char* value, size_t size);
  ::std::string* mutable_package_name();
  ::std::string* release_package_name();
  void set_allocated_package_name(::std::string* package_name);

  // required bool result = 2;
  bool has_result() const;
  void clear_result();
  static const int kResultFieldNumber = 2;
  bool result() const;
  void set_result(bool value);

  // @@protoc_insertion_point(class_scope:cn.kylinos.kmre.kmrecore.CloseResult)
 private:
  void set_has_package_name();
  void clear_has_package_name();
  void set_has_result();
  void clear_has_result();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr package_name_;
  bool result_;
  friend struct ::protobuf_KmreCore_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class VirtualScreenFocusResult : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:cn.kylinos.kmre.kmrecore.VirtualScreenFocusResult) */ {
 public:
  VirtualScreenFocusResult();
  virtual ~VirtualScreenFocusResult();

  VirtualScreenFocusResult(const VirtualScreenFocusResult& from);

  inline VirtualScreenFocusResult& operator=(const VirtualScreenFocusResult& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  VirtualScreenFocusResult(VirtualScreenFocusResult&& from) noexcept
    : VirtualScreenFocusResult() {
    *this = ::std::move(from);
  }

  inline VirtualScreenFocusResult& operator=(VirtualScreenFocusResult&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const VirtualScreenFocusResult& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const VirtualScreenFocusResult* internal_default_instance() {
    return reinterpret_cast<const VirtualScreenFocusResult*>(
               &_VirtualScreenFocusResult_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    30;

  void Swap(VirtualScreenFocusResult* other);
  friend void swap(VirtualScreenFocusResult& a, VirtualScreenFocusResult& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline VirtualScreenFocusResult* New() const final {
    return CreateMaybeMessage<VirtualScreenFocusResult>(NULL);
  }

  VirtualScreenFocusResult* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<VirtualScreenFocusResult>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const VirtualScreenFocusResult& from);
  void MergeFrom(const VirtualScreenFocusResult& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(VirtualScreenFocusResult* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 display_id = 1;
  bool has_display_id() const;
  void clear_display_id();
  static const int kDisplayIdFieldNumber = 1;
  ::google::protobuf::int32 display_id() const;
  void set_display_id(::google::protobuf::int32 value);

  // required bool result = 2;
  bool has_result() const;
  void clear_result();
  static const int kResultFieldNumber = 2;
  bool result() const;
  void set_result(bool value);

  // @@protoc_insertion_point(class_scope:cn.kylinos.kmre.kmrecore.VirtualScreenFocusResult)
 private:
  void set_has_display_id();
  void clear_has_display_id();
  void set_has_result();
  void clear_has_result();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::int32 display_id_;
  bool result_;
  friend struct ::protobuf_KmreCore_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class InputMethodRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:cn.kylinos.kmre.kmrecore.InputMethodRequest) */ {
 public:
  InputMethodRequest();
  virtual ~InputMethodRequest();

  InputMethodRequest(const InputMethodRequest& from);

  inline InputMethodRequest& operator=(const InputMethodRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  InputMethodRequest(InputMethodRequest&& from) noexcept
    : InputMethodRequest() {
    *this = ::std::move(from);
  }

  inline InputMethodRequest& operator=(InputMethodRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const InputMethodRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const InputMethodRequest* internal_default_instance() {
    return reinterpret_cast<const InputMethodRequest*>(
               &_InputMethodRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    31;

  void Swap(InputMethodRequest* other);
  friend void swap(InputMethodRequest& a, InputMethodRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline InputMethodRequest* New() const final {
    return CreateMaybeMessage<InputMethodRequest>(NULL);
  }

  InputMethodRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<InputMethodRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const InputMethodRequest& from);
  void MergeFrom(const InputMethodRequest& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(InputMethodRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string package_name = 2;
  bool has_package_name() const;
  void clear_package_name();
  static const int kPackageNameFieldNumber = 2;
  const ::std::string& package_name() const;
  void set_package_name(const ::std::string& value);
  #if LANG_CXX11
  void set_package_name(::std::string&& value);
  #endif
  void set_package_name(const char* value);
  void set_package_name(const char* value, size_t size);
  ::std::string* mutable_package_name();
  ::std::string* release_package_name();
  void set_allocated_package_name(::std::string* package_name);

  // required int32 display_id = 1;
  bool has_display_id() const;
  void clear_display_id();
  static const int kDisplayIdFieldNumber = 1;
  ::google::protobuf::int32 display_id() const;
  void set_display_id(::google::protobuf::int32 value);

  // required bool ret = 3;
  bool has_ret() const;
  void clear_ret();
  static const int kRetFieldNumber = 3;
  bool ret() const;
  void set_ret(bool value);

  // optional int32 x_pos = 4;
  bool has_x_pos() const;
  void clear_x_pos();
  static const int kXPosFieldNumber = 4;
  ::google::protobuf::int32 x_pos() const;
  void set_x_pos(::google::protobuf::int32 value);

  // optional int32 y_pos = 5;
  bool has_y_pos() const;
  void clear_y_pos();
  static const int kYPosFieldNumber = 5;
  ::google::protobuf::int32 y_pos() const;
  void set_y_pos(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:cn.kylinos.kmre.kmrecore.InputMethodRequest)
 private:
  void set_has_display_id();
  void clear_has_display_id();
  void set_has_package_name();
  void clear_has_package_name();
  void set_has_ret();
  void clear_has_ret();
  void set_has_x_pos();
  void clear_has_x_pos();
  void set_has_y_pos();
  void clear_has_y_pos();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr package_name_;
  ::google::protobuf::int32 display_id_;
  bool ret_;
  ::google::protobuf::int32 x_pos_;
  ::google::protobuf::int32 y_pos_;
  friend struct ::protobuf_KmreCore_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SingleFile : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:cn.kylinos.kmre.kmrecore.SingleFile) */ {
 public:
  SingleFile();
  virtual ~SingleFile();

  SingleFile(const SingleFile& from);

  inline SingleFile& operator=(const SingleFile& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  SingleFile(SingleFile&& from) noexcept
    : SingleFile() {
    *this = ::std::move(from);
  }

  inline SingleFile& operator=(SingleFile&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SingleFile& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const SingleFile* internal_default_instance() {
    return reinterpret_cast<const SingleFile*>(
               &_SingleFile_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    32;

  void Swap(SingleFile* other);
  friend void swap(SingleFile& a, SingleFile& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline SingleFile* New() const final {
    return CreateMaybeMessage<SingleFile>(NULL);
  }

  SingleFile* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<SingleFile>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const SingleFile& from);
  void MergeFrom(const SingleFile& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(SingleFile* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string data = 1;
  bool has_data() const;
  void clear_data();
  static const int kDataFieldNumber = 1;
  const ::std::string& data() const;
  void set_data(const ::std::string& value);
  #if LANG_CXX11
  void set_data(::std::string&& value);
  #endif
  void set_data(const char* value);
  void set_data(const char* value, size_t size);
  ::std::string* mutable_data();
  ::std::string* release_data();
  void set_allocated_data(::std::string* data);

  // required string mime_type = 2;
  bool has_mime_type() const;
  void clear_mime_type();
  static const int kMimeTypeFieldNumber = 2;
  const ::std::string& mime_type() const;
  void set_mime_type(const ::std::string& value);
  #if LANG_CXX11
  void set_mime_type(::std::string&& value);
  #endif
  void set_mime_type(const char* value);
  void set_mime_type(const char* value, size_t size);
  ::std::string* mutable_mime_type();
  ::std::string* release_mime_type();
  void set_allocated_mime_type(::std::string* mime_type);

  // optional string package_name = 3;
  bool has_package_name() const;
  void clear_package_name();
  static const int kPackageNameFieldNumber = 3;
  const ::std::string& package_name() const;
  void set_package_name(const ::std::string& value);
  #if LANG_CXX11
  void set_package_name(::std::string&& value);
  #endif
  void set_package_name(const char* value);
  void set_package_name(const char* value, size_t size);
  ::std::string* mutable_package_name();
  ::std::string* release_package_name();
  void set_allocated_package_name(::std::string* package_name);

  // @@protoc_insertion_point(class_scope:cn.kylinos.kmre.kmrecore.SingleFile)
 private:
  void set_has_data();
  void clear_has_data();
  void set_has_mime_type();
  void clear_has_mime_type();
  void set_has_package_name();
  void clear_has_package_name();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr data_;
  ::google::protobuf::internal::ArenaStringPtr mime_type_;
  ::google::protobuf::internal::ArenaStringPtr package_name_;
  friend struct ::protobuf_KmreCore_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class FilesList : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:cn.kylinos.kmre.kmrecore.FilesList) */ {
 public:
  FilesList();
  virtual ~FilesList();

  FilesList(const FilesList& from);

  inline FilesList& operator=(const FilesList& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  FilesList(FilesList&& from) noexcept
    : FilesList() {
    *this = ::std::move(from);
  }

  inline FilesList& operator=(FilesList&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const FilesList& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const FilesList* internal_default_instance() {
    return reinterpret_cast<const FilesList*>(
               &_FilesList_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    33;

  void Swap(FilesList* other);
  friend void swap(FilesList& a, FilesList& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline FilesList* New() const final {
    return CreateMaybeMessage<FilesList>(NULL);
  }

  FilesList* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<FilesList>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const FilesList& from);
  void MergeFrom(const FilesList& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(FilesList* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .cn.kylinos.kmre.kmrecore.SingleFile item = 2;
  int item_size() const;
  void clear_item();
  static const int kItemFieldNumber = 2;
  ::cn::kylinos::kmre::kmrecore::SingleFile* mutable_item(int index);
  ::google::protobuf::RepeatedPtrField< ::cn::kylinos::kmre::kmrecore::SingleFile >*
      mutable_item();
  const ::cn::kylinos::kmre::kmrecore::SingleFile& item(int index) const;
  ::cn::kylinos::kmre::kmrecore::SingleFile* add_item();
  const ::google::protobuf::RepeatedPtrField< ::cn::kylinos::kmre::kmrecore::SingleFile >&
      item() const;

  // required int32 type = 1;
  bool has_type() const;
  void clear_type();
  static const int kTypeFieldNumber = 1;
  ::google::protobuf::int32 type() const;
  void set_type(::google::protobuf::int32 value);

  // required int32 size = 3;
  bool has_size() const;
  void clear_size();
  static const int kSizeFieldNumber = 3;
  ::google::protobuf::int32 size() const;
  void set_size(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:cn.kylinos.kmre.kmrecore.FilesList)
 private:
  void set_has_type();
  void clear_has_type();
  void set_has_size();
  void clear_has_size();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::cn::kylinos::kmre::kmrecore::SingleFile > item_;
  ::google::protobuf::int32 type_;
  ::google::protobuf::int32 size_;
  friend struct ::protobuf_KmreCore_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class MediaPlayStatus : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:cn.kylinos.kmre.kmrecore.MediaPlayStatus) */ {
 public:
  MediaPlayStatus();
  virtual ~MediaPlayStatus();

  MediaPlayStatus(const MediaPlayStatus& from);

  inline MediaPlayStatus& operator=(const MediaPlayStatus& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  MediaPlayStatus(MediaPlayStatus&& from) noexcept
    : MediaPlayStatus() {
    *this = ::std::move(from);
  }

  inline MediaPlayStatus& operator=(MediaPlayStatus&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MediaPlayStatus& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MediaPlayStatus* internal_default_instance() {
    return reinterpret_cast<const MediaPlayStatus*>(
               &_MediaPlayStatus_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    34;

  void Swap(MediaPlayStatus* other);
  friend void swap(MediaPlayStatus& a, MediaPlayStatus& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline MediaPlayStatus* New() const final {
    return CreateMaybeMessage<MediaPlayStatus>(NULL);
  }

  MediaPlayStatus* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<MediaPlayStatus>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const MediaPlayStatus& from);
  void MergeFrom(const MediaPlayStatus& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MediaPlayStatus* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required bool result = 1;
  bool has_result() const;
  void clear_result();
  static const int kResultFieldNumber = 1;
  bool result() const;
  void set_result(bool value);

  // @@protoc_insertion_point(class_scope:cn.kylinos.kmre.kmrecore.MediaPlayStatus)
 private:
  void set_has_result();
  void clear_has_result();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  bool result_;
  friend struct ::protobuf_KmreCore_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class AppMultiplier : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:cn.kylinos.kmre.kmrecore.AppMultiplier) */ {
 public:
  AppMultiplier();
  virtual ~AppMultiplier();

  AppMultiplier(const AppMultiplier& from);

  inline AppMultiplier& operator=(const AppMultiplier& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  AppMultiplier(AppMultiplier&& from) noexcept
    : AppMultiplier() {
    *this = ::std::move(from);
  }

  inline AppMultiplier& operator=(AppMultiplier&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const AppMultiplier& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const AppMultiplier* internal_default_instance() {
    return reinterpret_cast<const AppMultiplier*>(
               &_AppMultiplier_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    35;

  void Swap(AppMultiplier* other);
  friend void swap(AppMultiplier& a, AppMultiplier& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline AppMultiplier* New() const final {
    return CreateMaybeMessage<AppMultiplier>(NULL);
  }

  AppMultiplier* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<AppMultiplier>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const AppMultiplier& from);
  void MergeFrom(const AppMultiplier& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(AppMultiplier* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string package_name = 1;
  bool has_package_name() const;
  void clear_package_name();
  static const int kPackageNameFieldNumber = 1;
  const ::std::string& package_name() const;
  void set_package_name(const ::std::string& value);
  #if LANG_CXX11
  void set_package_name(::std::string&& value);
  #endif
  void set_package_name(const char* value);
  void set_package_name(const char* value, size_t size);
  ::std::string* mutable_package_name();
  ::std::string* release_package_name();
  void set_allocated_package_name(::std::string* package_name);

  // optional string info = 3;
  bool has_info() const;
  void clear_info();
  static const int kInfoFieldNumber = 3;
  const ::std::string& info() const;
  void set_info(const ::std::string& value);
  #if LANG_CXX11
  void set_info(::std::string&& value);
  #endif
  void set_info(const char* value);
  void set_info(const char* value, size_t size);
  ::std::string* mutable_info();
  ::std::string* release_info();
  void set_allocated_info(::std::string* info);

  // required int32 multiplier = 2;
  bool has_multiplier() const;
  void clear_multiplier();
  static const int kMultiplierFieldNumber = 2;
  ::google::protobuf::int32 multiplier() const;
  void set_multiplier(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:cn.kylinos.kmre.kmrecore.AppMultiplier)
 private:
  void set_has_package_name();
  void clear_has_package_name();
  void set_has_multiplier();
  void clear_has_multiplier();
  void set_has_info();
  void clear_has_info();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr package_name_;
  ::google::protobuf::internal::ArenaStringPtr info_;
  ::google::protobuf::int32 multiplier_;
  friend struct ::protobuf_KmreCore_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class AppMultiplierList : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:cn.kylinos.kmre.kmrecore.AppMultiplierList) */ {
 public:
  AppMultiplierList();
  virtual ~AppMultiplierList();

  AppMultiplierList(const AppMultiplierList& from);

  inline AppMultiplierList& operator=(const AppMultiplierList& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  AppMultiplierList(AppMultiplierList&& from) noexcept
    : AppMultiplierList() {
    *this = ::std::move(from);
  }

  inline AppMultiplierList& operator=(AppMultiplierList&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const AppMultiplierList& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const AppMultiplierList* internal_default_instance() {
    return reinterpret_cast<const AppMultiplierList*>(
               &_AppMultiplierList_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    36;

  void Swap(AppMultiplierList* other);
  friend void swap(AppMultiplierList& a, AppMultiplierList& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline AppMultiplierList* New() const final {
    return CreateMaybeMessage<AppMultiplierList>(NULL);
  }

  AppMultiplierList* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<AppMultiplierList>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const AppMultiplierList& from);
  void MergeFrom(const AppMultiplierList& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(AppMultiplierList* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .cn.kylinos.kmre.kmrecore.AppMultiplier item = 1;
  int item_size() const;
  void clear_item();
  static const int kItemFieldNumber = 1;
  ::cn::kylinos::kmre::kmrecore::AppMultiplier* mutable_item(int index);
  ::google::protobuf::RepeatedPtrField< ::cn::kylinos::kmre::kmrecore::AppMultiplier >*
      mutable_item();
  const ::cn::kylinos::kmre::kmrecore::AppMultiplier& item(int index) const;
  ::cn::kylinos::kmre::kmrecore::AppMultiplier* add_item();
  const ::google::protobuf::RepeatedPtrField< ::cn::kylinos::kmre::kmrecore::AppMultiplier >&
      item() const;

  // required int32 size = 2;
  bool has_size() const;
  void clear_size();
  static const int kSizeFieldNumber = 2;
  ::google::protobuf::int32 size() const;
  void set_size(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:cn.kylinos.kmre.kmrecore.AppMultiplierList)
 private:
  void set_has_size();
  void clear_has_size();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::cn::kylinos::kmre::kmrecore::AppMultiplier > item_;
  ::google::protobuf::int32 size_;
  friend struct ::protobuf_KmreCore_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class Info : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:cn.kylinos.kmre.kmrecore.Info) */ {
 public:
  Info();
  virtual ~Info();

  Info(const Info& from);

  inline Info& operator=(const Info& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Info(Info&& from) noexcept
    : Info() {
    *this = ::std::move(from);
  }

  inline Info& operator=(Info&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Info& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Info* internal_default_instance() {
    return reinterpret_cast<const Info*>(
               &_Info_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    37;

  void Swap(Info* other);
  friend void swap(Info& a, Info& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Info* New() const final {
    return CreateMaybeMessage<Info>(NULL);
  }

  Info* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<Info>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const Info& from);
  void MergeFrom(const Info& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Info* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string package_name = 1;
  bool has_package_name() const;
  void clear_package_name();
  static const int kPackageNameFieldNumber = 1;
  const ::std::string& package_name() const;
  void set_package_name(const ::std::string& value);
  #if LANG_CXX11
  void set_package_name(::std::string&& value);
  #endif
  void set_package_name(const char* value);
  void set_package_name(const char* value, size_t size);
  ::std::string* mutable_package_name();
  ::std::string* release_package_name();
  void set_allocated_package_name(::std::string* package_name);

  // optional string value3 = 4;
  bool has_value3() const;
  void clear_value3();
  static const int kValue3FieldNumber = 4;
  const ::std::string& value3() const;
  void set_value3(const ::std::string& value);
  #if LANG_CXX11
  void set_value3(::std::string&& value);
  #endif
  void set_value3(const char* value);
  void set_value3(const char* value, size_t size);
  ::std::string* mutable_value3();
  ::std::string* release_value3();
  void set_allocated_value3(::std::string* value3);

  // optional string value4 = 5;
  bool has_value4() const;
  void clear_value4();
  static const int kValue4FieldNumber = 5;
  const ::std::string& value4() const;
  void set_value4(const ::std::string& value);
  #if LANG_CXX11
  void set_value4(::std::string&& value);
  #endif
  void set_value4(const char* value);
  void set_value4(const char* value, size_t size);
  ::std::string* mutable_value4();
  ::std::string* release_value4();
  void set_allocated_value4(::std::string* value4);

  // optional int32 value1 = 2;
  bool has_value1() const;
  void clear_value1();
  static const int kValue1FieldNumber = 2;
  ::google::protobuf::int32 value1() const;
  void set_value1(::google::protobuf::int32 value);

  // optional int32 value2 = 3;
  bool has_value2() const;
  void clear_value2();
  static const int kValue2FieldNumber = 3;
  ::google::protobuf::int32 value2() const;
  void set_value2(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:cn.kylinos.kmre.kmrecore.Info)
 private:
  void set_has_package_name();
  void clear_has_package_name();
  void set_has_value1();
  void clear_has_value1();
  void set_has_value2();
  void clear_has_value2();
  void set_has_value3();
  void clear_has_value3();
  void set_has_value4();
  void clear_has_value4();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr package_name_;
  ::google::protobuf::internal::ArenaStringPtr value3_;
  ::google::protobuf::internal::ArenaStringPtr value4_;
  ::google::protobuf::int32 value1_;
  ::google::protobuf::int32 value2_;
  friend struct ::protobuf_KmreCore_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class GetInfoList : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:cn.kylinos.kmre.kmrecore.GetInfoList) */ {
 public:
  GetInfoList();
  virtual ~GetInfoList();

  GetInfoList(const GetInfoList& from);

  inline GetInfoList& operator=(const GetInfoList& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  GetInfoList(GetInfoList&& from) noexcept
    : GetInfoList() {
    *this = ::std::move(from);
  }

  inline GetInfoList& operator=(GetInfoList&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GetInfoList& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const GetInfoList* internal_default_instance() {
    return reinterpret_cast<const GetInfoList*>(
               &_GetInfoList_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    38;

  void Swap(GetInfoList* other);
  friend void swap(GetInfoList& a, GetInfoList& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline GetInfoList* New() const final {
    return CreateMaybeMessage<GetInfoList>(NULL);
  }

  GetInfoList* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<GetInfoList>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const GetInfoList& from);
  void MergeFrom(const GetInfoList& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(GetInfoList* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .cn.kylinos.kmre.kmrecore.Info item = 1;
  int item_size() const;
  void clear_item();
  static const int kItemFieldNumber = 1;
  ::cn::kylinos::kmre::kmrecore::Info* mutable_item(int index);
  ::google::protobuf::RepeatedPtrField< ::cn::kylinos::kmre::kmrecore::Info >*
      mutable_item();
  const ::cn::kylinos::kmre::kmrecore::Info& item(int index) const;
  ::cn::kylinos::kmre::kmrecore::Info* add_item();
  const ::google::protobuf::RepeatedPtrField< ::cn::kylinos::kmre::kmrecore::Info >&
      item() const;

  // required string type = 2;
  bool has_type() const;
  void clear_type();
  static const int kTypeFieldNumber = 2;
  const ::std::string& type() const;
  void set_type(const ::std::string& value);
  #if LANG_CXX11
  void set_type(::std::string&& value);
  #endif
  void set_type(const char* value);
  void set_type(const char* value, size_t size);
  ::std::string* mutable_type();
  ::std::string* release_type();
  void set_allocated_type(::std::string* type);

  // required int32 size = 3;
  bool has_size() const;
  void clear_size();
  static const int kSizeFieldNumber = 3;
  ::google::protobuf::int32 size() const;
  void set_size(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:cn.kylinos.kmre.kmrecore.GetInfoList)
 private:
  void set_has_type();
  void clear_has_type();
  void set_has_size();
  void clear_has_size();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::cn::kylinos::kmre::kmrecore::Info > item_;
  ::google::protobuf::internal::ArenaStringPtr type_;
  ::google::protobuf::int32 size_;
  friend struct ::protobuf_KmreCore_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ResponseInfo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:cn.kylinos.kmre.kmrecore.ResponseInfo) */ {
 public:
  ResponseInfo();
  virtual ~ResponseInfo();

  ResponseInfo(const ResponseInfo& from);

  inline ResponseInfo& operator=(const ResponseInfo& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ResponseInfo(ResponseInfo&& from) noexcept
    : ResponseInfo() {
    *this = ::std::move(from);
  }

  inline ResponseInfo& operator=(ResponseInfo&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ResponseInfo& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ResponseInfo* internal_default_instance() {
    return reinterpret_cast<const ResponseInfo*>(
               &_ResponseInfo_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    39;

  void Swap(ResponseInfo* other);
  friend void swap(ResponseInfo& a, ResponseInfo& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ResponseInfo* New() const final {
    return CreateMaybeMessage<ResponseInfo>(NULL);
  }

  ResponseInfo* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ResponseInfo>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ResponseInfo& from);
  void MergeFrom(const ResponseInfo& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ResponseInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string package_name = 2;
  bool has_package_name() const;
  void clear_package_name();
  static const int kPackageNameFieldNumber = 2;
  const ::std::string& package_name() const;
  void set_package_name(const ::std::string& value);
  #if LANG_CXX11
  void set_package_name(::std::string&& value);
  #endif
  void set_package_name(const char* value);
  void set_package_name(const char* value, size_t size);
  ::std::string* mutable_package_name();
  ::std::string* release_package_name();
  void set_allocated_package_name(::std::string* package_name);

  // required string category = 3;
  bool has_category() const;
  void clear_category();
  static const int kCategoryFieldNumber = 3;
  const ::std::string& category() const;
  void set_category(const ::std::string& value);
  #if LANG_CXX11
  void set_category(::std::string&& value);
  #endif
  void set_category(const char* value);
  void set_category(const char* value, size_t size);
  ::std::string* mutable_category();
  ::std::string* release_category();
  void set_allocated_category(::std::string* category);

  // optional string info = 5;
  bool has_info() const;
  void clear_info();
  static const int kInfoFieldNumber = 5;
  const ::std::string& info() const;
  void set_info(const ::std::string& value);
  #if LANG_CXX11
  void set_info(::std::string&& value);
  #endif
  void set_info(const char* value);
  void set_info(const char* value, size_t size);
  ::std::string* mutable_info();
  ::std::string* release_info();
  void set_allocated_info(::std::string* info);

  // required int32 event_id = 1;
  bool has_event_id() const;
  void clear_event_id();
  static const int kEventIdFieldNumber = 1;
  ::google::protobuf::int32 event_id() const;
  void set_event_id(::google::protobuf::int32 value);

  // required int32 ret = 4;
  bool has_ret() const;
  void clear_ret();
  static const int kRetFieldNumber = 4;
  ::google::protobuf::int32 ret() const;
  void set_ret(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:cn.kylinos.kmre.kmrecore.ResponseInfo)
 private:
  void set_has_event_id();
  void clear_has_event_id();
  void set_has_package_name();
  void clear_has_package_name();
  void set_has_category();
  void clear_has_category();
  void set_has_ret();
  void clear_has_ret();
  void set_has_info();
  void clear_has_info();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr package_name_;
  ::google::protobuf::internal::ArenaStringPtr category_;
  ::google::protobuf::internal::ArenaStringPtr info_;
  ::google::protobuf::int32 event_id_;
  ::google::protobuf::int32 ret_;
  friend struct ::protobuf_KmreCore_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class MultiplierSwitch : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:cn.kylinos.kmre.kmrecore.MultiplierSwitch) */ {
 public:
  MultiplierSwitch();
  virtual ~MultiplierSwitch();

  MultiplierSwitch(const MultiplierSwitch& from);

  inline MultiplierSwitch& operator=(const MultiplierSwitch& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  MultiplierSwitch(MultiplierSwitch&& from) noexcept
    : MultiplierSwitch() {
    *this = ::std::move(from);
  }

  inline MultiplierSwitch& operator=(MultiplierSwitch&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MultiplierSwitch& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MultiplierSwitch* internal_default_instance() {
    return reinterpret_cast<const MultiplierSwitch*>(
               &_MultiplierSwitch_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    40;

  void Swap(MultiplierSwitch* other);
  friend void swap(MultiplierSwitch& a, MultiplierSwitch& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline MultiplierSwitch* New() const final {
    return CreateMaybeMessage<MultiplierSwitch>(NULL);
  }

  MultiplierSwitch* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<MultiplierSwitch>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const MultiplierSwitch& from);
  void MergeFrom(const MultiplierSwitch& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MultiplierSwitch* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string package_name = 2;
  bool has_package_name() const;
  void clear_package_name();
  static const int kPackageNameFieldNumber = 2;
  const ::std::string& package_name() const;
  void set_package_name(const ::std::string& value);
  #if LANG_CXX11
  void set_package_name(::std::string&& value);
  #endif
  void set_package_name(const char* value);
  void set_package_name(const char* value, size_t size);
  ::std::string* mutable_package_name();
  ::std::string* release_package_name();
  void set_allocated_package_name(::std::string* package_name);

  // required int32 event_id = 1;
  bool has_event_id() const;
  void clear_event_id();
  static const int kEventIdFieldNumber = 1;
  ::google::protobuf::int32 event_id() const;
  void set_event_id(::google::protobuf::int32 value);

  // required bool enable = 3;
  bool has_enable() const;
  void clear_enable();
  static const int kEnableFieldNumber = 3;
  bool enable() const;
  void set_enable(bool value);

  // @@protoc_insertion_point(class_scope:cn.kylinos.kmre.kmrecore.MultiplierSwitch)
 private:
  void set_has_event_id();
  void clear_has_event_id();
  void set_has_package_name();
  void clear_has_package_name();
  void set_has_enable();
  void clear_has_enable();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr package_name_;
  ::google::protobuf::int32 event_id_;
  bool enable_;
  friend struct ::protobuf_KmreCore_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class LinkOpen : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:cn.kylinos.kmre.kmrecore.LinkOpen) */ {
 public:
  LinkOpen();
  virtual ~LinkOpen();

  LinkOpen(const LinkOpen& from);

  inline LinkOpen& operator=(const LinkOpen& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  LinkOpen(LinkOpen&& from) noexcept
    : LinkOpen() {
    *this = ::std::move(from);
  }

  inline LinkOpen& operator=(LinkOpen&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const LinkOpen& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const LinkOpen* internal_default_instance() {
    return reinterpret_cast<const LinkOpen*>(
               &_LinkOpen_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    41;

  void Swap(LinkOpen* other);
  friend void swap(LinkOpen& a, LinkOpen& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline LinkOpen* New() const final {
    return CreateMaybeMessage<LinkOpen>(NULL);
  }

  LinkOpen* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<LinkOpen>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const LinkOpen& from);
  void MergeFrom(const LinkOpen& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(LinkOpen* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string url = 1;
  bool has_url() const;
  void clear_url();
  static const int kUrlFieldNumber = 1;
  const ::std::string& url() const;
  void set_url(const ::std::string& value);
  #if LANG_CXX11
  void set_url(::std::string&& value);
  #endif
  void set_url(const char* value);
  void set_url(const char* value, size_t size);
  ::std::string* mutable_url();
  ::std::string* release_url();
  void set_allocated_url(::std::string* url);

  // @@protoc_insertion_point(class_scope:cn.kylinos.kmre.kmrecore.LinkOpen)
 private:
  void set_has_url();
  void clear_has_url();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr url_;
  friend struct ::protobuf_KmreCore_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class UpdatePackageStatus : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:cn.kylinos.kmre.kmrecore.UpdatePackageStatus) */ {
 public:
  UpdatePackageStatus();
  virtual ~UpdatePackageStatus();

  UpdatePackageStatus(const UpdatePackageStatus& from);

  inline UpdatePackageStatus& operator=(const UpdatePackageStatus& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  UpdatePackageStatus(UpdatePackageStatus&& from) noexcept
    : UpdatePackageStatus() {
    *this = ::std::move(from);
  }

  inline UpdatePackageStatus& operator=(UpdatePackageStatus&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const UpdatePackageStatus& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const UpdatePackageStatus* internal_default_instance() {
    return reinterpret_cast<const UpdatePackageStatus*>(
               &_UpdatePackageStatus_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    42;

  void Swap(UpdatePackageStatus* other);
  friend void swap(UpdatePackageStatus& a, UpdatePackageStatus& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline UpdatePackageStatus* New() const final {
    return CreateMaybeMessage<UpdatePackageStatus>(NULL);
  }

  UpdatePackageStatus* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<UpdatePackageStatus>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const UpdatePackageStatus& from);
  void MergeFrom(const UpdatePackageStatus& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(UpdatePackageStatus* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string package_name = 1;
  bool has_package_name() const;
  void clear_package_name();
  static const int kPackageNameFieldNumber = 1;
  const ::std::string& package_name() const;
  void set_package_name(const ::std::string& value);
  #if LANG_CXX11
  void set_package_name(::std::string&& value);
  #endif
  void set_package_name(const char* value);
  void set_package_name(const char* value, size_t size);
  ::std::string* mutable_package_name();
  ::std::string* release_package_name();
  void set_allocated_package_name(::std::string* package_name);

  // required int32 status = 2;
  bool has_status() const;
  void clear_status();
  static const int kStatusFieldNumber = 2;
  ::google::protobuf::int32 status() const;
  void set_status(::google::protobuf::int32 value);

  // optional int32 type = 3;
  bool has_type() const;
  void clear_type();
  static const int kTypeFieldNumber = 3;
  ::google::protobuf::int32 type() const;
  void set_type(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:cn.kylinos.kmre.kmrecore.UpdatePackageStatus)
 private:
  void set_has_package_name();
  void clear_has_package_name();
  void set_has_status();
  void clear_has_status();
  void set_has_type();
  void clear_has_type();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr package_name_;
  ::google::protobuf::int32 status_;
  ::google::protobuf::int32 type_;
  friend struct ::protobuf_KmreCore_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SendSystemProp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:cn.kylinos.kmre.kmrecore.SendSystemProp) */ {
 public:
  SendSystemProp();
  virtual ~SendSystemProp();

  SendSystemProp(const SendSystemProp& from);

  inline SendSystemProp& operator=(const SendSystemProp& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  SendSystemProp(SendSystemProp&& from) noexcept
    : SendSystemProp() {
    *this = ::std::move(from);
  }

  inline SendSystemProp& operator=(SendSystemProp&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SendSystemProp& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const SendSystemProp* internal_default_instance() {
    return reinterpret_cast<const SendSystemProp*>(
               &_SendSystemProp_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    43;

  void Swap(SendSystemProp* other);
  friend void swap(SendSystemProp& a, SendSystemProp& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline SendSystemProp* New() const final {
    return CreateMaybeMessage<SendSystemProp>(NULL);
  }

  SendSystemProp* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<SendSystemProp>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const SendSystemProp& from);
  void MergeFrom(const SendSystemProp& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(SendSystemProp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string value_field = 2;
  bool has_value_field() const;
  void clear_value_field();
  static const int kValueFieldFieldNumber = 2;
  const ::std::string& value_field() const;
  void set_value_field(const ::std::string& value);
  #if LANG_CXX11
  void set_value_field(::std::string&& value);
  #endif
  void set_value_field(const char* value);
  void set_value_field(const char* value, size_t size);
  ::std::string* mutable_value_field();
  ::std::string* release_value_field();
  void set_allocated_value_field(::std::string* value_field);

  // required string value = 3;
  bool has_value() const;
  void clear_value();
  static const int kValueFieldNumber = 3;
  const ::std::string& value() const;
  void set_value(const ::std::string& value);
  #if LANG_CXX11
  void set_value(::std::string&& value);
  #endif
  void set_value(const char* value);
  void set_value(const char* value, size_t size);
  ::std::string* mutable_value();
  ::std::string* release_value();
  void set_allocated_value(::std::string* value);

  // required int32 event_type = 1;
  bool has_event_type() const;
  void clear_event_type();
  static const int kEventTypeFieldNumber = 1;
  ::google::protobuf::int32 event_type() const;
  void set_event_type(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:cn.kylinos.kmre.kmrecore.SendSystemProp)
 private:
  void set_has_event_type();
  void clear_has_event_type();
  void set_has_value_field();
  void clear_has_value_field();
  void set_has_value();
  void clear_has_value();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr value_field_;
  ::google::protobuf::internal::ArenaStringPtr value_;
  ::google::protobuf::int32 event_type_;
  friend struct ::protobuf_KmreCore_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class EventSequence : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:cn.kylinos.kmre.kmrecore.EventSequence) */ {
 public:
  EventSequence();
  virtual ~EventSequence();

  EventSequence(const EventSequence& from);

  inline EventSequence& operator=(const EventSequence& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  EventSequence(EventSequence&& from) noexcept
    : EventSequence() {
    *this = ::std::move(from);
  }

  inline EventSequence& operator=(EventSequence&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const EventSequence& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const EventSequence* internal_default_instance() {
    return reinterpret_cast<const EventSequence*>(
               &_EventSequence_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    44;

  void Swap(EventSequence* other);
  friend void swap(EventSequence& a, EventSequence& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline EventSequence* New() const final {
    return CreateMaybeMessage<EventSequence>(NULL);
  }

  EventSequence* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<EventSequence>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const EventSequence& from);
  void MergeFrom(const EventSequence& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(EventSequence* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .cn.kylinos.kmre.kmrecore.Notification notification = 1;
  bool has_notification() const;
  void clear_notification();
  static const int kNotificationFieldNumber = 1;
  private:
  const ::cn::kylinos::kmre::kmrecore::Notification& _internal_notification() const;
  public:
  const ::cn::kylinos::kmre::kmrecore::Notification& notification() const;
  ::cn::kylinos::kmre::kmrecore::Notification* release_notification();
  ::cn::kylinos::kmre::kmrecore::Notification* mutable_notification();
  void set_allocated_notification(::cn::kylinos::kmre::kmrecore::Notification* notification);

  // optional .cn.kylinos.kmre.kmrecore.EventInfo event_info = 2;
  bool has_event_info() const;
  void clear_event_info();
  static const int kEventInfoFieldNumber = 2;
  private:
  const ::cn::kylinos::kmre::kmrecore::EventInfo& _internal_event_info() const;
  public:
  const ::cn::kylinos::kmre::kmrecore::EventInfo& event_info() const;
  ::cn::kylinos::kmre::kmrecore::EventInfo* release_event_info();
  ::cn::kylinos::kmre::kmrecore::EventInfo* mutable_event_info();
  void set_allocated_event_info(::cn::kylinos::kmre::kmrecore::EventInfo* event_info);

  // optional .cn.kylinos.kmre.kmrecore.LaunchResult launch_result = 3;
  bool has_launch_result() const;
  void clear_launch_result();
  static const int kLaunchResultFieldNumber = 3;
  private:
  const ::cn::kylinos::kmre::kmrecore::LaunchResult& _internal_launch_result() const;
  public:
  const ::cn::kylinos::kmre::kmrecore::LaunchResult& launch_result() const;
  ::cn::kylinos::kmre::kmrecore::LaunchResult* release_launch_result();
  ::cn::kylinos::kmre::kmrecore::LaunchResult* mutable_launch_result();
  void set_allocated_launch_result(::cn::kylinos::kmre::kmrecore::LaunchResult* launch_result);

  // optional .cn.kylinos.kmre.kmrecore.CloseResult close_result = 4;
  bool has_close_result() const;
  void clear_close_result();
  static const int kCloseResultFieldNumber = 4;
  private:
  const ::cn::kylinos::kmre::kmrecore::CloseResult& _internal_close_result() const;
  public:
  const ::cn::kylinos::kmre::kmrecore::CloseResult& close_result() const;
  ::cn::kylinos::kmre::kmrecore::CloseResult* release_close_result();
  ::cn::kylinos::kmre::kmrecore::CloseResult* mutable_close_result();
  void set_allocated_close_result(::cn::kylinos::kmre::kmrecore::CloseResult* close_result);

  // optional .cn.kylinos.kmre.kmrecore.SetClipboard set_clipboard = 5;
  bool has_set_clipboard() const;
  void clear_set_clipboard();
  static const int kSetClipboardFieldNumber = 5;
  private:
  const ::cn::kylinos::kmre::kmrecore::SetClipboard& _internal_set_clipboard() const;
  public:
  const ::cn::kylinos::kmre::kmrecore::SetClipboard& set_clipboard() const;
  ::cn::kylinos::kmre::kmrecore::SetClipboard* release_set_clipboard();
  ::cn::kylinos::kmre::kmrecore::SetClipboard* mutable_set_clipboard();
  void set_allocated_set_clipboard(::cn::kylinos::kmre::kmrecore::SetClipboard* set_clipboard);

  // optional .cn.kylinos.kmre.kmrecore.VirtualScreenFocusResult focus_result = 6;
  bool has_focus_result() const;
  void clear_focus_result();
  static const int kFocusResultFieldNumber = 6;
  private:
  const ::cn::kylinos::kmre::kmrecore::VirtualScreenFocusResult& _internal_focus_result() const;
  public:
  const ::cn::kylinos::kmre::kmrecore::VirtualScreenFocusResult& focus_result() const;
  ::cn::kylinos::kmre::kmrecore::VirtualScreenFocusResult* release_focus_result();
  ::cn::kylinos::kmre::kmrecore::VirtualScreenFocusResult* mutable_focus_result();
  void set_allocated_focus_result(::cn::kylinos::kmre::kmrecore::VirtualScreenFocusResult* focus_result);

  // optional .cn.kylinos.kmre.kmrecore.InputMethodRequest inputmethod_request = 7;
  bool has_inputmethod_request() const;
  void clear_inputmethod_request();
  static const int kInputmethodRequestFieldNumber = 7;
  private:
  const ::cn::kylinos::kmre::kmrecore::InputMethodRequest& _internal_inputmethod_request() const;
  public:
  const ::cn::kylinos::kmre::kmrecore::InputMethodRequest& inputmethod_request() const;
  ::cn::kylinos::kmre::kmrecore::InputMethodRequest* release_inputmethod_request();
  ::cn::kylinos::kmre::kmrecore::InputMethodRequest* mutable_inputmethod_request();
  void set_allocated_inputmethod_request(::cn::kylinos::kmre::kmrecore::InputMethodRequest* inputmethod_request);

  // optional .cn.kylinos.kmre.kmrecore.FilesList files_list = 8;
  bool has_files_list() const;
  void clear_files_list();
  static const int kFilesListFieldNumber = 8;
  private:
  const ::cn::kylinos::kmre::kmrecore::FilesList& _internal_files_list() const;
  public:
  const ::cn::kylinos::kmre::kmrecore::FilesList& files_list() const;
  ::cn::kylinos::kmre::kmrecore::FilesList* release_files_list();
  ::cn::kylinos::kmre::kmrecore::FilesList* mutable_files_list();
  void set_allocated_files_list(::cn::kylinos::kmre::kmrecore::FilesList* files_list);

  // optional .cn.kylinos.kmre.kmrecore.MediaPlayStatus mediaplay_status = 9;
  bool has_mediaplay_status() const;
  void clear_mediaplay_status();
  static const int kMediaplayStatusFieldNumber = 9;
  private:
  const ::cn::kylinos::kmre::kmrecore::MediaPlayStatus& _internal_mediaplay_status() const;
  public:
  const ::cn::kylinos::kmre::kmrecore::MediaPlayStatus& mediaplay_status() const;
  ::cn::kylinos::kmre::kmrecore::MediaPlayStatus* release_mediaplay_status();
  ::cn::kylinos::kmre::kmrecore::MediaPlayStatus* mutable_mediaplay_status();
  void set_allocated_mediaplay_status(::cn::kylinos::kmre::kmrecore::MediaPlayStatus* mediaplay_status);

  // optional .cn.kylinos.kmre.kmrecore.AppMultiplierList app_multipliers = 10;
  bool has_app_multipliers() const;
  void clear_app_multipliers();
  static const int kAppMultipliersFieldNumber = 10;
  private:
  const ::cn::kylinos::kmre::kmrecore::AppMultiplierList& _internal_app_multipliers() const;
  public:
  const ::cn::kylinos::kmre::kmrecore::AppMultiplierList& app_multipliers() const;
  ::cn::kylinos::kmre::kmrecore::AppMultiplierList* release_app_multipliers();
  ::cn::kylinos::kmre::kmrecore::AppMultiplierList* mutable_app_multipliers();
  void set_allocated_app_multipliers(::cn::kylinos::kmre::kmrecore::AppMultiplierList* app_multipliers);

  // optional .cn.kylinos.kmre.kmrecore.ResponseInfo response_info = 11;
  bool has_response_info() const;
  void clear_response_info();
  static const int kResponseInfoFieldNumber = 11;
  private:
  const ::cn::kylinos::kmre::kmrecore::ResponseInfo& _internal_response_info() const;
  public:
  const ::cn::kylinos::kmre::kmrecore::ResponseInfo& response_info() const;
  ::cn::kylinos::kmre::kmrecore::ResponseInfo* release_response_info();
  ::cn::kylinos::kmre::kmrecore::ResponseInfo* mutable_response_info();
  void set_allocated_response_info(::cn::kylinos::kmre::kmrecore::ResponseInfo* response_info);

  // optional .cn.kylinos.kmre.kmrecore.MultiplierSwitch multiplier_switch = 12;
  bool has_multiplier_switch() const;
  void clear_multiplier_switch();
  static const int kMultiplierSwitchFieldNumber = 12;
  private:
  const ::cn::kylinos::kmre::kmrecore::MultiplierSwitch& _internal_multiplier_switch() const;
  public:
  const ::cn::kylinos::kmre::kmrecore::MultiplierSwitch& multiplier_switch() const;
  ::cn::kylinos::kmre::kmrecore::MultiplierSwitch* release_multiplier_switch();
  ::cn::kylinos::kmre::kmrecore::MultiplierSwitch* mutable_multiplier_switch();
  void set_allocated_multiplier_switch(::cn::kylinos::kmre::kmrecore::MultiplierSwitch* multiplier_switch);

  // optional .cn.kylinos.kmre.kmrecore.LinkOpen link_open = 13;
  bool has_link_open() const;
  void clear_link_open();
  static const int kLinkOpenFieldNumber = 13;
  private:
  const ::cn::kylinos::kmre::kmrecore::LinkOpen& _internal_link_open() const;
  public:
  const ::cn::kylinos::kmre::kmrecore::LinkOpen& link_open() const;
  ::cn::kylinos::kmre::kmrecore::LinkOpen* release_link_open();
  ::cn::kylinos::kmre::kmrecore::LinkOpen* mutable_link_open();
  void set_allocated_link_open(::cn::kylinos::kmre::kmrecore::LinkOpen* link_open);

  // optional .cn.kylinos.kmre.kmrecore.UpdatePackageStatus update_package_status = 14;
  bool has_update_package_status() const;
  void clear_update_package_status();
  static const int kUpdatePackageStatusFieldNumber = 14;
  private:
  const ::cn::kylinos::kmre::kmrecore::UpdatePackageStatus& _internal_update_package_status() const;
  public:
  const ::cn::kylinos::kmre::kmrecore::UpdatePackageStatus& update_package_status() const;
  ::cn::kylinos::kmre::kmrecore::UpdatePackageStatus* release_update_package_status();
  ::cn::kylinos::kmre::kmrecore::UpdatePackageStatus* mutable_update_package_status();
  void set_allocated_update_package_status(::cn::kylinos::kmre::kmrecore::UpdatePackageStatus* update_package_status);

  // optional .cn.kylinos.kmre.kmrecore.SendSystemProp system_prop = 15;
  bool has_system_prop() const;
  void clear_system_prop();
  static const int kSystemPropFieldNumber = 15;
  private:
  const ::cn::kylinos::kmre::kmrecore::SendSystemProp& _internal_system_prop() const;
  public:
  const ::cn::kylinos::kmre::kmrecore::SendSystemProp& system_prop() const;
  ::cn::kylinos::kmre::kmrecore::SendSystemProp* release_system_prop();
  ::cn::kylinos::kmre::kmrecore::SendSystemProp* mutable_system_prop();
  void set_allocated_system_prop(::cn::kylinos::kmre::kmrecore::SendSystemProp* system_prop);

  // optional .cn.kylinos.kmre.kmrecore.GetInfoList get_info_list = 16;
  bool has_get_info_list() const;
  void clear_get_info_list();
  static const int kGetInfoListFieldNumber = 16;
  private:
  const ::cn::kylinos::kmre::kmrecore::GetInfoList& _internal_get_info_list() const;
  public:
  const ::cn::kylinos::kmre::kmrecore::GetInfoList& get_info_list() const;
  ::cn::kylinos::kmre::kmrecore::GetInfoList* release_get_info_list();
  ::cn::kylinos::kmre::kmrecore::GetInfoList* mutable_get_info_list();
  void set_allocated_get_info_list(::cn::kylinos::kmre::kmrecore::GetInfoList* get_info_list);

  // optional .cn.kylinos.kmre.kmrecore.ContainerEnvBootStatus container_env_boot_status = 17;
  bool has_container_env_boot_status() const;
  void clear_container_env_boot_status();
  static const int kContainerEnvBootStatusFieldNumber = 17;
  private:
  const ::cn::kylinos::kmre::kmrecore::ContainerEnvBootStatus& _internal_container_env_boot_status() const;
  public:
  const ::cn::kylinos::kmre::kmrecore::ContainerEnvBootStatus& container_env_boot_status() const;
  ::cn::kylinos::kmre::kmrecore::ContainerEnvBootStatus* release_container_env_boot_status();
  ::cn::kylinos::kmre::kmrecore::ContainerEnvBootStatus* mutable_container_env_boot_status();
  void set_allocated_container_env_boot_status(::cn::kylinos::kmre::kmrecore::ContainerEnvBootStatus* container_env_boot_status);

  // @@protoc_insertion_point(class_scope:cn.kylinos.kmre.kmrecore.EventSequence)
 private:
  void set_has_notification();
  void clear_has_notification();
  void set_has_event_info();
  void clear_has_event_info();
  void set_has_launch_result();
  void clear_has_launch_result();
  void set_has_close_result();
  void clear_has_close_result();
  void set_has_set_clipboard();
  void clear_has_set_clipboard();
  void set_has_focus_result();
  void clear_has_focus_result();
  void set_has_inputmethod_request();
  void clear_has_inputmethod_request();
  void set_has_files_list();
  void clear_has_files_list();
  void set_has_mediaplay_status();
  void clear_has_mediaplay_status();
  void set_has_app_multipliers();
  void clear_has_app_multipliers();
  void set_has_response_info();
  void clear_has_response_info();
  void set_has_multiplier_switch();
  void clear_has_multiplier_switch();
  void set_has_link_open();
  void clear_has_link_open();
  void set_has_update_package_status();
  void clear_has_update_package_status();
  void set_has_system_prop();
  void clear_has_system_prop();
  void set_has_get_info_list();
  void clear_has_get_info_list();
  void set_has_container_env_boot_status();
  void clear_has_container_env_boot_status();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::cn::kylinos::kmre::kmrecore::Notification* notification_;
  ::cn::kylinos::kmre::kmrecore::EventInfo* event_info_;
  ::cn::kylinos::kmre::kmrecore::LaunchResult* launch_result_;
  ::cn::kylinos::kmre::kmrecore::CloseResult* close_result_;
  ::cn::kylinos::kmre::kmrecore::SetClipboard* set_clipboard_;
  ::cn::kylinos::kmre::kmrecore::VirtualScreenFocusResult* focus_result_;
  ::cn::kylinos::kmre::kmrecore::InputMethodRequest* inputmethod_request_;
  ::cn::kylinos::kmre::kmrecore::FilesList* files_list_;
  ::cn::kylinos::kmre::kmrecore::MediaPlayStatus* mediaplay_status_;
  ::cn::kylinos::kmre::kmrecore::AppMultiplierList* app_multipliers_;
  ::cn::kylinos::kmre::kmrecore::ResponseInfo* response_info_;
  ::cn::kylinos::kmre::kmrecore::MultiplierSwitch* multiplier_switch_;
  ::cn::kylinos::kmre::kmrecore::LinkOpen* link_open_;
  ::cn::kylinos::kmre::kmrecore::UpdatePackageStatus* update_package_status_;
  ::cn::kylinos::kmre::kmrecore::SendSystemProp* system_prop_;
  ::cn::kylinos::kmre::kmrecore::GetInfoList* get_info_list_;
  ::cn::kylinos::kmre::kmrecore::ContainerEnvBootStatus* container_env_boot_status_;
  friend struct ::protobuf_KmreCore_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// InstallApp

// required string file_name = 1;
inline bool InstallApp::has_file_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void InstallApp::set_has_file_name() {
  _has_bits_[0] |= 0x00000001u;
}
inline void InstallApp::clear_has_file_name() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void InstallApp::clear_file_name() {
  file_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_file_name();
}
inline const ::std::string& InstallApp::file_name() const {
  // @@protoc_insertion_point(field_get:cn.kylinos.kmre.kmrecore.InstallApp.file_name)
  return file_name_.GetNoArena();
}
inline void InstallApp::set_file_name(const ::std::string& value) {
  set_has_file_name();
  file_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:cn.kylinos.kmre.kmrecore.InstallApp.file_name)
}
#if LANG_CXX11
inline void InstallApp::set_file_name(::std::string&& value) {
  set_has_file_name();
  file_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:cn.kylinos.kmre.kmrecore.InstallApp.file_name)
}
#endif
inline void InstallApp::set_file_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_file_name();
  file_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:cn.kylinos.kmre.kmrecore.InstallApp.file_name)
}
inline void InstallApp::set_file_name(const char* value, size_t size) {
  set_has_file_name();
  file_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:cn.kylinos.kmre.kmrecore.InstallApp.file_name)
}
inline ::std::string* InstallApp::mutable_file_name() {
  set_has_file_name();
  // @@protoc_insertion_point(field_mutable:cn.kylinos.kmre.kmrecore.InstallApp.file_name)
  return file_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* InstallApp::release_file_name() {
  // @@protoc_insertion_point(field_release:cn.kylinos.kmre.kmrecore.InstallApp.file_name)
  if (!has_file_name()) {
    return NULL;
  }
  clear_has_file_name();
  return file_name_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void InstallApp::set_allocated_file_name(::std::string* file_name) {
  if (file_name != NULL) {
    set_has_file_name();
  } else {
    clear_has_file_name();
  }
  file_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), file_name);
  // @@protoc_insertion_point(field_set_allocated:cn.kylinos.kmre.kmrecore.InstallApp.file_name)
}

// required string app_name = 2;
inline bool InstallApp::has_app_name() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void InstallApp::set_has_app_name() {
  _has_bits_[0] |= 0x00000002u;
}
inline void InstallApp::clear_has_app_name() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void InstallApp::clear_app_name() {
  app_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_app_name();
}
inline const ::std::string& InstallApp::app_name() const {
  // @@protoc_insertion_point(field_get:cn.kylinos.kmre.kmrecore.InstallApp.app_name)
  return app_name_.GetNoArena();
}
inline void InstallApp::set_app_name(const ::std::string& value) {
  set_has_app_name();
  app_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:cn.kylinos.kmre.kmrecore.InstallApp.app_name)
}
#if LANG_CXX11
inline void InstallApp::set_app_name(::std::string&& value) {
  set_has_app_name();
  app_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:cn.kylinos.kmre.kmrecore.InstallApp.app_name)
}
#endif
inline void InstallApp::set_app_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_app_name();
  app_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:cn.kylinos.kmre.kmrecore.InstallApp.app_name)
}
inline void InstallApp::set_app_name(const char* value, size_t size) {
  set_has_app_name();
  app_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:cn.kylinos.kmre.kmrecore.InstallApp.app_name)
}
inline ::std::string* InstallApp::mutable_app_name() {
  set_has_app_name();
  // @@protoc_insertion_point(field_mutable:cn.kylinos.kmre.kmrecore.InstallApp.app_name)
  return app_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* InstallApp::release_app_name() {
  // @@protoc_insertion_point(field_release:cn.kylinos.kmre.kmrecore.InstallApp.app_name)
  if (!has_app_name()) {
    return NULL;
  }
  clear_has_app_name();
  return app_name_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void InstallApp::set_allocated_app_name(::std::string* app_name) {
  if (app_name != NULL) {
    set_has_app_name();
  } else {
    clear_has_app_name();
  }
  app_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), app_name);
  // @@protoc_insertion_point(field_set_allocated:cn.kylinos.kmre.kmrecore.InstallApp.app_name)
}

// required string package_name = 3;
inline bool InstallApp::has_package_name() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void InstallApp::set_has_package_name() {
  _has_bits_[0] |= 0x00000004u;
}
inline void InstallApp::clear_has_package_name() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void InstallApp::clear_package_name() {
  package_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_package_name();
}
inline const ::std::string& InstallApp::package_name() const {
  // @@protoc_insertion_point(field_get:cn.kylinos.kmre.kmrecore.InstallApp.package_name)
  return package_name_.GetNoArena();
}
inline void InstallApp::set_package_name(const ::std::string& value) {
  set_has_package_name();
  package_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:cn.kylinos.kmre.kmrecore.InstallApp.package_name)
}
#if LANG_CXX11
inline void InstallApp::set_package_name(::std::string&& value) {
  set_has_package_name();
  package_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:cn.kylinos.kmre.kmrecore.InstallApp.package_name)
}
#endif
inline void InstallApp::set_package_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_package_name();
  package_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:cn.kylinos.kmre.kmrecore.InstallApp.package_name)
}
inline void InstallApp::set_package_name(const char* value, size_t size) {
  set_has_package_name();
  package_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:cn.kylinos.kmre.kmrecore.InstallApp.package_name)
}
inline ::std::string* InstallApp::mutable_package_name() {
  set_has_package_name();
  // @@protoc_insertion_point(field_mutable:cn.kylinos.kmre.kmrecore.InstallApp.package_name)
  return package_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* InstallApp::release_package_name() {
  // @@protoc_insertion_point(field_release:cn.kylinos.kmre.kmrecore.InstallApp.package_name)
  if (!has_package_name()) {
    return NULL;
  }
  clear_has_package_name();
  return package_name_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void InstallApp::set_allocated_package_name(::std::string* package_name) {
  if (package_name != NULL) {
    set_has_package_name();
  } else {
    clear_has_package_name();
  }
  package_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), package_name);
  // @@protoc_insertion_point(field_set_allocated:cn.kylinos.kmre.kmrecore.InstallApp.package_name)
}

// -------------------------------------------------------------------

// UninstallApp

// required string package_name = 1;
inline bool UninstallApp::has_package_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void UninstallApp::set_has_package_name() {
  _has_bits_[0] |= 0x00000001u;
}
inline void UninstallApp::clear_has_package_name() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void UninstallApp::clear_package_name() {
  package_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_package_name();
}
inline const ::std::string& UninstallApp::package_name() const {
  // @@protoc_insertion_point(field_get:cn.kylinos.kmre.kmrecore.UninstallApp.package_name)
  return package_name_.GetNoArena();
}
inline void UninstallApp::set_package_name(const ::std::string& value) {
  set_has_package_name();
  package_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:cn.kylinos.kmre.kmrecore.UninstallApp.package_name)
}
#if LANG_CXX11
inline void UninstallApp::set_package_name(::std::string&& value) {
  set_has_package_name();
  package_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:cn.kylinos.kmre.kmrecore.UninstallApp.package_name)
}
#endif
inline void UninstallApp::set_package_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_package_name();
  package_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:cn.kylinos.kmre.kmrecore.UninstallApp.package_name)
}
inline void UninstallApp::set_package_name(const char* value, size_t size) {
  set_has_package_name();
  package_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:cn.kylinos.kmre.kmrecore.UninstallApp.package_name)
}
inline ::std::string* UninstallApp::mutable_package_name() {
  set_has_package_name();
  // @@protoc_insertion_point(field_mutable:cn.kylinos.kmre.kmrecore.UninstallApp.package_name)
  return package_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* UninstallApp::release_package_name() {
  // @@protoc_insertion_point(field_release:cn.kylinos.kmre.kmrecore.UninstallApp.package_name)
  if (!has_package_name()) {
    return NULL;
  }
  clear_has_package_name();
  return package_name_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void UninstallApp::set_allocated_package_name(::std::string* package_name) {
  if (package_name != NULL) {
    set_has_package_name();
  } else {
    clear_has_package_name();
  }
  package_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), package_name);
  // @@protoc_insertion_point(field_set_allocated:cn.kylinos.kmre.kmrecore.UninstallApp.package_name)
}

// -------------------------------------------------------------------

// LaunchApp

// required string package_name = 1;
inline bool LaunchApp::has_package_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void LaunchApp::set_has_package_name() {
  _has_bits_[0] |= 0x00000001u;
}
inline void LaunchApp::clear_has_package_name() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void LaunchApp::clear_package_name() {
  package_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_package_name();
}
inline const ::std::string& LaunchApp::package_name() const {
  // @@protoc_insertion_point(field_get:cn.kylinos.kmre.kmrecore.LaunchApp.package_name)
  return package_name_.GetNoArena();
}
inline void LaunchApp::set_package_name(const ::std::string& value) {
  set_has_package_name();
  package_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:cn.kylinos.kmre.kmrecore.LaunchApp.package_name)
}
#if LANG_CXX11
inline void LaunchApp::set_package_name(::std::string&& value) {
  set_has_package_name();
  package_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:cn.kylinos.kmre.kmrecore.LaunchApp.package_name)
}
#endif
inline void LaunchApp::set_package_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_package_name();
  package_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:cn.kylinos.kmre.kmrecore.LaunchApp.package_name)
}
inline void LaunchApp::set_package_name(const char* value, size_t size) {
  set_has_package_name();
  package_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:cn.kylinos.kmre.kmrecore.LaunchApp.package_name)
}
inline ::std::string* LaunchApp::mutable_package_name() {
  set_has_package_name();
  // @@protoc_insertion_point(field_mutable:cn.kylinos.kmre.kmrecore.LaunchApp.package_name)
  return package_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* LaunchApp::release_package_name() {
  // @@protoc_insertion_point(field_release:cn.kylinos.kmre.kmrecore.LaunchApp.package_name)
  if (!has_package_name()) {
    return NULL;
  }
  clear_has_package_name();
  return package_name_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void LaunchApp::set_allocated_package_name(::std::string* package_name) {
  if (package_name != NULL) {
    set_has_package_name();
  } else {
    clear_has_package_name();
  }
  package_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), package_name);
  // @@protoc_insertion_point(field_set_allocated:cn.kylinos.kmre.kmrecore.LaunchApp.package_name)
}

// required bool fullscreen = 2;
inline bool LaunchApp::has_fullscreen() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void LaunchApp::set_has_fullscreen() {
  _has_bits_[0] |= 0x00000002u;
}
inline void LaunchApp::clear_has_fullscreen() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void LaunchApp::clear_fullscreen() {
  fullscreen_ = false;
  clear_has_fullscreen();
}
inline bool LaunchApp::fullscreen() const {
  // @@protoc_insertion_point(field_get:cn.kylinos.kmre.kmrecore.LaunchApp.fullscreen)
  return fullscreen_;
}
inline void LaunchApp::set_fullscreen(bool value) {
  set_has_fullscreen();
  fullscreen_ = value;
  // @@protoc_insertion_point(field_set:cn.kylinos.kmre.kmrecore.LaunchApp.fullscreen)
}

// required int32 width = 3;
inline bool LaunchApp::has_width() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void LaunchApp::set_has_width() {
  _has_bits_[0] |= 0x00000004u;
}
inline void LaunchApp::clear_has_width() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void LaunchApp::clear_width() {
  width_ = 0;
  clear_has_width();
}
inline ::google::protobuf::int32 LaunchApp::width() const {
  // @@protoc_insertion_point(field_get:cn.kylinos.kmre.kmrecore.LaunchApp.width)
  return width_;
}
inline void LaunchApp::set_width(::google::protobuf::int32 value) {
  set_has_width();
  width_ = value;
  // @@protoc_insertion_point(field_set:cn.kylinos.kmre.kmrecore.LaunchApp.width)
}

// required int32 height = 4;
inline bool LaunchApp::has_height() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void LaunchApp::set_has_height() {
  _has_bits_[0] |= 0x00000008u;
}
inline void LaunchApp::clear_has_height() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void LaunchApp::clear_height() {
  height_ = 0;
  clear_has_height();
}
inline ::google::protobuf::int32 LaunchApp::height() const {
  // @@protoc_insertion_point(field_get:cn.kylinos.kmre.kmrecore.LaunchApp.height)
  return height_;
}
inline void LaunchApp::set_height(::google::protobuf::int32 value) {
  set_has_height();
  height_ = value;
  // @@protoc_insertion_point(field_set:cn.kylinos.kmre.kmrecore.LaunchApp.height)
}

// required int32 density = 5;
inline bool LaunchApp::has_density() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void LaunchApp::set_has_density() {
  _has_bits_[0] |= 0x00000010u;
}
inline void LaunchApp::clear_has_density() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void LaunchApp::clear_density() {
  density_ = 0;
  clear_has_density();
}
inline ::google::protobuf::int32 LaunchApp::density() const {
  // @@protoc_insertion_point(field_get:cn.kylinos.kmre.kmrecore.LaunchApp.density)
  return density_;
}
inline void LaunchApp::set_density(::google::protobuf::int32 value) {
  set_has_density();
  density_ = value;
  // @@protoc_insertion_point(field_set:cn.kylinos.kmre.kmrecore.LaunchApp.density)
}

// -------------------------------------------------------------------

// CloseApp

// required string app_name = 1;
inline bool CloseApp::has_app_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CloseApp::set_has_app_name() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CloseApp::clear_has_app_name() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CloseApp::clear_app_name() {
  app_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_app_name();
}
inline const ::std::string& CloseApp::app_name() const {
  // @@protoc_insertion_point(field_get:cn.kylinos.kmre.kmrecore.CloseApp.app_name)
  return app_name_.GetNoArena();
}
inline void CloseApp::set_app_name(const ::std::string& value) {
  set_has_app_name();
  app_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:cn.kylinos.kmre.kmrecore.CloseApp.app_name)
}
#if LANG_CXX11
inline void CloseApp::set_app_name(::std::string&& value) {
  set_has_app_name();
  app_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:cn.kylinos.kmre.kmrecore.CloseApp.app_name)
}
#endif
inline void CloseApp::set_app_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_app_name();
  app_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:cn.kylinos.kmre.kmrecore.CloseApp.app_name)
}
inline void CloseApp::set_app_name(const char* value, size_t size) {
  set_has_app_name();
  app_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:cn.kylinos.kmre.kmrecore.CloseApp.app_name)
}
inline ::std::string* CloseApp::mutable_app_name() {
  set_has_app_name();
  // @@protoc_insertion_point(field_mutable:cn.kylinos.kmre.kmrecore.CloseApp.app_name)
  return app_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CloseApp::release_app_name() {
  // @@protoc_insertion_point(field_release:cn.kylinos.kmre.kmrecore.CloseApp.app_name)
  if (!has_app_name()) {
    return NULL;
  }
  clear_has_app_name();
  return app_name_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CloseApp::set_allocated_app_name(::std::string* app_name) {
  if (app_name != NULL) {
    set_has_app_name();
  } else {
    clear_has_app_name();
  }
  app_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), app_name);
  // @@protoc_insertion_point(field_set_allocated:cn.kylinos.kmre.kmrecore.CloseApp.app_name)
}

// required string package_name = 2;
inline bool CloseApp::has_package_name() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CloseApp::set_has_package_name() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CloseApp::clear_has_package_name() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CloseApp::clear_package_name() {
  package_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_package_name();
}
inline const ::std::string& CloseApp::package_name() const {
  // @@protoc_insertion_point(field_get:cn.kylinos.kmre.kmrecore.CloseApp.package_name)
  return package_name_.GetNoArena();
}
inline void CloseApp::set_package_name(const ::std::string& value) {
  set_has_package_name();
  package_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:cn.kylinos.kmre.kmrecore.CloseApp.package_name)
}
#if LANG_CXX11
inline void CloseApp::set_package_name(::std::string&& value) {
  set_has_package_name();
  package_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:cn.kylinos.kmre.kmrecore.CloseApp.package_name)
}
#endif
inline void CloseApp::set_package_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_package_name();
  package_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:cn.kylinos.kmre.kmrecore.CloseApp.package_name)
}
inline void CloseApp::set_package_name(const char* value, size_t size) {
  set_has_package_name();
  package_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:cn.kylinos.kmre.kmrecore.CloseApp.package_name)
}
inline ::std::string* CloseApp::mutable_package_name() {
  set_has_package_name();
  // @@protoc_insertion_point(field_mutable:cn.kylinos.kmre.kmrecore.CloseApp.package_name)
  return package_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CloseApp::release_package_name() {
  // @@protoc_insertion_point(field_release:cn.kylinos.kmre.kmrecore.CloseApp.package_name)
  if (!has_package_name()) {
    return NULL;
  }
  clear_has_package_name();
  return package_name_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CloseApp::set_allocated_package_name(::std::string* package_name) {
  if (package_name != NULL) {
    set_has_package_name();
  } else {
    clear_has_package_name();
  }
  package_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), package_name);
  // @@protoc_insertion_point(field_set_allocated:cn.kylinos.kmre.kmrecore.CloseApp.package_name)
}

// optional bool force_kill = 3;
inline bool CloseApp::has_force_kill() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CloseApp::set_has_force_kill() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CloseApp::clear_has_force_kill() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CloseApp::clear_force_kill() {
  force_kill_ = false;
  clear_has_force_kill();
}
inline bool CloseApp::force_kill() const {
  // @@protoc_insertion_point(field_get:cn.kylinos.kmre.kmrecore.CloseApp.force_kill)
  return force_kill_;
}
inline void CloseApp::set_force_kill(bool value) {
  set_has_force_kill();
  force_kill_ = value;
  // @@protoc_insertion_point(field_set:cn.kylinos.kmre.kmrecore.CloseApp.force_kill)
}

// -------------------------------------------------------------------

// GetInstalledAppList

// optional bool include_hide_app = 1;
inline bool GetInstalledAppList::has_include_hide_app() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GetInstalledAppList::set_has_include_hide_app() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GetInstalledAppList::clear_has_include_hide_app() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GetInstalledAppList::clear_include_hide_app() {
  include_hide_app_ = false;
  clear_has_include_hide_app();
}
inline bool GetInstalledAppList::include_hide_app() const {
  // @@protoc_insertion_point(field_get:cn.kylinos.kmre.kmrecore.GetInstalledAppList.include_hide_app)
  return include_hide_app_;
}
inline void GetInstalledAppList::set_include_hide_app(bool value) {
  set_has_include_hide_app();
  include_hide_app_ = value;
  // @@protoc_insertion_point(field_set:cn.kylinos.kmre.kmrecore.GetInstalledAppList.include_hide_app)
}

// -------------------------------------------------------------------

// GetRunningAppList

// required bool with_thumbnail = 1;
inline bool GetRunningAppList::has_with_thumbnail() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GetRunningAppList::set_has_with_thumbnail() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GetRunningAppList::clear_has_with_thumbnail() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GetRunningAppList::clear_with_thumbnail() {
  with_thumbnail_ = false;
  clear_has_with_thumbnail();
}
inline bool GetRunningAppList::with_thumbnail() const {
  // @@protoc_insertion_point(field_get:cn.kylinos.kmre.kmrecore.GetRunningAppList.with_thumbnail)
  return with_thumbnail_;
}
inline void GetRunningAppList::set_with_thumbnail(bool value) {
  set_has_with_thumbnail();
  with_thumbnail_ = value;
  // @@protoc_insertion_point(field_set:cn.kylinos.kmre.kmrecore.GetRunningAppList.with_thumbnail)
}

// -------------------------------------------------------------------

// SetClipboard

// required string content = 1;
inline bool SetClipboard::has_content() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SetClipboard::set_has_content() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SetClipboard::clear_has_content() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SetClipboard::clear_content() {
  content_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_content();
}
inline const ::std::string& SetClipboard::content() const {
  // @@protoc_insertion_point(field_get:cn.kylinos.kmre.kmrecore.SetClipboard.content)
  return content_.GetNoArena();
}
inline void SetClipboard::set_content(const ::std::string& value) {
  set_has_content();
  content_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:cn.kylinos.kmre.kmrecore.SetClipboard.content)
}
#if LANG_CXX11
inline void SetClipboard::set_content(::std::string&& value) {
  set_has_content();
  content_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:cn.kylinos.kmre.kmrecore.SetClipboard.content)
}
#endif
inline void SetClipboard::set_content(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_content();
  content_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:cn.kylinos.kmre.kmrecore.SetClipboard.content)
}
inline void SetClipboard::set_content(const char* value, size_t size) {
  set_has_content();
  content_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:cn.kylinos.kmre.kmrecore.SetClipboard.content)
}
inline ::std::string* SetClipboard::mutable_content() {
  set_has_content();
  // @@protoc_insertion_point(field_mutable:cn.kylinos.kmre.kmrecore.SetClipboard.content)
  return content_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SetClipboard::release_content() {
  // @@protoc_insertion_point(field_release:cn.kylinos.kmre.kmrecore.SetClipboard.content)
  if (!has_content()) {
    return NULL;
  }
  clear_has_content();
  return content_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SetClipboard::set_allocated_content(::std::string* content) {
  if (content != NULL) {
    set_has_content();
  } else {
    clear_has_content();
  }
  content_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), content);
  // @@protoc_insertion_point(field_set_allocated:cn.kylinos.kmre.kmrecore.SetClipboard.content)
}

// -------------------------------------------------------------------

// FocusWin

// required int32 focus_win = 1;
inline bool FocusWin::has_focus_win() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void FocusWin::set_has_focus_win() {
  _has_bits_[0] |= 0x00000001u;
}
inline void FocusWin::clear_has_focus_win() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void FocusWin::clear_focus_win() {
  focus_win_ = 0;
  clear_has_focus_win();
}
inline ::google::protobuf::int32 FocusWin::focus_win() const {
  // @@protoc_insertion_point(field_get:cn.kylinos.kmre.kmrecore.FocusWin.focus_win)
  return focus_win_;
}
inline void FocusWin::set_focus_win(::google::protobuf::int32 value) {
  set_has_focus_win();
  focus_win_ = value;
  // @@protoc_insertion_point(field_set:cn.kylinos.kmre.kmrecore.FocusWin.focus_win)
}

// -------------------------------------------------------------------

// ControlApp

// required int32 display_id = 1;
inline bool ControlApp::has_display_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ControlApp::set_has_display_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ControlApp::clear_has_display_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ControlApp::clear_display_id() {
  display_id_ = 0;
  clear_has_display_id();
}
inline ::google::protobuf::int32 ControlApp::display_id() const {
  // @@protoc_insertion_point(field_get:cn.kylinos.kmre.kmrecore.ControlApp.display_id)
  return display_id_;
}
inline void ControlApp::set_display_id(::google::protobuf::int32 value) {
  set_has_display_id();
  display_id_ = value;
  // @@protoc_insertion_point(field_set:cn.kylinos.kmre.kmrecore.ControlApp.display_id)
}

// required string package_name = 2;
inline bool ControlApp::has_package_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ControlApp::set_has_package_name() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ControlApp::clear_has_package_name() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ControlApp::clear_package_name() {
  package_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_package_name();
}
inline const ::std::string& ControlApp::package_name() const {
  // @@protoc_insertion_point(field_get:cn.kylinos.kmre.kmrecore.ControlApp.package_name)
  return package_name_.GetNoArena();
}
inline void ControlApp::set_package_name(const ::std::string& value) {
  set_has_package_name();
  package_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:cn.kylinos.kmre.kmrecore.ControlApp.package_name)
}
#if LANG_CXX11
inline void ControlApp::set_package_name(::std::string&& value) {
  set_has_package_name();
  package_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:cn.kylinos.kmre.kmrecore.ControlApp.package_name)
}
#endif
inline void ControlApp::set_package_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_package_name();
  package_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:cn.kylinos.kmre.kmrecore.ControlApp.package_name)
}
inline void ControlApp::set_package_name(const char* value, size_t size) {
  set_has_package_name();
  package_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:cn.kylinos.kmre.kmrecore.ControlApp.package_name)
}
inline ::std::string* ControlApp::mutable_package_name() {
  set_has_package_name();
  // @@protoc_insertion_point(field_mutable:cn.kylinos.kmre.kmrecore.ControlApp.package_name)
  return package_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ControlApp::release_package_name() {
  // @@protoc_insertion_point(field_release:cn.kylinos.kmre.kmrecore.ControlApp.package_name)
  if (!has_package_name()) {
    return NULL;
  }
  clear_has_package_name();
  return package_name_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ControlApp::set_allocated_package_name(::std::string* package_name) {
  if (package_name != NULL) {
    set_has_package_name();
  } else {
    clear_has_package_name();
  }
  package_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), package_name);
  // @@protoc_insertion_point(field_set_allocated:cn.kylinos.kmre.kmrecore.ControlApp.package_name)
}

// required int32 event_type = 3;
inline bool ControlApp::has_event_type() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ControlApp::set_has_event_type() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ControlApp::clear_has_event_type() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ControlApp::clear_event_type() {
  event_type_ = 0;
  clear_has_event_type();
}
inline ::google::protobuf::int32 ControlApp::event_type() const {
  // @@protoc_insertion_point(field_get:cn.kylinos.kmre.kmrecore.ControlApp.event_type)
  return event_type_;
}
inline void ControlApp::set_event_type(::google::protobuf::int32 value) {
  set_has_event_type();
  event_type_ = value;
  // @@protoc_insertion_point(field_set:cn.kylinos.kmre.kmrecore.ControlApp.event_type)
}

// optional int32 event_value = 4;
inline bool ControlApp::has_event_value() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void ControlApp::set_has_event_value() {
  _has_bits_[0] |= 0x00000008u;
}
inline void ControlApp::clear_has_event_value() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void ControlApp::clear_event_value() {
  event_value_ = 0;
  clear_has_event_value();
}
inline ::google::protobuf::int32 ControlApp::event_value() const {
  // @@protoc_insertion_point(field_get:cn.kylinos.kmre.kmrecore.ControlApp.event_value)
  return event_value_;
}
inline void ControlApp::set_event_value(::google::protobuf::int32 value) {
  set_has_event_value();
  event_value_ = value;
  // @@protoc_insertion_point(field_set:cn.kylinos.kmre.kmrecore.ControlApp.event_value)
}

// -------------------------------------------------------------------

// InsertFile

// required string data = 1;
inline bool InsertFile::has_data() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void InsertFile::set_has_data() {
  _has_bits_[0] |= 0x00000001u;
}
inline void InsertFile::clear_has_data() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void InsertFile::clear_data() {
  data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_data();
}
inline const ::std::string& InsertFile::data() const {
  // @@protoc_insertion_point(field_get:cn.kylinos.kmre.kmrecore.InsertFile.data)
  return data_.GetNoArena();
}
inline void InsertFile::set_data(const ::std::string& value) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:cn.kylinos.kmre.kmrecore.InsertFile.data)
}
#if LANG_CXX11
inline void InsertFile::set_data(::std::string&& value) {
  set_has_data();
  data_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:cn.kylinos.kmre.kmrecore.InsertFile.data)
}
#endif
inline void InsertFile::set_data(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:cn.kylinos.kmre.kmrecore.InsertFile.data)
}
inline void InsertFile::set_data(const char* value, size_t size) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:cn.kylinos.kmre.kmrecore.InsertFile.data)
}
inline ::std::string* InsertFile::mutable_data() {
  set_has_data();
  // @@protoc_insertion_point(field_mutable:cn.kylinos.kmre.kmrecore.InsertFile.data)
  return data_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* InsertFile::release_data() {
  // @@protoc_insertion_point(field_release:cn.kylinos.kmre.kmrecore.InsertFile.data)
  if (!has_data()) {
    return NULL;
  }
  clear_has_data();
  return data_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void InsertFile::set_allocated_data(::std::string* data) {
  if (data != NULL) {
    set_has_data();
  } else {
    clear_has_data();
  }
  data_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), data);
  // @@protoc_insertion_point(field_set_allocated:cn.kylinos.kmre.kmrecore.InsertFile.data)
}

// required string mime_type = 2;
inline bool InsertFile::has_mime_type() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void InsertFile::set_has_mime_type() {
  _has_bits_[0] |= 0x00000002u;
}
inline void InsertFile::clear_has_mime_type() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void InsertFile::clear_mime_type() {
  mime_type_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_mime_type();
}
inline const ::std::string& InsertFile::mime_type() const {
  // @@protoc_insertion_point(field_get:cn.kylinos.kmre.kmrecore.InsertFile.mime_type)
  return mime_type_.GetNoArena();
}
inline void InsertFile::set_mime_type(const ::std::string& value) {
  set_has_mime_type();
  mime_type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:cn.kylinos.kmre.kmrecore.InsertFile.mime_type)
}
#if LANG_CXX11
inline void InsertFile::set_mime_type(::std::string&& value) {
  set_has_mime_type();
  mime_type_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:cn.kylinos.kmre.kmrecore.InsertFile.mime_type)
}
#endif
inline void InsertFile::set_mime_type(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_mime_type();
  mime_type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:cn.kylinos.kmre.kmrecore.InsertFile.mime_type)
}
inline void InsertFile::set_mime_type(const char* value, size_t size) {
  set_has_mime_type();
  mime_type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:cn.kylinos.kmre.kmrecore.InsertFile.mime_type)
}
inline ::std::string* InsertFile::mutable_mime_type() {
  set_has_mime_type();
  // @@protoc_insertion_point(field_mutable:cn.kylinos.kmre.kmrecore.InsertFile.mime_type)
  return mime_type_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* InsertFile::release_mime_type() {
  // @@protoc_insertion_point(field_release:cn.kylinos.kmre.kmrecore.InsertFile.mime_type)
  if (!has_mime_type()) {
    return NULL;
  }
  clear_has_mime_type();
  return mime_type_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void InsertFile::set_allocated_mime_type(::std::string* mime_type) {
  if (mime_type != NULL) {
    set_has_mime_type();
  } else {
    clear_has_mime_type();
  }
  mime_type_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), mime_type);
  // @@protoc_insertion_point(field_set_allocated:cn.kylinos.kmre.kmrecore.InsertFile.mime_type)
}

// -------------------------------------------------------------------

// RemoveFile

// required string data = 1;
inline bool RemoveFile::has_data() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void RemoveFile::set_has_data() {
  _has_bits_[0] |= 0x00000001u;
}
inline void RemoveFile::clear_has_data() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void RemoveFile::clear_data() {
  data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_data();
}
inline const ::std::string& RemoveFile::data() const {
  // @@protoc_insertion_point(field_get:cn.kylinos.kmre.kmrecore.RemoveFile.data)
  return data_.GetNoArena();
}
inline void RemoveFile::set_data(const ::std::string& value) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:cn.kylinos.kmre.kmrecore.RemoveFile.data)
}
#if LANG_CXX11
inline void RemoveFile::set_data(::std::string&& value) {
  set_has_data();
  data_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:cn.kylinos.kmre.kmrecore.RemoveFile.data)
}
#endif
inline void RemoveFile::set_data(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:cn.kylinos.kmre.kmrecore.RemoveFile.data)
}
inline void RemoveFile::set_data(const char* value, size_t size) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:cn.kylinos.kmre.kmrecore.RemoveFile.data)
}
inline ::std::string* RemoveFile::mutable_data() {
  set_has_data();
  // @@protoc_insertion_point(field_mutable:cn.kylinos.kmre.kmrecore.RemoveFile.data)
  return data_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* RemoveFile::release_data() {
  // @@protoc_insertion_point(field_release:cn.kylinos.kmre.kmrecore.RemoveFile.data)
  if (!has_data()) {
    return NULL;
  }
  clear_has_data();
  return data_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void RemoveFile::set_allocated_data(::std::string* data) {
  if (data != NULL) {
    set_has_data();
  } else {
    clear_has_data();
  }
  data_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), data);
  // @@protoc_insertion_point(field_set_allocated:cn.kylinos.kmre.kmrecore.RemoveFile.data)
}

// required string mime_type = 2;
inline bool RemoveFile::has_mime_type() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void RemoveFile::set_has_mime_type() {
  _has_bits_[0] |= 0x00000002u;
}
inline void RemoveFile::clear_has_mime_type() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void RemoveFile::clear_mime_type() {
  mime_type_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_mime_type();
}
inline const ::std::string& RemoveFile::mime_type() const {
  // @@protoc_insertion_point(field_get:cn.kylinos.kmre.kmrecore.RemoveFile.mime_type)
  return mime_type_.GetNoArena();
}
inline void RemoveFile::set_mime_type(const ::std::string& value) {
  set_has_mime_type();
  mime_type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:cn.kylinos.kmre.kmrecore.RemoveFile.mime_type)
}
#if LANG_CXX11
inline void RemoveFile::set_mime_type(::std::string&& value) {
  set_has_mime_type();
  mime_type_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:cn.kylinos.kmre.kmrecore.RemoveFile.mime_type)
}
#endif
inline void RemoveFile::set_mime_type(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_mime_type();
  mime_type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:cn.kylinos.kmre.kmrecore.RemoveFile.mime_type)
}
inline void RemoveFile::set_mime_type(const char* value, size_t size) {
  set_has_mime_type();
  mime_type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:cn.kylinos.kmre.kmrecore.RemoveFile.mime_type)
}
inline ::std::string* RemoveFile::mutable_mime_type() {
  set_has_mime_type();
  // @@protoc_insertion_point(field_mutable:cn.kylinos.kmre.kmrecore.RemoveFile.mime_type)
  return mime_type_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* RemoveFile::release_mime_type() {
  // @@protoc_insertion_point(field_release:cn.kylinos.kmre.kmrecore.RemoveFile.mime_type)
  if (!has_mime_type()) {
    return NULL;
  }
  clear_has_mime_type();
  return mime_type_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void RemoveFile::set_allocated_mime_type(::std::string* mime_type) {
  if (mime_type != NULL) {
    set_has_mime_type();
  } else {
    clear_has_mime_type();
  }
  mime_type_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), mime_type);
  // @@protoc_insertion_point(field_set_allocated:cn.kylinos.kmre.kmrecore.RemoveFile.mime_type)
}

// -------------------------------------------------------------------

// RequestMediaFiles

// required int32 type = 1;
inline bool RequestMediaFiles::has_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void RequestMediaFiles::set_has_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void RequestMediaFiles::clear_has_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void RequestMediaFiles::clear_type() {
  type_ = 0;
  clear_has_type();
}
inline ::google::protobuf::int32 RequestMediaFiles::type() const {
  // @@protoc_insertion_point(field_get:cn.kylinos.kmre.kmrecore.RequestMediaFiles.type)
  return type_;
}
inline void RequestMediaFiles::set_type(::google::protobuf::int32 value) {
  set_has_type();
  type_ = value;
  // @@protoc_insertion_point(field_set:cn.kylinos.kmre.kmrecore.RequestMediaFiles.type)
}

// -------------------------------------------------------------------

// DragFile

// required string file_path = 1;
inline bool DragFile::has_file_path() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void DragFile::set_has_file_path() {
  _has_bits_[0] |= 0x00000001u;
}
inline void DragFile::clear_has_file_path() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void DragFile::clear_file_path() {
  file_path_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_file_path();
}
inline const ::std::string& DragFile::file_path() const {
  // @@protoc_insertion_point(field_get:cn.kylinos.kmre.kmrecore.DragFile.file_path)
  return file_path_.GetNoArena();
}
inline void DragFile::set_file_path(const ::std::string& value) {
  set_has_file_path();
  file_path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:cn.kylinos.kmre.kmrecore.DragFile.file_path)
}
#if LANG_CXX11
inline void DragFile::set_file_path(::std::string&& value) {
  set_has_file_path();
  file_path_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:cn.kylinos.kmre.kmrecore.DragFile.file_path)
}
#endif
inline void DragFile::set_file_path(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_file_path();
  file_path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:cn.kylinos.kmre.kmrecore.DragFile.file_path)
}
inline void DragFile::set_file_path(const char* value, size_t size) {
  set_has_file_path();
  file_path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:cn.kylinos.kmre.kmrecore.DragFile.file_path)
}
inline ::std::string* DragFile::mutable_file_path() {
  set_has_file_path();
  // @@protoc_insertion_point(field_mutable:cn.kylinos.kmre.kmrecore.DragFile.file_path)
  return file_path_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* DragFile::release_file_path() {
  // @@protoc_insertion_point(field_release:cn.kylinos.kmre.kmrecore.DragFile.file_path)
  if (!has_file_path()) {
    return NULL;
  }
  clear_has_file_path();
  return file_path_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void DragFile::set_allocated_file_path(::std::string* file_path) {
  if (file_path != NULL) {
    set_has_file_path();
  } else {
    clear_has_file_path();
  }
  file_path_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), file_path);
  // @@protoc_insertion_point(field_set_allocated:cn.kylinos.kmre.kmrecore.DragFile.file_path)
}

// required string package_name = 2;
inline bool DragFile::has_package_name() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void DragFile::set_has_package_name() {
  _has_bits_[0] |= 0x00000002u;
}
inline void DragFile::clear_has_package_name() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void DragFile::clear_package_name() {
  package_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_package_name();
}
inline const ::std::string& DragFile::package_name() const {
  // @@protoc_insertion_point(field_get:cn.kylinos.kmre.kmrecore.DragFile.package_name)
  return package_name_.GetNoArena();
}
inline void DragFile::set_package_name(const ::std::string& value) {
  set_has_package_name();
  package_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:cn.kylinos.kmre.kmrecore.DragFile.package_name)
}
#if LANG_CXX11
inline void DragFile::set_package_name(::std::string&& value) {
  set_has_package_name();
  package_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:cn.kylinos.kmre.kmrecore.DragFile.package_name)
}
#endif
inline void DragFile::set_package_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_package_name();
  package_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:cn.kylinos.kmre.kmrecore.DragFile.package_name)
}
inline void DragFile::set_package_name(const char* value, size_t size) {
  set_has_package_name();
  package_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:cn.kylinos.kmre.kmrecore.DragFile.package_name)
}
inline ::std::string* DragFile::mutable_package_name() {
  set_has_package_name();
  // @@protoc_insertion_point(field_mutable:cn.kylinos.kmre.kmrecore.DragFile.package_name)
  return package_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* DragFile::release_package_name() {
  // @@protoc_insertion_point(field_release:cn.kylinos.kmre.kmrecore.DragFile.package_name)
  if (!has_package_name()) {
    return NULL;
  }
  clear_has_package_name();
  return package_name_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void DragFile::set_allocated_package_name(::std::string* package_name) {
  if (package_name != NULL) {
    set_has_package_name();
  } else {
    clear_has_package_name();
  }
  package_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), package_name);
  // @@protoc_insertion_point(field_set_allocated:cn.kylinos.kmre.kmrecore.DragFile.package_name)
}

// optional int32 display_id = 3;
inline bool DragFile::has_display_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void DragFile::set_has_display_id() {
  _has_bits_[0] |= 0x00000004u;
}
inline void DragFile::clear_has_display_id() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void DragFile::clear_display_id() {
  display_id_ = 0;
  clear_has_display_id();
}
inline ::google::protobuf::int32 DragFile::display_id() const {
  // @@protoc_insertion_point(field_get:cn.kylinos.kmre.kmrecore.DragFile.display_id)
  return display_id_;
}
inline void DragFile::set_display_id(::google::protobuf::int32 value) {
  set_has_display_id();
  display_id_ = value;
  // @@protoc_insertion_point(field_set:cn.kylinos.kmre.kmrecore.DragFile.display_id)
}

// optional bool has_double_display = 4;
inline bool DragFile::has_has_double_display() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void DragFile::set_has_has_double_display() {
  _has_bits_[0] |= 0x00000008u;
}
inline void DragFile::clear_has_has_double_display() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void DragFile::clear_has_double_display() {
  has_double_display_ = false;
  clear_has_has_double_display();
}
inline bool DragFile::has_double_display() const {
  // @@protoc_insertion_point(field_get:cn.kylinos.kmre.kmrecore.DragFile.has_double_display)
  return has_double_display_;
}
inline void DragFile::set_has_double_display(bool value) {
  set_has_has_double_display();
  has_double_display_ = value;
  // @@protoc_insertion_point(field_set:cn.kylinos.kmre.kmrecore.DragFile.has_double_display)
}

// -------------------------------------------------------------------

// RotationChanged

// required int32 display_id = 1;
inline bool RotationChanged::has_display_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void RotationChanged::set_has_display_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void RotationChanged::clear_has_display_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void RotationChanged::clear_display_id() {
  display_id_ = 0;
  clear_has_display_id();
}
inline ::google::protobuf::int32 RotationChanged::display_id() const {
  // @@protoc_insertion_point(field_get:cn.kylinos.kmre.kmrecore.RotationChanged.display_id)
  return display_id_;
}
inline void RotationChanged::set_display_id(::google::protobuf::int32 value) {
  set_has_display_id();
  display_id_ = value;
  // @@protoc_insertion_point(field_set:cn.kylinos.kmre.kmrecore.RotationChanged.display_id)
}

// required string package_name = 2;
inline bool RotationChanged::has_package_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void RotationChanged::set_has_package_name() {
  _has_bits_[0] |= 0x00000001u;
}
inline void RotationChanged::clear_has_package_name() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void RotationChanged::clear_package_name() {
  package_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_package_name();
}
inline const ::std::string& RotationChanged::package_name() const {
  // @@protoc_insertion_point(field_get:cn.kylinos.kmre.kmrecore.RotationChanged.package_name)
  return package_name_.GetNoArena();
}
inline void RotationChanged::set_package_name(const ::std::string& value) {
  set_has_package_name();
  package_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:cn.kylinos.kmre.kmrecore.RotationChanged.package_name)
}
#if LANG_CXX11
inline void RotationChanged::set_package_name(::std::string&& value) {
  set_has_package_name();
  package_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:cn.kylinos.kmre.kmrecore.RotationChanged.package_name)
}
#endif
inline void RotationChanged::set_package_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_package_name();
  package_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:cn.kylinos.kmre.kmrecore.RotationChanged.package_name)
}
inline void RotationChanged::set_package_name(const char* value, size_t size) {
  set_has_package_name();
  package_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:cn.kylinos.kmre.kmrecore.RotationChanged.package_name)
}
inline ::std::string* RotationChanged::mutable_package_name() {
  set_has_package_name();
  // @@protoc_insertion_point(field_mutable:cn.kylinos.kmre.kmrecore.RotationChanged.package_name)
  return package_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* RotationChanged::release_package_name() {
  // @@protoc_insertion_point(field_release:cn.kylinos.kmre.kmrecore.RotationChanged.package_name)
  if (!has_package_name()) {
    return NULL;
  }
  clear_has_package_name();
  return package_name_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void RotationChanged::set_allocated_package_name(::std::string* package_name) {
  if (package_name != NULL) {
    set_has_package_name();
  } else {
    clear_has_package_name();
  }
  package_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), package_name);
  // @@protoc_insertion_point(field_set_allocated:cn.kylinos.kmre.kmrecore.RotationChanged.package_name)
}

// required int32 width = 3;
inline bool RotationChanged::has_width() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void RotationChanged::set_has_width() {
  _has_bits_[0] |= 0x00000004u;
}
inline void RotationChanged::clear_has_width() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void RotationChanged::clear_width() {
  width_ = 0;
  clear_has_width();
}
inline ::google::protobuf::int32 RotationChanged::width() const {
  // @@protoc_insertion_point(field_get:cn.kylinos.kmre.kmrecore.RotationChanged.width)
  return width_;
}
inline void RotationChanged::set_width(::google::protobuf::int32 value) {
  set_has_width();
  width_ = value;
  // @@protoc_insertion_point(field_set:cn.kylinos.kmre.kmrecore.RotationChanged.width)
}

// required int32 height = 4;
inline bool RotationChanged::has_height() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void RotationChanged::set_has_height() {
  _has_bits_[0] |= 0x00000008u;
}
inline void RotationChanged::clear_has_height() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void RotationChanged::clear_height() {
  height_ = 0;
  clear_has_height();
}
inline ::google::protobuf::int32 RotationChanged::height() const {
  // @@protoc_insertion_point(field_get:cn.kylinos.kmre.kmrecore.RotationChanged.height)
  return height_;
}
inline void RotationChanged::set_height(::google::protobuf::int32 value) {
  set_has_height();
  height_ = value;
  // @@protoc_insertion_point(field_set:cn.kylinos.kmre.kmrecore.RotationChanged.height)
}

// required int32 rotation = 5;
inline bool RotationChanged::has_rotation() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void RotationChanged::set_has_rotation() {
  _has_bits_[0] |= 0x00000010u;
}
inline void RotationChanged::clear_has_rotation() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void RotationChanged::clear_rotation() {
  rotation_ = 0;
  clear_has_rotation();
}
inline ::google::protobuf::int32 RotationChanged::rotation() const {
  // @@protoc_insertion_point(field_get:cn.kylinos.kmre.kmrecore.RotationChanged.rotation)
  return rotation_;
}
inline void RotationChanged::set_rotation(::google::protobuf::int32 value) {
  set_has_rotation();
  rotation_ = value;
  // @@protoc_insertion_point(field_set:cn.kylinos.kmre.kmrecore.RotationChanged.rotation)
}

// -------------------------------------------------------------------

// SetSystemProp

// required int32 event_type = 1;
inline bool SetSystemProp::has_event_type() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void SetSystemProp::set_has_event_type() {
  _has_bits_[0] |= 0x00000004u;
}
inline void SetSystemProp::clear_has_event_type() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void SetSystemProp::clear_event_type() {
  event_type_ = 0;
  clear_has_event_type();
}
inline ::google::protobuf::int32 SetSystemProp::event_type() const {
  // @@protoc_insertion_point(field_get:cn.kylinos.kmre.kmrecore.SetSystemProp.event_type)
  return event_type_;
}
inline void SetSystemProp::set_event_type(::google::protobuf::int32 value) {
  set_has_event_type();
  event_type_ = value;
  // @@protoc_insertion_point(field_set:cn.kylinos.kmre.kmrecore.SetSystemProp.event_type)
}

// required string value_field = 2;
inline bool SetSystemProp::has_value_field() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SetSystemProp::set_has_value_field() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SetSystemProp::clear_has_value_field() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SetSystemProp::clear_value_field() {
  value_field_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_value_field();
}
inline const ::std::string& SetSystemProp::value_field() const {
  // @@protoc_insertion_point(field_get:cn.kylinos.kmre.kmrecore.SetSystemProp.value_field)
  return value_field_.GetNoArena();
}
inline void SetSystemProp::set_value_field(const ::std::string& value) {
  set_has_value_field();
  value_field_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:cn.kylinos.kmre.kmrecore.SetSystemProp.value_field)
}
#if LANG_CXX11
inline void SetSystemProp::set_value_field(::std::string&& value) {
  set_has_value_field();
  value_field_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:cn.kylinos.kmre.kmrecore.SetSystemProp.value_field)
}
#endif
inline void SetSystemProp::set_value_field(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_value_field();
  value_field_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:cn.kylinos.kmre.kmrecore.SetSystemProp.value_field)
}
inline void SetSystemProp::set_value_field(const char* value, size_t size) {
  set_has_value_field();
  value_field_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:cn.kylinos.kmre.kmrecore.SetSystemProp.value_field)
}
inline ::std::string* SetSystemProp::mutable_value_field() {
  set_has_value_field();
  // @@protoc_insertion_point(field_mutable:cn.kylinos.kmre.kmrecore.SetSystemProp.value_field)
  return value_field_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SetSystemProp::release_value_field() {
  // @@protoc_insertion_point(field_release:cn.kylinos.kmre.kmrecore.SetSystemProp.value_field)
  if (!has_value_field()) {
    return NULL;
  }
  clear_has_value_field();
  return value_field_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SetSystemProp::set_allocated_value_field(::std::string* value_field) {
  if (value_field != NULL) {
    set_has_value_field();
  } else {
    clear_has_value_field();
  }
  value_field_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value_field);
  // @@protoc_insertion_point(field_set_allocated:cn.kylinos.kmre.kmrecore.SetSystemProp.value_field)
}

// required string value = 3;
inline bool SetSystemProp::has_value() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SetSystemProp::set_has_value() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SetSystemProp::clear_has_value() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SetSystemProp::clear_value() {
  value_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_value();
}
inline const ::std::string& SetSystemProp::value() const {
  // @@protoc_insertion_point(field_get:cn.kylinos.kmre.kmrecore.SetSystemProp.value)
  return value_.GetNoArena();
}
inline void SetSystemProp::set_value(const ::std::string& value) {
  set_has_value();
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:cn.kylinos.kmre.kmrecore.SetSystemProp.value)
}
#if LANG_CXX11
inline void SetSystemProp::set_value(::std::string&& value) {
  set_has_value();
  value_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:cn.kylinos.kmre.kmrecore.SetSystemProp.value)
}
#endif
inline void SetSystemProp::set_value(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_value();
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:cn.kylinos.kmre.kmrecore.SetSystemProp.value)
}
inline void SetSystemProp::set_value(const char* value, size_t size) {
  set_has_value();
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:cn.kylinos.kmre.kmrecore.SetSystemProp.value)
}
inline ::std::string* SetSystemProp::mutable_value() {
  set_has_value();
  // @@protoc_insertion_point(field_mutable:cn.kylinos.kmre.kmrecore.SetSystemProp.value)
  return value_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SetSystemProp::release_value() {
  // @@protoc_insertion_point(field_release:cn.kylinos.kmre.kmrecore.SetSystemProp.value)
  if (!has_value()) {
    return NULL;
  }
  clear_has_value();
  return value_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SetSystemProp::set_allocated_value(::std::string* value) {
  if (value != NULL) {
    set_has_value();
  } else {
    clear_has_value();
  }
  value_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set_allocated:cn.kylinos.kmre.kmrecore.SetSystemProp.value)
}

// -------------------------------------------------------------------

// GetSystemProp

// required int32 event_type = 1;
inline bool GetSystemProp::has_event_type() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GetSystemProp::set_has_event_type() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GetSystemProp::clear_has_event_type() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GetSystemProp::clear_event_type() {
  event_type_ = 0;
  clear_has_event_type();
}
inline ::google::protobuf::int32 GetSystemProp::event_type() const {
  // @@protoc_insertion_point(field_get:cn.kylinos.kmre.kmrecore.GetSystemProp.event_type)
  return event_type_;
}
inline void GetSystemProp::set_event_type(::google::protobuf::int32 value) {
  set_has_event_type();
  event_type_ = value;
  // @@protoc_insertion_point(field_set:cn.kylinos.kmre.kmrecore.GetSystemProp.event_type)
}

// required string value_field = 2;
inline bool GetSystemProp::has_value_field() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GetSystemProp::set_has_value_field() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GetSystemProp::clear_has_value_field() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GetSystemProp::clear_value_field() {
  value_field_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_value_field();
}
inline const ::std::string& GetSystemProp::value_field() const {
  // @@protoc_insertion_point(field_get:cn.kylinos.kmre.kmrecore.GetSystemProp.value_field)
  return value_field_.GetNoArena();
}
inline void GetSystemProp::set_value_field(const ::std::string& value) {
  set_has_value_field();
  value_field_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:cn.kylinos.kmre.kmrecore.GetSystemProp.value_field)
}
#if LANG_CXX11
inline void GetSystemProp::set_value_field(::std::string&& value) {
  set_has_value_field();
  value_field_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:cn.kylinos.kmre.kmrecore.GetSystemProp.value_field)
}
#endif
inline void GetSystemProp::set_value_field(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_value_field();
  value_field_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:cn.kylinos.kmre.kmrecore.GetSystemProp.value_field)
}
inline void GetSystemProp::set_value_field(const char* value, size_t size) {
  set_has_value_field();
  value_field_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:cn.kylinos.kmre.kmrecore.GetSystemProp.value_field)
}
inline ::std::string* GetSystemProp::mutable_value_field() {
  set_has_value_field();
  // @@protoc_insertion_point(field_mutable:cn.kylinos.kmre.kmrecore.GetSystemProp.value_field)
  return value_field_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* GetSystemProp::release_value_field() {
  // @@protoc_insertion_point(field_release:cn.kylinos.kmre.kmrecore.GetSystemProp.value_field)
  if (!has_value_field()) {
    return NULL;
  }
  clear_has_value_field();
  return value_field_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GetSystemProp::set_allocated_value_field(::std::string* value_field) {
  if (value_field != NULL) {
    set_has_value_field();
  } else {
    clear_has_value_field();
  }
  value_field_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value_field);
  // @@protoc_insertion_point(field_set_allocated:cn.kylinos.kmre.kmrecore.GetSystemProp.value_field)
}

// -------------------------------------------------------------------

// UpdateAppWindowSize

// required string package_name = 1;
inline bool UpdateAppWindowSize::has_package_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void UpdateAppWindowSize::set_has_package_name() {
  _has_bits_[0] |= 0x00000001u;
}
inline void UpdateAppWindowSize::clear_has_package_name() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void UpdateAppWindowSize::clear_package_name() {
  package_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_package_name();
}
inline const ::std::string& UpdateAppWindowSize::package_name() const {
  // @@protoc_insertion_point(field_get:cn.kylinos.kmre.kmrecore.UpdateAppWindowSize.package_name)
  return package_name_.GetNoArena();
}
inline void UpdateAppWindowSize::set_package_name(const ::std::string& value) {
  set_has_package_name();
  package_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:cn.kylinos.kmre.kmrecore.UpdateAppWindowSize.package_name)
}
#if LANG_CXX11
inline void UpdateAppWindowSize::set_package_name(::std::string&& value) {
  set_has_package_name();
  package_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:cn.kylinos.kmre.kmrecore.UpdateAppWindowSize.package_name)
}
#endif
inline void UpdateAppWindowSize::set_package_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_package_name();
  package_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:cn.kylinos.kmre.kmrecore.UpdateAppWindowSize.package_name)
}
inline void UpdateAppWindowSize::set_package_name(const char* value, size_t size) {
  set_has_package_name();
  package_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:cn.kylinos.kmre.kmrecore.UpdateAppWindowSize.package_name)
}
inline ::std::string* UpdateAppWindowSize::mutable_package_name() {
  set_has_package_name();
  // @@protoc_insertion_point(field_mutable:cn.kylinos.kmre.kmrecore.UpdateAppWindowSize.package_name)
  return package_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* UpdateAppWindowSize::release_package_name() {
  // @@protoc_insertion_point(field_release:cn.kylinos.kmre.kmrecore.UpdateAppWindowSize.package_name)
  if (!has_package_name()) {
    return NULL;
  }
  clear_has_package_name();
  return package_name_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void UpdateAppWindowSize::set_allocated_package_name(::std::string* package_name) {
  if (package_name != NULL) {
    set_has_package_name();
  } else {
    clear_has_package_name();
  }
  package_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), package_name);
  // @@protoc_insertion_point(field_set_allocated:cn.kylinos.kmre.kmrecore.UpdateAppWindowSize.package_name)
}

// required int32 display_id = 2;
inline bool UpdateAppWindowSize::has_display_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void UpdateAppWindowSize::set_has_display_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void UpdateAppWindowSize::clear_has_display_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void UpdateAppWindowSize::clear_display_id() {
  display_id_ = 0;
  clear_has_display_id();
}
inline ::google::protobuf::int32 UpdateAppWindowSize::display_id() const {
  // @@protoc_insertion_point(field_get:cn.kylinos.kmre.kmrecore.UpdateAppWindowSize.display_id)
  return display_id_;
}
inline void UpdateAppWindowSize::set_display_id(::google::protobuf::int32 value) {
  set_has_display_id();
  display_id_ = value;
  // @@protoc_insertion_point(field_set:cn.kylinos.kmre.kmrecore.UpdateAppWindowSize.display_id)
}

// required int32 width = 3;
inline bool UpdateAppWindowSize::has_width() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void UpdateAppWindowSize::set_has_width() {
  _has_bits_[0] |= 0x00000004u;
}
inline void UpdateAppWindowSize::clear_has_width() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void UpdateAppWindowSize::clear_width() {
  width_ = 0;
  clear_has_width();
}
inline ::google::protobuf::int32 UpdateAppWindowSize::width() const {
  // @@protoc_insertion_point(field_get:cn.kylinos.kmre.kmrecore.UpdateAppWindowSize.width)
  return width_;
}
inline void UpdateAppWindowSize::set_width(::google::protobuf::int32 value) {
  set_has_width();
  width_ = value;
  // @@protoc_insertion_point(field_set:cn.kylinos.kmre.kmrecore.UpdateAppWindowSize.width)
}

// required int32 height = 4;
inline bool UpdateAppWindowSize::has_height() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void UpdateAppWindowSize::set_has_height() {
  _has_bits_[0] |= 0x00000008u;
}
inline void UpdateAppWindowSize::clear_has_height() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void UpdateAppWindowSize::clear_height() {
  height_ = 0;
  clear_has_height();
}
inline ::google::protobuf::int32 UpdateAppWindowSize::height() const {
  // @@protoc_insertion_point(field_get:cn.kylinos.kmre.kmrecore.UpdateAppWindowSize.height)
  return height_;
}
inline void UpdateAppWindowSize::set_height(::google::protobuf::int32 value) {
  set_has_height();
  height_ = value;
  // @@protoc_insertion_point(field_set:cn.kylinos.kmre.kmrecore.UpdateAppWindowSize.height)
}

// -------------------------------------------------------------------

// SetProxy

// required bool open = 1;
inline bool SetProxy::has_open() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void SetProxy::set_has_open() {
  _has_bits_[0] |= 0x00000004u;
}
inline void SetProxy::clear_has_open() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void SetProxy::clear_open() {
  open_ = false;
  clear_has_open();
}
inline bool SetProxy::open() const {
  // @@protoc_insertion_point(field_get:cn.kylinos.kmre.kmrecore.SetProxy.open)
  return open_;
}
inline void SetProxy::set_open(bool value) {
  set_has_open();
  open_ = value;
  // @@protoc_insertion_point(field_set:cn.kylinos.kmre.kmrecore.SetProxy.open)
}

// optional string host = 2;
inline bool SetProxy::has_host() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SetProxy::set_has_host() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SetProxy::clear_has_host() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SetProxy::clear_host() {
  host_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_host();
}
inline const ::std::string& SetProxy::host() const {
  // @@protoc_insertion_point(field_get:cn.kylinos.kmre.kmrecore.SetProxy.host)
  return host_.GetNoArena();
}
inline void SetProxy::set_host(const ::std::string& value) {
  set_has_host();
  host_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:cn.kylinos.kmre.kmrecore.SetProxy.host)
}
#if LANG_CXX11
inline void SetProxy::set_host(::std::string&& value) {
  set_has_host();
  host_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:cn.kylinos.kmre.kmrecore.SetProxy.host)
}
#endif
inline void SetProxy::set_host(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_host();
  host_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:cn.kylinos.kmre.kmrecore.SetProxy.host)
}
inline void SetProxy::set_host(const char* value, size_t size) {
  set_has_host();
  host_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:cn.kylinos.kmre.kmrecore.SetProxy.host)
}
inline ::std::string* SetProxy::mutable_host() {
  set_has_host();
  // @@protoc_insertion_point(field_mutable:cn.kylinos.kmre.kmrecore.SetProxy.host)
  return host_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SetProxy::release_host() {
  // @@protoc_insertion_point(field_release:cn.kylinos.kmre.kmrecore.SetProxy.host)
  if (!has_host()) {
    return NULL;
  }
  clear_has_host();
  return host_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SetProxy::set_allocated_host(::std::string* host) {
  if (host != NULL) {
    set_has_host();
  } else {
    clear_has_host();
  }
  host_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), host);
  // @@protoc_insertion_point(field_set_allocated:cn.kylinos.kmre.kmrecore.SetProxy.host)
}

// optional int32 port = 3;
inline bool SetProxy::has_port() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void SetProxy::set_has_port() {
  _has_bits_[0] |= 0x00000008u;
}
inline void SetProxy::clear_has_port() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void SetProxy::clear_port() {
  port_ = 0;
  clear_has_port();
}
inline ::google::protobuf::int32 SetProxy::port() const {
  // @@protoc_insertion_point(field_get:cn.kylinos.kmre.kmrecore.SetProxy.port)
  return port_;
}
inline void SetProxy::set_port(::google::protobuf::int32 value) {
  set_has_port();
  port_ = value;
  // @@protoc_insertion_point(field_set:cn.kylinos.kmre.kmrecore.SetProxy.port)
}

// optional string type = 4;
inline bool SetProxy::has_type() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SetProxy::set_has_type() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SetProxy::clear_has_type() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SetProxy::clear_type() {
  type_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_type();
}
inline const ::std::string& SetProxy::type() const {
  // @@protoc_insertion_point(field_get:cn.kylinos.kmre.kmrecore.SetProxy.type)
  return type_.GetNoArena();
}
inline void SetProxy::set_type(const ::std::string& value) {
  set_has_type();
  type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:cn.kylinos.kmre.kmrecore.SetProxy.type)
}
#if LANG_CXX11
inline void SetProxy::set_type(::std::string&& value) {
  set_has_type();
  type_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:cn.kylinos.kmre.kmrecore.SetProxy.type)
}
#endif
inline void SetProxy::set_type(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_type();
  type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:cn.kylinos.kmre.kmrecore.SetProxy.type)
}
inline void SetProxy::set_type(const char* value, size_t size) {
  set_has_type();
  type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:cn.kylinos.kmre.kmrecore.SetProxy.type)
}
inline ::std::string* SetProxy::mutable_type() {
  set_has_type();
  // @@protoc_insertion_point(field_mutable:cn.kylinos.kmre.kmrecore.SetProxy.type)
  return type_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SetProxy::release_type() {
  // @@protoc_insertion_point(field_release:cn.kylinos.kmre.kmrecore.SetProxy.type)
  if (!has_type()) {
    return NULL;
  }
  clear_has_type();
  return type_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SetProxy::set_allocated_type(::std::string* type) {
  if (type != NULL) {
    set_has_type();
  } else {
    clear_has_type();
  }
  type_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), type);
  // @@protoc_insertion_point(field_set_allocated:cn.kylinos.kmre.kmrecore.SetProxy.type)
}

// -------------------------------------------------------------------

// UpdateDisplaySize

// required int32 display_id = 1;
inline bool UpdateDisplaySize::has_display_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void UpdateDisplaySize::set_has_display_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void UpdateDisplaySize::clear_has_display_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void UpdateDisplaySize::clear_display_id() {
  display_id_ = 0;
  clear_has_display_id();
}
inline ::google::protobuf::int32 UpdateDisplaySize::display_id() const {
  // @@protoc_insertion_point(field_get:cn.kylinos.kmre.kmrecore.UpdateDisplaySize.display_id)
  return display_id_;
}
inline void UpdateDisplaySize::set_display_id(::google::protobuf::int32 value) {
  set_has_display_id();
  display_id_ = value;
  // @@protoc_insertion_point(field_set:cn.kylinos.kmre.kmrecore.UpdateDisplaySize.display_id)
}

// required int32 width = 2;
inline bool UpdateDisplaySize::has_width() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void UpdateDisplaySize::set_has_width() {
  _has_bits_[0] |= 0x00000002u;
}
inline void UpdateDisplaySize::clear_has_width() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void UpdateDisplaySize::clear_width() {
  width_ = 0;
  clear_has_width();
}
inline ::google::protobuf::int32 UpdateDisplaySize::width() const {
  // @@protoc_insertion_point(field_get:cn.kylinos.kmre.kmrecore.UpdateDisplaySize.width)
  return width_;
}
inline void UpdateDisplaySize::set_width(::google::protobuf::int32 value) {
  set_has_width();
  width_ = value;
  // @@protoc_insertion_point(field_set:cn.kylinos.kmre.kmrecore.UpdateDisplaySize.width)
}

// required int32 height = 3;
inline bool UpdateDisplaySize::has_height() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void UpdateDisplaySize::set_has_height() {
  _has_bits_[0] |= 0x00000004u;
}
inline void UpdateDisplaySize::clear_has_height() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void UpdateDisplaySize::clear_height() {
  height_ = 0;
  clear_has_height();
}
inline ::google::protobuf::int32 UpdateDisplaySize::height() const {
  // @@protoc_insertion_point(field_get:cn.kylinos.kmre.kmrecore.UpdateDisplaySize.height)
  return height_;
}
inline void UpdateDisplaySize::set_height(::google::protobuf::int32 value) {
  set_has_height();
  height_ = value;
  // @@protoc_insertion_point(field_set:cn.kylinos.kmre.kmrecore.UpdateDisplaySize.height)
}

// -------------------------------------------------------------------

// AnswerCall

// required bool answer = 1;
inline bool AnswerCall::has_answer() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void AnswerCall::set_has_answer() {
  _has_bits_[0] |= 0x00000001u;
}
inline void AnswerCall::clear_has_answer() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void AnswerCall::clear_answer() {
  answer_ = false;
  clear_has_answer();
}
inline bool AnswerCall::answer() const {
  // @@protoc_insertion_point(field_get:cn.kylinos.kmre.kmrecore.AnswerCall.answer)
  return answer_;
}
inline void AnswerCall::set_answer(bool value) {
  set_has_answer();
  answer_ = value;
  // @@protoc_insertion_point(field_set:cn.kylinos.kmre.kmrecore.AnswerCall.answer)
}

// -------------------------------------------------------------------

// ContainerEnvBootStatus

// required bool status = 1;
inline bool ContainerEnvBootStatus::has_status() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ContainerEnvBootStatus::set_has_status() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ContainerEnvBootStatus::clear_has_status() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ContainerEnvBootStatus::clear_status() {
  status_ = false;
  clear_has_status();
}
inline bool ContainerEnvBootStatus::status() const {
  // @@protoc_insertion_point(field_get:cn.kylinos.kmre.kmrecore.ContainerEnvBootStatus.status)
  return status_;
}
inline void ContainerEnvBootStatus::set_status(bool value) {
  set_has_status();
  status_ = value;
  // @@protoc_insertion_point(field_set:cn.kylinos.kmre.kmrecore.ContainerEnvBootStatus.status)
}

// optional string err_info = 2;
inline bool ContainerEnvBootStatus::has_err_info() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ContainerEnvBootStatus::set_has_err_info() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ContainerEnvBootStatus::clear_has_err_info() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ContainerEnvBootStatus::clear_err_info() {
  err_info_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_err_info();
}
inline const ::std::string& ContainerEnvBootStatus::err_info() const {
  // @@protoc_insertion_point(field_get:cn.kylinos.kmre.kmrecore.ContainerEnvBootStatus.err_info)
  return err_info_.GetNoArena();
}
inline void ContainerEnvBootStatus::set_err_info(const ::std::string& value) {
  set_has_err_info();
  err_info_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:cn.kylinos.kmre.kmrecore.ContainerEnvBootStatus.err_info)
}
#if LANG_CXX11
inline void ContainerEnvBootStatus::set_err_info(::std::string&& value) {
  set_has_err_info();
  err_info_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:cn.kylinos.kmre.kmrecore.ContainerEnvBootStatus.err_info)
}
#endif
inline void ContainerEnvBootStatus::set_err_info(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_err_info();
  err_info_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:cn.kylinos.kmre.kmrecore.ContainerEnvBootStatus.err_info)
}
inline void ContainerEnvBootStatus::set_err_info(const char* value, size_t size) {
  set_has_err_info();
  err_info_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:cn.kylinos.kmre.kmrecore.ContainerEnvBootStatus.err_info)
}
inline ::std::string* ContainerEnvBootStatus::mutable_err_info() {
  set_has_err_info();
  // @@protoc_insertion_point(field_mutable:cn.kylinos.kmre.kmrecore.ContainerEnvBootStatus.err_info)
  return err_info_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ContainerEnvBootStatus::release_err_info() {
  // @@protoc_insertion_point(field_release:cn.kylinos.kmre.kmrecore.ContainerEnvBootStatus.err_info)
  if (!has_err_info()) {
    return NULL;
  }
  clear_has_err_info();
  return err_info_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ContainerEnvBootStatus::set_allocated_err_info(::std::string* err_info) {
  if (err_info != NULL) {
    set_has_err_info();
  } else {
    clear_has_err_info();
  }
  err_info_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), err_info);
  // @@protoc_insertion_point(field_set_allocated:cn.kylinos.kmre.kmrecore.ContainerEnvBootStatus.err_info)
}

// -------------------------------------------------------------------

// ActionResult

// required bool result = 1;
inline bool ActionResult::has_result() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ActionResult::set_has_result() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ActionResult::clear_has_result() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ActionResult::clear_result() {
  result_ = false;
  clear_has_result();
}
inline bool ActionResult::result() const {
  // @@protoc_insertion_point(field_get:cn.kylinos.kmre.kmrecore.ActionResult.result)
  return result_;
}
inline void ActionResult::set_result(bool value) {
  set_has_result();
  result_ = value;
  // @@protoc_insertion_point(field_set:cn.kylinos.kmre.kmrecore.ActionResult.result)
}

// required string org_cmd = 2;
inline bool ActionResult::has_org_cmd() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ActionResult::set_has_org_cmd() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ActionResult::clear_has_org_cmd() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ActionResult::clear_org_cmd() {
  org_cmd_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_org_cmd();
}
inline const ::std::string& ActionResult::org_cmd() const {
  // @@protoc_insertion_point(field_get:cn.kylinos.kmre.kmrecore.ActionResult.org_cmd)
  return org_cmd_.GetNoArena();
}
inline void ActionResult::set_org_cmd(const ::std::string& value) {
  set_has_org_cmd();
  org_cmd_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:cn.kylinos.kmre.kmrecore.ActionResult.org_cmd)
}
#if LANG_CXX11
inline void ActionResult::set_org_cmd(::std::string&& value) {
  set_has_org_cmd();
  org_cmd_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:cn.kylinos.kmre.kmrecore.ActionResult.org_cmd)
}
#endif
inline void ActionResult::set_org_cmd(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_org_cmd();
  org_cmd_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:cn.kylinos.kmre.kmrecore.ActionResult.org_cmd)
}
inline void ActionResult::set_org_cmd(const char* value, size_t size) {
  set_has_org_cmd();
  org_cmd_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:cn.kylinos.kmre.kmrecore.ActionResult.org_cmd)
}
inline ::std::string* ActionResult::mutable_org_cmd() {
  set_has_org_cmd();
  // @@protoc_insertion_point(field_mutable:cn.kylinos.kmre.kmrecore.ActionResult.org_cmd)
  return org_cmd_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ActionResult::release_org_cmd() {
  // @@protoc_insertion_point(field_release:cn.kylinos.kmre.kmrecore.ActionResult.org_cmd)
  if (!has_org_cmd()) {
    return NULL;
  }
  clear_has_org_cmd();
  return org_cmd_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ActionResult::set_allocated_org_cmd(::std::string* org_cmd) {
  if (org_cmd != NULL) {
    set_has_org_cmd();
  } else {
    clear_has_org_cmd();
  }
  org_cmd_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), org_cmd);
  // @@protoc_insertion_point(field_set_allocated:cn.kylinos.kmre.kmrecore.ActionResult.org_cmd)
}

// optional string err_info = 3;
inline bool ActionResult::has_err_info() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ActionResult::set_has_err_info() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ActionResult::clear_has_err_info() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ActionResult::clear_err_info() {
  err_info_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_err_info();
}
inline const ::std::string& ActionResult::err_info() const {
  // @@protoc_insertion_point(field_get:cn.kylinos.kmre.kmrecore.ActionResult.err_info)
  return err_info_.GetNoArena();
}
inline void ActionResult::set_err_info(const ::std::string& value) {
  set_has_err_info();
  err_info_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:cn.kylinos.kmre.kmrecore.ActionResult.err_info)
}
#if LANG_CXX11
inline void ActionResult::set_err_info(::std::string&& value) {
  set_has_err_info();
  err_info_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:cn.kylinos.kmre.kmrecore.ActionResult.err_info)
}
#endif
inline void ActionResult::set_err_info(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_err_info();
  err_info_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:cn.kylinos.kmre.kmrecore.ActionResult.err_info)
}
inline void ActionResult::set_err_info(const char* value, size_t size) {
  set_has_err_info();
  err_info_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:cn.kylinos.kmre.kmrecore.ActionResult.err_info)
}
inline ::std::string* ActionResult::mutable_err_info() {
  set_has_err_info();
  // @@protoc_insertion_point(field_mutable:cn.kylinos.kmre.kmrecore.ActionResult.err_info)
  return err_info_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ActionResult::release_err_info() {
  // @@protoc_insertion_point(field_release:cn.kylinos.kmre.kmrecore.ActionResult.err_info)
  if (!has_err_info()) {
    return NULL;
  }
  clear_has_err_info();
  return err_info_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ActionResult::set_allocated_err_info(::std::string* err_info) {
  if (err_info != NULL) {
    set_has_err_info();
  } else {
    clear_has_err_info();
  }
  err_info_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), err_info);
  // @@protoc_insertion_point(field_set_allocated:cn.kylinos.kmre.kmrecore.ActionResult.err_info)
}

// -------------------------------------------------------------------

// EventInfo

// required int32 event_id = 1;
inline bool EventInfo::has_event_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void EventInfo::set_has_event_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void EventInfo::clear_has_event_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void EventInfo::clear_event_id() {
  event_id_ = 0;
  clear_has_event_id();
}
inline ::google::protobuf::int32 EventInfo::event_id() const {
  // @@protoc_insertion_point(field_get:cn.kylinos.kmre.kmrecore.EventInfo.event_id)
  return event_id_;
}
inline void EventInfo::set_event_id(::google::protobuf::int32 value) {
  set_has_event_id();
  event_id_ = value;
  // @@protoc_insertion_point(field_set:cn.kylinos.kmre.kmrecore.EventInfo.event_id)
}

// optional string package_name = 2;
inline bool EventInfo::has_package_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void EventInfo::set_has_package_name() {
  _has_bits_[0] |= 0x00000001u;
}
inline void EventInfo::clear_has_package_name() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void EventInfo::clear_package_name() {
  package_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_package_name();
}
inline const ::std::string& EventInfo::package_name() const {
  // @@protoc_insertion_point(field_get:cn.kylinos.kmre.kmrecore.EventInfo.package_name)
  return package_name_.GetNoArena();
}
inline void EventInfo::set_package_name(const ::std::string& value) {
  set_has_package_name();
  package_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:cn.kylinos.kmre.kmrecore.EventInfo.package_name)
}
#if LANG_CXX11
inline void EventInfo::set_package_name(::std::string&& value) {
  set_has_package_name();
  package_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:cn.kylinos.kmre.kmrecore.EventInfo.package_name)
}
#endif
inline void EventInfo::set_package_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_package_name();
  package_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:cn.kylinos.kmre.kmrecore.EventInfo.package_name)
}
inline void EventInfo::set_package_name(const char* value, size_t size) {
  set_has_package_name();
  package_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:cn.kylinos.kmre.kmrecore.EventInfo.package_name)
}
inline ::std::string* EventInfo::mutable_package_name() {
  set_has_package_name();
  // @@protoc_insertion_point(field_mutable:cn.kylinos.kmre.kmrecore.EventInfo.package_name)
  return package_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* EventInfo::release_package_name() {
  // @@protoc_insertion_point(field_release:cn.kylinos.kmre.kmrecore.EventInfo.package_name)
  if (!has_package_name()) {
    return NULL;
  }
  clear_has_package_name();
  return package_name_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void EventInfo::set_allocated_package_name(::std::string* package_name) {
  if (package_name != NULL) {
    set_has_package_name();
  } else {
    clear_has_package_name();
  }
  package_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), package_name);
  // @@protoc_insertion_point(field_set_allocated:cn.kylinos.kmre.kmrecore.EventInfo.package_name)
}

// -------------------------------------------------------------------

// InstalledAppItem

// required string app_name = 1;
inline bool InstalledAppItem::has_app_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void InstalledAppItem::set_has_app_name() {
  _has_bits_[0] |= 0x00000001u;
}
inline void InstalledAppItem::clear_has_app_name() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void InstalledAppItem::clear_app_name() {
  app_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_app_name();
}
inline const ::std::string& InstalledAppItem::app_name() const {
  // @@protoc_insertion_point(field_get:cn.kylinos.kmre.kmrecore.InstalledAppItem.app_name)
  return app_name_.GetNoArena();
}
inline void InstalledAppItem::set_app_name(const ::std::string& value) {
  set_has_app_name();
  app_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:cn.kylinos.kmre.kmrecore.InstalledAppItem.app_name)
}
#if LANG_CXX11
inline void InstalledAppItem::set_app_name(::std::string&& value) {
  set_has_app_name();
  app_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:cn.kylinos.kmre.kmrecore.InstalledAppItem.app_name)
}
#endif
inline void InstalledAppItem::set_app_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_app_name();
  app_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:cn.kylinos.kmre.kmrecore.InstalledAppItem.app_name)
}
inline void InstalledAppItem::set_app_name(const char* value, size_t size) {
  set_has_app_name();
  app_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:cn.kylinos.kmre.kmrecore.InstalledAppItem.app_name)
}
inline ::std::string* InstalledAppItem::mutable_app_name() {
  set_has_app_name();
  // @@protoc_insertion_point(field_mutable:cn.kylinos.kmre.kmrecore.InstalledAppItem.app_name)
  return app_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* InstalledAppItem::release_app_name() {
  // @@protoc_insertion_point(field_release:cn.kylinos.kmre.kmrecore.InstalledAppItem.app_name)
  if (!has_app_name()) {
    return NULL;
  }
  clear_has_app_name();
  return app_name_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void InstalledAppItem::set_allocated_app_name(::std::string* app_name) {
  if (app_name != NULL) {
    set_has_app_name();
  } else {
    clear_has_app_name();
  }
  app_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), app_name);
  // @@protoc_insertion_point(field_set_allocated:cn.kylinos.kmre.kmrecore.InstalledAppItem.app_name)
}

// required string package_name = 2;
inline bool InstalledAppItem::has_package_name() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void InstalledAppItem::set_has_package_name() {
  _has_bits_[0] |= 0x00000002u;
}
inline void InstalledAppItem::clear_has_package_name() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void InstalledAppItem::clear_package_name() {
  package_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_package_name();
}
inline const ::std::string& InstalledAppItem::package_name() const {
  // @@protoc_insertion_point(field_get:cn.kylinos.kmre.kmrecore.InstalledAppItem.package_name)
  return package_name_.GetNoArena();
}
inline void InstalledAppItem::set_package_name(const ::std::string& value) {
  set_has_package_name();
  package_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:cn.kylinos.kmre.kmrecore.InstalledAppItem.package_name)
}
#if LANG_CXX11
inline void InstalledAppItem::set_package_name(::std::string&& value) {
  set_has_package_name();
  package_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:cn.kylinos.kmre.kmrecore.InstalledAppItem.package_name)
}
#endif
inline void InstalledAppItem::set_package_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_package_name();
  package_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:cn.kylinos.kmre.kmrecore.InstalledAppItem.package_name)
}
inline void InstalledAppItem::set_package_name(const char* value, size_t size) {
  set_has_package_name();
  package_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:cn.kylinos.kmre.kmrecore.InstalledAppItem.package_name)
}
inline ::std::string* InstalledAppItem::mutable_package_name() {
  set_has_package_name();
  // @@protoc_insertion_point(field_mutable:cn.kylinos.kmre.kmrecore.InstalledAppItem.package_name)
  return package_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* InstalledAppItem::release_package_name() {
  // @@protoc_insertion_point(field_release:cn.kylinos.kmre.kmrecore.InstalledAppItem.package_name)
  if (!has_package_name()) {
    return NULL;
  }
  clear_has_package_name();
  return package_name_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void InstalledAppItem::set_allocated_package_name(::std::string* package_name) {
  if (package_name != NULL) {
    set_has_package_name();
  } else {
    clear_has_package_name();
  }
  package_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), package_name);
  // @@protoc_insertion_point(field_set_allocated:cn.kylinos.kmre.kmrecore.InstalledAppItem.package_name)
}

// required int64 version_code = 3;
inline bool InstalledAppItem::has_version_code() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void InstalledAppItem::set_has_version_code() {
  _has_bits_[0] |= 0x00000010u;
}
inline void InstalledAppItem::clear_has_version_code() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void InstalledAppItem::clear_version_code() {
  version_code_ = GOOGLE_LONGLONG(0);
  clear_has_version_code();
}
inline ::google::protobuf::int64 InstalledAppItem::version_code() const {
  // @@protoc_insertion_point(field_get:cn.kylinos.kmre.kmrecore.InstalledAppItem.version_code)
  return version_code_;
}
inline void InstalledAppItem::set_version_code(::google::protobuf::int64 value) {
  set_has_version_code();
  version_code_ = value;
  // @@protoc_insertion_point(field_set:cn.kylinos.kmre.kmrecore.InstalledAppItem.version_code)
}

// required string version_name = 4;
inline bool InstalledAppItem::has_version_name() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void InstalledAppItem::set_has_version_name() {
  _has_bits_[0] |= 0x00000004u;
}
inline void InstalledAppItem::clear_has_version_name() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void InstalledAppItem::clear_version_name() {
  version_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_version_name();
}
inline const ::std::string& InstalledAppItem::version_name() const {
  // @@protoc_insertion_point(field_get:cn.kylinos.kmre.kmrecore.InstalledAppItem.version_name)
  return version_name_.GetNoArena();
}
inline void InstalledAppItem::set_version_name(const ::std::string& value) {
  set_has_version_name();
  version_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:cn.kylinos.kmre.kmrecore.InstalledAppItem.version_name)
}
#if LANG_CXX11
inline void InstalledAppItem::set_version_name(::std::string&& value) {
  set_has_version_name();
  version_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:cn.kylinos.kmre.kmrecore.InstalledAppItem.version_name)
}
#endif
inline void InstalledAppItem::set_version_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_version_name();
  version_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:cn.kylinos.kmre.kmrecore.InstalledAppItem.version_name)
}
inline void InstalledAppItem::set_version_name(const char* value, size_t size) {
  set_has_version_name();
  version_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:cn.kylinos.kmre.kmrecore.InstalledAppItem.version_name)
}
inline ::std::string* InstalledAppItem::mutable_version_name() {
  set_has_version_name();
  // @@protoc_insertion_point(field_mutable:cn.kylinos.kmre.kmrecore.InstalledAppItem.version_name)
  return version_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* InstalledAppItem::release_version_name() {
  // @@protoc_insertion_point(field_release:cn.kylinos.kmre.kmrecore.InstalledAppItem.version_name)
  if (!has_version_name()) {
    return NULL;
  }
  clear_has_version_name();
  return version_name_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void InstalledAppItem::set_allocated_version_name(::std::string* version_name) {
  if (version_name != NULL) {
    set_has_version_name();
  } else {
    clear_has_version_name();
  }
  version_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), version_name);
  // @@protoc_insertion_point(field_set_allocated:cn.kylinos.kmre.kmrecore.InstalledAppItem.version_name)
}

// optional string app_info = 5;
inline bool InstalledAppItem::has_app_info() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void InstalledAppItem::set_has_app_info() {
  _has_bits_[0] |= 0x00000008u;
}
inline void InstalledAppItem::clear_has_app_info() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void InstalledAppItem::clear_app_info() {
  app_info_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_app_info();
}
inline const ::std::string& InstalledAppItem::app_info() const {
  // @@protoc_insertion_point(field_get:cn.kylinos.kmre.kmrecore.InstalledAppItem.app_info)
  return app_info_.GetNoArena();
}
inline void InstalledAppItem::set_app_info(const ::std::string& value) {
  set_has_app_info();
  app_info_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:cn.kylinos.kmre.kmrecore.InstalledAppItem.app_info)
}
#if LANG_CXX11
inline void InstalledAppItem::set_app_info(::std::string&& value) {
  set_has_app_info();
  app_info_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:cn.kylinos.kmre.kmrecore.InstalledAppItem.app_info)
}
#endif
inline void InstalledAppItem::set_app_info(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_app_info();
  app_info_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:cn.kylinos.kmre.kmrecore.InstalledAppItem.app_info)
}
inline void InstalledAppItem::set_app_info(const char* value, size_t size) {
  set_has_app_info();
  app_info_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:cn.kylinos.kmre.kmrecore.InstalledAppItem.app_info)
}
inline ::std::string* InstalledAppItem::mutable_app_info() {
  set_has_app_info();
  // @@protoc_insertion_point(field_mutable:cn.kylinos.kmre.kmrecore.InstalledAppItem.app_info)
  return app_info_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* InstalledAppItem::release_app_info() {
  // @@protoc_insertion_point(field_release:cn.kylinos.kmre.kmrecore.InstalledAppItem.app_info)
  if (!has_app_info()) {
    return NULL;
  }
  clear_has_app_info();
  return app_info_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void InstalledAppItem::set_allocated_app_info(::std::string* app_info) {
  if (app_info != NULL) {
    set_has_app_info();
  } else {
    clear_has_app_info();
  }
  app_info_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), app_info);
  // @@protoc_insertion_point(field_set_allocated:cn.kylinos.kmre.kmrecore.InstalledAppItem.app_info)
}

// -------------------------------------------------------------------

// InstalledAppList

// repeated .cn.kylinos.kmre.kmrecore.InstalledAppItem item = 1;
inline int InstalledAppList::item_size() const {
  return item_.size();
}
inline void InstalledAppList::clear_item() {
  item_.Clear();
}
inline ::cn::kylinos::kmre::kmrecore::InstalledAppItem* InstalledAppList::mutable_item(int index) {
  // @@protoc_insertion_point(field_mutable:cn.kylinos.kmre.kmrecore.InstalledAppList.item)
  return item_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::cn::kylinos::kmre::kmrecore::InstalledAppItem >*
InstalledAppList::mutable_item() {
  // @@protoc_insertion_point(field_mutable_list:cn.kylinos.kmre.kmrecore.InstalledAppList.item)
  return &item_;
}
inline const ::cn::kylinos::kmre::kmrecore::InstalledAppItem& InstalledAppList::item(int index) const {
  // @@protoc_insertion_point(field_get:cn.kylinos.kmre.kmrecore.InstalledAppList.item)
  return item_.Get(index);
}
inline ::cn::kylinos::kmre::kmrecore::InstalledAppItem* InstalledAppList::add_item() {
  // @@protoc_insertion_point(field_add:cn.kylinos.kmre.kmrecore.InstalledAppList.item)
  return item_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::cn::kylinos::kmre::kmrecore::InstalledAppItem >&
InstalledAppList::item() const {
  // @@protoc_insertion_point(field_list:cn.kylinos.kmre.kmrecore.InstalledAppList.item)
  return item_;
}

// required int32 size = 2;
inline bool InstalledAppList::has_size() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void InstalledAppList::set_has_size() {
  _has_bits_[0] |= 0x00000001u;
}
inline void InstalledAppList::clear_has_size() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void InstalledAppList::clear_size() {
  size_ = 0;
  clear_has_size();
}
inline ::google::protobuf::int32 InstalledAppList::size() const {
  // @@protoc_insertion_point(field_get:cn.kylinos.kmre.kmrecore.InstalledAppList.size)
  return size_;
}
inline void InstalledAppList::set_size(::google::protobuf::int32 value) {
  set_has_size();
  size_ = value;
  // @@protoc_insertion_point(field_set:cn.kylinos.kmre.kmrecore.InstalledAppList.size)
}

// -------------------------------------------------------------------

// RunningAppItem

// required string app_name = 1;
inline bool RunningAppItem::has_app_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void RunningAppItem::set_has_app_name() {
  _has_bits_[0] |= 0x00000001u;
}
inline void RunningAppItem::clear_has_app_name() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void RunningAppItem::clear_app_name() {
  app_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_app_name();
}
inline const ::std::string& RunningAppItem::app_name() const {
  // @@protoc_insertion_point(field_get:cn.kylinos.kmre.kmrecore.RunningAppItem.app_name)
  return app_name_.GetNoArena();
}
inline void RunningAppItem::set_app_name(const ::std::string& value) {
  set_has_app_name();
  app_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:cn.kylinos.kmre.kmrecore.RunningAppItem.app_name)
}
#if LANG_CXX11
inline void RunningAppItem::set_app_name(::std::string&& value) {
  set_has_app_name();
  app_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:cn.kylinos.kmre.kmrecore.RunningAppItem.app_name)
}
#endif
inline void RunningAppItem::set_app_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_app_name();
  app_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:cn.kylinos.kmre.kmrecore.RunningAppItem.app_name)
}
inline void RunningAppItem::set_app_name(const char* value, size_t size) {
  set_has_app_name();
  app_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:cn.kylinos.kmre.kmrecore.RunningAppItem.app_name)
}
inline ::std::string* RunningAppItem::mutable_app_name() {
  set_has_app_name();
  // @@protoc_insertion_point(field_mutable:cn.kylinos.kmre.kmrecore.RunningAppItem.app_name)
  return app_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* RunningAppItem::release_app_name() {
  // @@protoc_insertion_point(field_release:cn.kylinos.kmre.kmrecore.RunningAppItem.app_name)
  if (!has_app_name()) {
    return NULL;
  }
  clear_has_app_name();
  return app_name_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void RunningAppItem::set_allocated_app_name(::std::string* app_name) {
  if (app_name != NULL) {
    set_has_app_name();
  } else {
    clear_has_app_name();
  }
  app_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), app_name);
  // @@protoc_insertion_point(field_set_allocated:cn.kylinos.kmre.kmrecore.RunningAppItem.app_name)
}

// required string package_name = 2;
inline bool RunningAppItem::has_package_name() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void RunningAppItem::set_has_package_name() {
  _has_bits_[0] |= 0x00000002u;
}
inline void RunningAppItem::clear_has_package_name() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void RunningAppItem::clear_package_name() {
  package_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_package_name();
}
inline const ::std::string& RunningAppItem::package_name() const {
  // @@protoc_insertion_point(field_get:cn.kylinos.kmre.kmrecore.RunningAppItem.package_name)
  return package_name_.GetNoArena();
}
inline void RunningAppItem::set_package_name(const ::std::string& value) {
  set_has_package_name();
  package_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:cn.kylinos.kmre.kmrecore.RunningAppItem.package_name)
}
#if LANG_CXX11
inline void RunningAppItem::set_package_name(::std::string&& value) {
  set_has_package_name();
  package_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:cn.kylinos.kmre.kmrecore.RunningAppItem.package_name)
}
#endif
inline void RunningAppItem::set_package_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_package_name();
  package_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:cn.kylinos.kmre.kmrecore.RunningAppItem.package_name)
}
inline void RunningAppItem::set_package_name(const char* value, size_t size) {
  set_has_package_name();
  package_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:cn.kylinos.kmre.kmrecore.RunningAppItem.package_name)
}
inline ::std::string* RunningAppItem::mutable_package_name() {
  set_has_package_name();
  // @@protoc_insertion_point(field_mutable:cn.kylinos.kmre.kmrecore.RunningAppItem.package_name)
  return package_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* RunningAppItem::release_package_name() {
  // @@protoc_insertion_point(field_release:cn.kylinos.kmre.kmrecore.RunningAppItem.package_name)
  if (!has_package_name()) {
    return NULL;
  }
  clear_has_package_name();
  return package_name_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void RunningAppItem::set_allocated_package_name(::std::string* package_name) {
  if (package_name != NULL) {
    set_has_package_name();
  } else {
    clear_has_package_name();
  }
  package_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), package_name);
  // @@protoc_insertion_point(field_set_allocated:cn.kylinos.kmre.kmrecore.RunningAppItem.package_name)
}

// -------------------------------------------------------------------

// RunningAppList

// repeated .cn.kylinos.kmre.kmrecore.RunningAppItem item = 1;
inline int RunningAppList::item_size() const {
  return item_.size();
}
inline void RunningAppList::clear_item() {
  item_.Clear();
}
inline ::cn::kylinos::kmre::kmrecore::RunningAppItem* RunningAppList::mutable_item(int index) {
  // @@protoc_insertion_point(field_mutable:cn.kylinos.kmre.kmrecore.RunningAppList.item)
  return item_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::cn::kylinos::kmre::kmrecore::RunningAppItem >*
RunningAppList::mutable_item() {
  // @@protoc_insertion_point(field_mutable_list:cn.kylinos.kmre.kmrecore.RunningAppList.item)
  return &item_;
}
inline const ::cn::kylinos::kmre::kmrecore::RunningAppItem& RunningAppList::item(int index) const {
  // @@protoc_insertion_point(field_get:cn.kylinos.kmre.kmrecore.RunningAppList.item)
  return item_.Get(index);
}
inline ::cn::kylinos::kmre::kmrecore::RunningAppItem* RunningAppList::add_item() {
  // @@protoc_insertion_point(field_add:cn.kylinos.kmre.kmrecore.RunningAppList.item)
  return item_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::cn::kylinos::kmre::kmrecore::RunningAppItem >&
RunningAppList::item() const {
  // @@protoc_insertion_point(field_list:cn.kylinos.kmre.kmrecore.RunningAppList.item)
  return item_;
}

// required int32 size = 2;
inline bool RunningAppList::has_size() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void RunningAppList::set_has_size() {
  _has_bits_[0] |= 0x00000001u;
}
inline void RunningAppList::clear_has_size() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void RunningAppList::clear_size() {
  size_ = 0;
  clear_has_size();
}
inline ::google::protobuf::int32 RunningAppList::size() const {
  // @@protoc_insertion_point(field_get:cn.kylinos.kmre.kmrecore.RunningAppList.size)
  return size_;
}
inline void RunningAppList::set_size(::google::protobuf::int32 value) {
  set_has_size();
  size_ = value;
  // @@protoc_insertion_point(field_set:cn.kylinos.kmre.kmrecore.RunningAppList.size)
}

// -------------------------------------------------------------------

// Notification

// required string package_name = 1;
inline bool Notification::has_package_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Notification::set_has_package_name() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Notification::clear_has_package_name() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Notification::clear_package_name() {
  package_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_package_name();
}
inline const ::std::string& Notification::package_name() const {
  // @@protoc_insertion_point(field_get:cn.kylinos.kmre.kmrecore.Notification.package_name)
  return package_name_.GetNoArena();
}
inline void Notification::set_package_name(const ::std::string& value) {
  set_has_package_name();
  package_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:cn.kylinos.kmre.kmrecore.Notification.package_name)
}
#if LANG_CXX11
inline void Notification::set_package_name(::std::string&& value) {
  set_has_package_name();
  package_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:cn.kylinos.kmre.kmrecore.Notification.package_name)
}
#endif
inline void Notification::set_package_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_package_name();
  package_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:cn.kylinos.kmre.kmrecore.Notification.package_name)
}
inline void Notification::set_package_name(const char* value, size_t size) {
  set_has_package_name();
  package_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:cn.kylinos.kmre.kmrecore.Notification.package_name)
}
inline ::std::string* Notification::mutable_package_name() {
  set_has_package_name();
  // @@protoc_insertion_point(field_mutable:cn.kylinos.kmre.kmrecore.Notification.package_name)
  return package_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Notification::release_package_name() {
  // @@protoc_insertion_point(field_release:cn.kylinos.kmre.kmrecore.Notification.package_name)
  if (!has_package_name()) {
    return NULL;
  }
  clear_has_package_name();
  return package_name_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Notification::set_allocated_package_name(::std::string* package_name) {
  if (package_name != NULL) {
    set_has_package_name();
  } else {
    clear_has_package_name();
  }
  package_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), package_name);
  // @@protoc_insertion_point(field_set_allocated:cn.kylinos.kmre.kmrecore.Notification.package_name)
}

// required string app_name = 2;
inline bool Notification::has_app_name() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Notification::set_has_app_name() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Notification::clear_has_app_name() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Notification::clear_app_name() {
  app_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_app_name();
}
inline const ::std::string& Notification::app_name() const {
  // @@protoc_insertion_point(field_get:cn.kylinos.kmre.kmrecore.Notification.app_name)
  return app_name_.GetNoArena();
}
inline void Notification::set_app_name(const ::std::string& value) {
  set_has_app_name();
  app_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:cn.kylinos.kmre.kmrecore.Notification.app_name)
}
#if LANG_CXX11
inline void Notification::set_app_name(::std::string&& value) {
  set_has_app_name();
  app_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:cn.kylinos.kmre.kmrecore.Notification.app_name)
}
#endif
inline void Notification::set_app_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_app_name();
  app_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:cn.kylinos.kmre.kmrecore.Notification.app_name)
}
inline void Notification::set_app_name(const char* value, size_t size) {
  set_has_app_name();
  app_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:cn.kylinos.kmre.kmrecore.Notification.app_name)
}
inline ::std::string* Notification::mutable_app_name() {
  set_has_app_name();
  // @@protoc_insertion_point(field_mutable:cn.kylinos.kmre.kmrecore.Notification.app_name)
  return app_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Notification::release_app_name() {
  // @@protoc_insertion_point(field_release:cn.kylinos.kmre.kmrecore.Notification.app_name)
  if (!has_app_name()) {
    return NULL;
  }
  clear_has_app_name();
  return app_name_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Notification::set_allocated_app_name(::std::string* app_name) {
  if (app_name != NULL) {
    set_has_app_name();
  } else {
    clear_has_app_name();
  }
  app_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), app_name);
  // @@protoc_insertion_point(field_set_allocated:cn.kylinos.kmre.kmrecore.Notification.app_name)
}

// optional string text = 3;
inline bool Notification::has_text() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Notification::set_has_text() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Notification::clear_has_text() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Notification::clear_text() {
  text_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_text();
}
inline const ::std::string& Notification::text() const {
  // @@protoc_insertion_point(field_get:cn.kylinos.kmre.kmrecore.Notification.text)
  return text_.GetNoArena();
}
inline void Notification::set_text(const ::std::string& value) {
  set_has_text();
  text_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:cn.kylinos.kmre.kmrecore.Notification.text)
}
#if LANG_CXX11
inline void Notification::set_text(::std::string&& value) {
  set_has_text();
  text_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:cn.kylinos.kmre.kmrecore.Notification.text)
}
#endif
inline void Notification::set_text(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_text();
  text_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:cn.kylinos.kmre.kmrecore.Notification.text)
}
inline void Notification::set_text(const char* value, size_t size) {
  set_has_text();
  text_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:cn.kylinos.kmre.kmrecore.Notification.text)
}
inline ::std::string* Notification::mutable_text() {
  set_has_text();
  // @@protoc_insertion_point(field_mutable:cn.kylinos.kmre.kmrecore.Notification.text)
  return text_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Notification::release_text() {
  // @@protoc_insertion_point(field_release:cn.kylinos.kmre.kmrecore.Notification.text)
  if (!has_text()) {
    return NULL;
  }
  clear_has_text();
  return text_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Notification::set_allocated_text(::std::string* text) {
  if (text != NULL) {
    set_has_text();
  } else {
    clear_has_text();
  }
  text_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), text);
  // @@protoc_insertion_point(field_set_allocated:cn.kylinos.kmre.kmrecore.Notification.text)
}

// optional int32 display_id = 4;
inline bool Notification::has_display_id() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void Notification::set_has_display_id() {
  _has_bits_[0] |= 0x00000010u;
}
inline void Notification::clear_has_display_id() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void Notification::clear_display_id() {
  display_id_ = 0;
  clear_has_display_id();
}
inline ::google::protobuf::int32 Notification::display_id() const {
  // @@protoc_insertion_point(field_get:cn.kylinos.kmre.kmrecore.Notification.display_id)
  return display_id_;
}
inline void Notification::set_display_id(::google::protobuf::int32 value) {
  set_has_display_id();
  display_id_ = value;
  // @@protoc_insertion_point(field_set:cn.kylinos.kmre.kmrecore.Notification.display_id)
}

// optional bool hide = 5;
inline bool Notification::has_hide() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void Notification::set_has_hide() {
  _has_bits_[0] |= 0x00000020u;
}
inline void Notification::clear_has_hide() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void Notification::clear_hide() {
  hide_ = false;
  clear_has_hide();
}
inline bool Notification::hide() const {
  // @@protoc_insertion_point(field_get:cn.kylinos.kmre.kmrecore.Notification.hide)
  return hide_;
}
inline void Notification::set_hide(bool value) {
  set_has_hide();
  hide_ = value;
  // @@protoc_insertion_point(field_set:cn.kylinos.kmre.kmrecore.Notification.hide)
}

// optional bool incoming_call = 6;
inline bool Notification::has_incoming_call() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void Notification::set_has_incoming_call() {
  _has_bits_[0] |= 0x00000040u;
}
inline void Notification::clear_has_incoming_call() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void Notification::clear_incoming_call() {
  incoming_call_ = false;
  clear_has_incoming_call();
}
inline bool Notification::incoming_call() const {
  // @@protoc_insertion_point(field_get:cn.kylinos.kmre.kmrecore.Notification.incoming_call)
  return incoming_call_;
}
inline void Notification::set_incoming_call(bool value) {
  set_has_incoming_call();
  incoming_call_ = value;
  // @@protoc_insertion_point(field_set:cn.kylinos.kmre.kmrecore.Notification.incoming_call)
}

// optional string title = 7;
inline bool Notification::has_title() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void Notification::set_has_title() {
  _has_bits_[0] |= 0x00000008u;
}
inline void Notification::clear_has_title() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void Notification::clear_title() {
  title_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_title();
}
inline const ::std::string& Notification::title() const {
  // @@protoc_insertion_point(field_get:cn.kylinos.kmre.kmrecore.Notification.title)
  return title_.GetNoArena();
}
inline void Notification::set_title(const ::std::string& value) {
  set_has_title();
  title_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:cn.kylinos.kmre.kmrecore.Notification.title)
}
#if LANG_CXX11
inline void Notification::set_title(::std::string&& value) {
  set_has_title();
  title_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:cn.kylinos.kmre.kmrecore.Notification.title)
}
#endif
inline void Notification::set_title(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_title();
  title_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:cn.kylinos.kmre.kmrecore.Notification.title)
}
inline void Notification::set_title(const char* value, size_t size) {
  set_has_title();
  title_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:cn.kylinos.kmre.kmrecore.Notification.title)
}
inline ::std::string* Notification::mutable_title() {
  set_has_title();
  // @@protoc_insertion_point(field_mutable:cn.kylinos.kmre.kmrecore.Notification.title)
  return title_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Notification::release_title() {
  // @@protoc_insertion_point(field_release:cn.kylinos.kmre.kmrecore.Notification.title)
  if (!has_title()) {
    return NULL;
  }
  clear_has_title();
  return title_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Notification::set_allocated_title(::std::string* title) {
  if (title != NULL) {
    set_has_title();
  } else {
    clear_has_title();
  }
  title_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), title);
  // @@protoc_insertion_point(field_set_allocated:cn.kylinos.kmre.kmrecore.Notification.title)
}

// -------------------------------------------------------------------

// LaunchResult

// required string app_name = 1;
inline bool LaunchResult::has_app_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void LaunchResult::set_has_app_name() {
  _has_bits_[0] |= 0x00000001u;
}
inline void LaunchResult::clear_has_app_name() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void LaunchResult::clear_app_name() {
  app_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_app_name();
}
inline const ::std::string& LaunchResult::app_name() const {
  // @@protoc_insertion_point(field_get:cn.kylinos.kmre.kmrecore.LaunchResult.app_name)
  return app_name_.GetNoArena();
}
inline void LaunchResult::set_app_name(const ::std::string& value) {
  set_has_app_name();
  app_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:cn.kylinos.kmre.kmrecore.LaunchResult.app_name)
}
#if LANG_CXX11
inline void LaunchResult::set_app_name(::std::string&& value) {
  set_has_app_name();
  app_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:cn.kylinos.kmre.kmrecore.LaunchResult.app_name)
}
#endif
inline void LaunchResult::set_app_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_app_name();
  app_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:cn.kylinos.kmre.kmrecore.LaunchResult.app_name)
}
inline void LaunchResult::set_app_name(const char* value, size_t size) {
  set_has_app_name();
  app_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:cn.kylinos.kmre.kmrecore.LaunchResult.app_name)
}
inline ::std::string* LaunchResult::mutable_app_name() {
  set_has_app_name();
  // @@protoc_insertion_point(field_mutable:cn.kylinos.kmre.kmrecore.LaunchResult.app_name)
  return app_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* LaunchResult::release_app_name() {
  // @@protoc_insertion_point(field_release:cn.kylinos.kmre.kmrecore.LaunchResult.app_name)
  if (!has_app_name()) {
    return NULL;
  }
  clear_has_app_name();
  return app_name_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void LaunchResult::set_allocated_app_name(::std::string* app_name) {
  if (app_name != NULL) {
    set_has_app_name();
  } else {
    clear_has_app_name();
  }
  app_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), app_name);
  // @@protoc_insertion_point(field_set_allocated:cn.kylinos.kmre.kmrecore.LaunchResult.app_name)
}

// required string package_name = 2;
inline bool LaunchResult::has_package_name() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void LaunchResult::set_has_package_name() {
  _has_bits_[0] |= 0x00000002u;
}
inline void LaunchResult::clear_has_package_name() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void LaunchResult::clear_package_name() {
  package_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_package_name();
}
inline const ::std::string& LaunchResult::package_name() const {
  // @@protoc_insertion_point(field_get:cn.kylinos.kmre.kmrecore.LaunchResult.package_name)
  return package_name_.GetNoArena();
}
inline void LaunchResult::set_package_name(const ::std::string& value) {
  set_has_package_name();
  package_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:cn.kylinos.kmre.kmrecore.LaunchResult.package_name)
}
#if LANG_CXX11
inline void LaunchResult::set_package_name(::std::string&& value) {
  set_has_package_name();
  package_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:cn.kylinos.kmre.kmrecore.LaunchResult.package_name)
}
#endif
inline void LaunchResult::set_package_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_package_name();
  package_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:cn.kylinos.kmre.kmrecore.LaunchResult.package_name)
}
inline void LaunchResult::set_package_name(const char* value, size_t size) {
  set_has_package_name();
  package_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:cn.kylinos.kmre.kmrecore.LaunchResult.package_name)
}
inline ::std::string* LaunchResult::mutable_package_name() {
  set_has_package_name();
  // @@protoc_insertion_point(field_mutable:cn.kylinos.kmre.kmrecore.LaunchResult.package_name)
  return package_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* LaunchResult::release_package_name() {
  // @@protoc_insertion_point(field_release:cn.kylinos.kmre.kmrecore.LaunchResult.package_name)
  if (!has_package_name()) {
    return NULL;
  }
  clear_has_package_name();
  return package_name_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void LaunchResult::set_allocated_package_name(::std::string* package_name) {
  if (package_name != NULL) {
    set_has_package_name();
  } else {
    clear_has_package_name();
  }
  package_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), package_name);
  // @@protoc_insertion_point(field_set_allocated:cn.kylinos.kmre.kmrecore.LaunchResult.package_name)
}

// required bool result = 3;
inline bool LaunchResult::has_result() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void LaunchResult::set_has_result() {
  _has_bits_[0] |= 0x00000040u;
}
inline void LaunchResult::clear_has_result() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void LaunchResult::clear_result() {
  result_ = false;
  clear_has_result();
}
inline bool LaunchResult::result() const {
  // @@protoc_insertion_point(field_get:cn.kylinos.kmre.kmrecore.LaunchResult.result)
  return result_;
}
inline void LaunchResult::set_result(bool value) {
  set_has_result();
  result_ = value;
  // @@protoc_insertion_point(field_set:cn.kylinos.kmre.kmrecore.LaunchResult.result)
}

// required int32 display_id = 4;
inline bool LaunchResult::has_display_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void LaunchResult::set_has_display_id() {
  _has_bits_[0] |= 0x00000004u;
}
inline void LaunchResult::clear_has_display_id() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void LaunchResult::clear_display_id() {
  display_id_ = 0;
  clear_has_display_id();
}
inline ::google::protobuf::int32 LaunchResult::display_id() const {
  // @@protoc_insertion_point(field_get:cn.kylinos.kmre.kmrecore.LaunchResult.display_id)
  return display_id_;
}
inline void LaunchResult::set_display_id(::google::protobuf::int32 value) {
  set_has_display_id();
  display_id_ = value;
  // @@protoc_insertion_point(field_set:cn.kylinos.kmre.kmrecore.LaunchResult.display_id)
}

// required int32 width = 5;
inline bool LaunchResult::has_width() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void LaunchResult::set_has_width() {
  _has_bits_[0] |= 0x00000008u;
}
inline void LaunchResult::clear_has_width() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void LaunchResult::clear_width() {
  width_ = 0;
  clear_has_width();
}
inline ::google::protobuf::int32 LaunchResult::width() const {
  // @@protoc_insertion_point(field_get:cn.kylinos.kmre.kmrecore.LaunchResult.width)
  return width_;
}
inline void LaunchResult::set_width(::google::protobuf::int32 value) {
  set_has_width();
  width_ = value;
  // @@protoc_insertion_point(field_set:cn.kylinos.kmre.kmrecore.LaunchResult.width)
}

// required int32 height = 6;
inline bool LaunchResult::has_height() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void LaunchResult::set_has_height() {
  _has_bits_[0] |= 0x00000010u;
}
inline void LaunchResult::clear_has_height() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void LaunchResult::clear_height() {
  height_ = 0;
  clear_has_height();
}
inline ::google::protobuf::int32 LaunchResult::height() const {
  // @@protoc_insertion_point(field_get:cn.kylinos.kmre.kmrecore.LaunchResult.height)
  return height_;
}
inline void LaunchResult::set_height(::google::protobuf::int32 value) {
  set_has_height();
  height_ = value;
  // @@protoc_insertion_point(field_set:cn.kylinos.kmre.kmrecore.LaunchResult.height)
}

// required int32 density = 7;
inline bool LaunchResult::has_density() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void LaunchResult::set_has_density() {
  _has_bits_[0] |= 0x00000020u;
}
inline void LaunchResult::clear_has_density() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void LaunchResult::clear_density() {
  density_ = 0;
  clear_has_density();
}
inline ::google::protobuf::int32 LaunchResult::density() const {
  // @@protoc_insertion_point(field_get:cn.kylinos.kmre.kmrecore.LaunchResult.density)
  return density_;
}
inline void LaunchResult::set_density(::google::protobuf::int32 value) {
  set_has_density();
  density_ = value;
  // @@protoc_insertion_point(field_set:cn.kylinos.kmre.kmrecore.LaunchResult.density)
}

// required bool fullscreen = 8;
inline bool LaunchResult::has_fullscreen() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void LaunchResult::set_has_fullscreen() {
  _has_bits_[0] |= 0x00000080u;
}
inline void LaunchResult::clear_has_fullscreen() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void LaunchResult::clear_fullscreen() {
  fullscreen_ = false;
  clear_has_fullscreen();
}
inline bool LaunchResult::fullscreen() const {
  // @@protoc_insertion_point(field_get:cn.kylinos.kmre.kmrecore.LaunchResult.fullscreen)
  return fullscreen_;
}
inline void LaunchResult::set_fullscreen(bool value) {
  set_has_fullscreen();
  fullscreen_ = value;
  // @@protoc_insertion_point(field_set:cn.kylinos.kmre.kmrecore.LaunchResult.fullscreen)
}

// optional bool exists = 9;
inline bool LaunchResult::has_exists() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void LaunchResult::set_has_exists() {
  _has_bits_[0] |= 0x00000100u;
}
inline void LaunchResult::clear_has_exists() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void LaunchResult::clear_exists() {
  exists_ = false;
  clear_has_exists();
}
inline bool LaunchResult::exists() const {
  // @@protoc_insertion_point(field_get:cn.kylinos.kmre.kmrecore.LaunchResult.exists)
  return exists_;
}
inline void LaunchResult::set_exists(bool value) {
  set_has_exists();
  exists_ = value;
  // @@protoc_insertion_point(field_set:cn.kylinos.kmre.kmrecore.LaunchResult.exists)
}

// optional bool app_resumed = 10;
inline bool LaunchResult::has_app_resumed() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void LaunchResult::set_has_app_resumed() {
  _has_bits_[0] |= 0x00000200u;
}
inline void LaunchResult::clear_has_app_resumed() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void LaunchResult::clear_app_resumed() {
  app_resumed_ = false;
  clear_has_app_resumed();
}
inline bool LaunchResult::app_resumed() const {
  // @@protoc_insertion_point(field_get:cn.kylinos.kmre.kmrecore.LaunchResult.app_resumed)
  return app_resumed_;
}
inline void LaunchResult::set_app_resumed(bool value) {
  set_has_app_resumed();
  app_resumed_ = value;
  // @@protoc_insertion_point(field_set:cn.kylinos.kmre.kmrecore.LaunchResult.app_resumed)
}

// -------------------------------------------------------------------

// CloseResult

// required string package_name = 1;
inline bool CloseResult::has_package_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CloseResult::set_has_package_name() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CloseResult::clear_has_package_name() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CloseResult::clear_package_name() {
  package_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_package_name();
}
inline const ::std::string& CloseResult::package_name() const {
  // @@protoc_insertion_point(field_get:cn.kylinos.kmre.kmrecore.CloseResult.package_name)
  return package_name_.GetNoArena();
}
inline void CloseResult::set_package_name(const ::std::string& value) {
  set_has_package_name();
  package_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:cn.kylinos.kmre.kmrecore.CloseResult.package_name)
}
#if LANG_CXX11
inline void CloseResult::set_package_name(::std::string&& value) {
  set_has_package_name();
  package_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:cn.kylinos.kmre.kmrecore.CloseResult.package_name)
}
#endif
inline void CloseResult::set_package_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_package_name();
  package_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:cn.kylinos.kmre.kmrecore.CloseResult.package_name)
}
inline void CloseResult::set_package_name(const char* value, size_t size) {
  set_has_package_name();
  package_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:cn.kylinos.kmre.kmrecore.CloseResult.package_name)
}
inline ::std::string* CloseResult::mutable_package_name() {
  set_has_package_name();
  // @@protoc_insertion_point(field_mutable:cn.kylinos.kmre.kmrecore.CloseResult.package_name)
  return package_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CloseResult::release_package_name() {
  // @@protoc_insertion_point(field_release:cn.kylinos.kmre.kmrecore.CloseResult.package_name)
  if (!has_package_name()) {
    return NULL;
  }
  clear_has_package_name();
  return package_name_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CloseResult::set_allocated_package_name(::std::string* package_name) {
  if (package_name != NULL) {
    set_has_package_name();
  } else {
    clear_has_package_name();
  }
  package_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), package_name);
  // @@protoc_insertion_point(field_set_allocated:cn.kylinos.kmre.kmrecore.CloseResult.package_name)
}

// required bool result = 2;
inline bool CloseResult::has_result() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CloseResult::set_has_result() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CloseResult::clear_has_result() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CloseResult::clear_result() {
  result_ = false;
  clear_has_result();
}
inline bool CloseResult::result() const {
  // @@protoc_insertion_point(field_get:cn.kylinos.kmre.kmrecore.CloseResult.result)
  return result_;
}
inline void CloseResult::set_result(bool value) {
  set_has_result();
  result_ = value;
  // @@protoc_insertion_point(field_set:cn.kylinos.kmre.kmrecore.CloseResult.result)
}

// -------------------------------------------------------------------

// VirtualScreenFocusResult

// required int32 display_id = 1;
inline bool VirtualScreenFocusResult::has_display_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void VirtualScreenFocusResult::set_has_display_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void VirtualScreenFocusResult::clear_has_display_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void VirtualScreenFocusResult::clear_display_id() {
  display_id_ = 0;
  clear_has_display_id();
}
inline ::google::protobuf::int32 VirtualScreenFocusResult::display_id() const {
  // @@protoc_insertion_point(field_get:cn.kylinos.kmre.kmrecore.VirtualScreenFocusResult.display_id)
  return display_id_;
}
inline void VirtualScreenFocusResult::set_display_id(::google::protobuf::int32 value) {
  set_has_display_id();
  display_id_ = value;
  // @@protoc_insertion_point(field_set:cn.kylinos.kmre.kmrecore.VirtualScreenFocusResult.display_id)
}

// required bool result = 2;
inline bool VirtualScreenFocusResult::has_result() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void VirtualScreenFocusResult::set_has_result() {
  _has_bits_[0] |= 0x00000002u;
}
inline void VirtualScreenFocusResult::clear_has_result() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void VirtualScreenFocusResult::clear_result() {
  result_ = false;
  clear_has_result();
}
inline bool VirtualScreenFocusResult::result() const {
  // @@protoc_insertion_point(field_get:cn.kylinos.kmre.kmrecore.VirtualScreenFocusResult.result)
  return result_;
}
inline void VirtualScreenFocusResult::set_result(bool value) {
  set_has_result();
  result_ = value;
  // @@protoc_insertion_point(field_set:cn.kylinos.kmre.kmrecore.VirtualScreenFocusResult.result)
}

// -------------------------------------------------------------------

// InputMethodRequest

// required int32 display_id = 1;
inline bool InputMethodRequest::has_display_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void InputMethodRequest::set_has_display_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void InputMethodRequest::clear_has_display_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void InputMethodRequest::clear_display_id() {
  display_id_ = 0;
  clear_has_display_id();
}
inline ::google::protobuf::int32 InputMethodRequest::display_id() const {
  // @@protoc_insertion_point(field_get:cn.kylinos.kmre.kmrecore.InputMethodRequest.display_id)
  return display_id_;
}
inline void InputMethodRequest::set_display_id(::google::protobuf::int32 value) {
  set_has_display_id();
  display_id_ = value;
  // @@protoc_insertion_point(field_set:cn.kylinos.kmre.kmrecore.InputMethodRequest.display_id)
}

// required string package_name = 2;
inline bool InputMethodRequest::has_package_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void InputMethodRequest::set_has_package_name() {
  _has_bits_[0] |= 0x00000001u;
}
inline void InputMethodRequest::clear_has_package_name() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void InputMethodRequest::clear_package_name() {
  package_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_package_name();
}
inline const ::std::string& InputMethodRequest::package_name() const {
  // @@protoc_insertion_point(field_get:cn.kylinos.kmre.kmrecore.InputMethodRequest.package_name)
  return package_name_.GetNoArena();
}
inline void InputMethodRequest::set_package_name(const ::std::string& value) {
  set_has_package_name();
  package_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:cn.kylinos.kmre.kmrecore.InputMethodRequest.package_name)
}
#if LANG_CXX11
inline void InputMethodRequest::set_package_name(::std::string&& value) {
  set_has_package_name();
  package_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:cn.kylinos.kmre.kmrecore.InputMethodRequest.package_name)
}
#endif
inline void InputMethodRequest::set_package_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_package_name();
  package_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:cn.kylinos.kmre.kmrecore.InputMethodRequest.package_name)
}
inline void InputMethodRequest::set_package_name(const char* value, size_t size) {
  set_has_package_name();
  package_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:cn.kylinos.kmre.kmrecore.InputMethodRequest.package_name)
}
inline ::std::string* InputMethodRequest::mutable_package_name() {
  set_has_package_name();
  // @@protoc_insertion_point(field_mutable:cn.kylinos.kmre.kmrecore.InputMethodRequest.package_name)
  return package_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* InputMethodRequest::release_package_name() {
  // @@protoc_insertion_point(field_release:cn.kylinos.kmre.kmrecore.InputMethodRequest.package_name)
  if (!has_package_name()) {
    return NULL;
  }
  clear_has_package_name();
  return package_name_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void InputMethodRequest::set_allocated_package_name(::std::string* package_name) {
  if (package_name != NULL) {
    set_has_package_name();
  } else {
    clear_has_package_name();
  }
  package_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), package_name);
  // @@protoc_insertion_point(field_set_allocated:cn.kylinos.kmre.kmrecore.InputMethodRequest.package_name)
}

// required bool ret = 3;
inline bool InputMethodRequest::has_ret() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void InputMethodRequest::set_has_ret() {
  _has_bits_[0] |= 0x00000004u;
}
inline void InputMethodRequest::clear_has_ret() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void InputMethodRequest::clear_ret() {
  ret_ = false;
  clear_has_ret();
}
inline bool InputMethodRequest::ret() const {
  // @@protoc_insertion_point(field_get:cn.kylinos.kmre.kmrecore.InputMethodRequest.ret)
  return ret_;
}
inline void InputMethodRequest::set_ret(bool value) {
  set_has_ret();
  ret_ = value;
  // @@protoc_insertion_point(field_set:cn.kylinos.kmre.kmrecore.InputMethodRequest.ret)
}

// optional int32 x_pos = 4;
inline bool InputMethodRequest::has_x_pos() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void InputMethodRequest::set_has_x_pos() {
  _has_bits_[0] |= 0x00000008u;
}
inline void InputMethodRequest::clear_has_x_pos() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void InputMethodRequest::clear_x_pos() {
  x_pos_ = 0;
  clear_has_x_pos();
}
inline ::google::protobuf::int32 InputMethodRequest::x_pos() const {
  // @@protoc_insertion_point(field_get:cn.kylinos.kmre.kmrecore.InputMethodRequest.x_pos)
  return x_pos_;
}
inline void InputMethodRequest::set_x_pos(::google::protobuf::int32 value) {
  set_has_x_pos();
  x_pos_ = value;
  // @@protoc_insertion_point(field_set:cn.kylinos.kmre.kmrecore.InputMethodRequest.x_pos)
}

// optional int32 y_pos = 5;
inline bool InputMethodRequest::has_y_pos() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void InputMethodRequest::set_has_y_pos() {
  _has_bits_[0] |= 0x00000010u;
}
inline void InputMethodRequest::clear_has_y_pos() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void InputMethodRequest::clear_y_pos() {
  y_pos_ = 0;
  clear_has_y_pos();
}
inline ::google::protobuf::int32 InputMethodRequest::y_pos() const {
  // @@protoc_insertion_point(field_get:cn.kylinos.kmre.kmrecore.InputMethodRequest.y_pos)
  return y_pos_;
}
inline void InputMethodRequest::set_y_pos(::google::protobuf::int32 value) {
  set_has_y_pos();
  y_pos_ = value;
  // @@protoc_insertion_point(field_set:cn.kylinos.kmre.kmrecore.InputMethodRequest.y_pos)
}

// -------------------------------------------------------------------

// SingleFile

// required string data = 1;
inline bool SingleFile::has_data() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SingleFile::set_has_data() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SingleFile::clear_has_data() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SingleFile::clear_data() {
  data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_data();
}
inline const ::std::string& SingleFile::data() const {
  // @@protoc_insertion_point(field_get:cn.kylinos.kmre.kmrecore.SingleFile.data)
  return data_.GetNoArena();
}
inline void SingleFile::set_data(const ::std::string& value) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:cn.kylinos.kmre.kmrecore.SingleFile.data)
}
#if LANG_CXX11
inline void SingleFile::set_data(::std::string&& value) {
  set_has_data();
  data_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:cn.kylinos.kmre.kmrecore.SingleFile.data)
}
#endif
inline void SingleFile::set_data(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:cn.kylinos.kmre.kmrecore.SingleFile.data)
}
inline void SingleFile::set_data(const char* value, size_t size) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:cn.kylinos.kmre.kmrecore.SingleFile.data)
}
inline ::std::string* SingleFile::mutable_data() {
  set_has_data();
  // @@protoc_insertion_point(field_mutable:cn.kylinos.kmre.kmrecore.SingleFile.data)
  return data_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SingleFile::release_data() {
  // @@protoc_insertion_point(field_release:cn.kylinos.kmre.kmrecore.SingleFile.data)
  if (!has_data()) {
    return NULL;
  }
  clear_has_data();
  return data_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SingleFile::set_allocated_data(::std::string* data) {
  if (data != NULL) {
    set_has_data();
  } else {
    clear_has_data();
  }
  data_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), data);
  // @@protoc_insertion_point(field_set_allocated:cn.kylinos.kmre.kmrecore.SingleFile.data)
}

// required string mime_type = 2;
inline bool SingleFile::has_mime_type() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SingleFile::set_has_mime_type() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SingleFile::clear_has_mime_type() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SingleFile::clear_mime_type() {
  mime_type_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_mime_type();
}
inline const ::std::string& SingleFile::mime_type() const {
  // @@protoc_insertion_point(field_get:cn.kylinos.kmre.kmrecore.SingleFile.mime_type)
  return mime_type_.GetNoArena();
}
inline void SingleFile::set_mime_type(const ::std::string& value) {
  set_has_mime_type();
  mime_type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:cn.kylinos.kmre.kmrecore.SingleFile.mime_type)
}
#if LANG_CXX11
inline void SingleFile::set_mime_type(::std::string&& value) {
  set_has_mime_type();
  mime_type_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:cn.kylinos.kmre.kmrecore.SingleFile.mime_type)
}
#endif
inline void SingleFile::set_mime_type(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_mime_type();
  mime_type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:cn.kylinos.kmre.kmrecore.SingleFile.mime_type)
}
inline void SingleFile::set_mime_type(const char* value, size_t size) {
  set_has_mime_type();
  mime_type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:cn.kylinos.kmre.kmrecore.SingleFile.mime_type)
}
inline ::std::string* SingleFile::mutable_mime_type() {
  set_has_mime_type();
  // @@protoc_insertion_point(field_mutable:cn.kylinos.kmre.kmrecore.SingleFile.mime_type)
  return mime_type_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SingleFile::release_mime_type() {
  // @@protoc_insertion_point(field_release:cn.kylinos.kmre.kmrecore.SingleFile.mime_type)
  if (!has_mime_type()) {
    return NULL;
  }
  clear_has_mime_type();
  return mime_type_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SingleFile::set_allocated_mime_type(::std::string* mime_type) {
  if (mime_type != NULL) {
    set_has_mime_type();
  } else {
    clear_has_mime_type();
  }
  mime_type_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), mime_type);
  // @@protoc_insertion_point(field_set_allocated:cn.kylinos.kmre.kmrecore.SingleFile.mime_type)
}

// optional string package_name = 3;
inline bool SingleFile::has_package_name() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void SingleFile::set_has_package_name() {
  _has_bits_[0] |= 0x00000004u;
}
inline void SingleFile::clear_has_package_name() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void SingleFile::clear_package_name() {
  package_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_package_name();
}
inline const ::std::string& SingleFile::package_name() const {
  // @@protoc_insertion_point(field_get:cn.kylinos.kmre.kmrecore.SingleFile.package_name)
  return package_name_.GetNoArena();
}
inline void SingleFile::set_package_name(const ::std::string& value) {
  set_has_package_name();
  package_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:cn.kylinos.kmre.kmrecore.SingleFile.package_name)
}
#if LANG_CXX11
inline void SingleFile::set_package_name(::std::string&& value) {
  set_has_package_name();
  package_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:cn.kylinos.kmre.kmrecore.SingleFile.package_name)
}
#endif
inline void SingleFile::set_package_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_package_name();
  package_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:cn.kylinos.kmre.kmrecore.SingleFile.package_name)
}
inline void SingleFile::set_package_name(const char* value, size_t size) {
  set_has_package_name();
  package_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:cn.kylinos.kmre.kmrecore.SingleFile.package_name)
}
inline ::std::string* SingleFile::mutable_package_name() {
  set_has_package_name();
  // @@protoc_insertion_point(field_mutable:cn.kylinos.kmre.kmrecore.SingleFile.package_name)
  return package_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SingleFile::release_package_name() {
  // @@protoc_insertion_point(field_release:cn.kylinos.kmre.kmrecore.SingleFile.package_name)
  if (!has_package_name()) {
    return NULL;
  }
  clear_has_package_name();
  return package_name_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SingleFile::set_allocated_package_name(::std::string* package_name) {
  if (package_name != NULL) {
    set_has_package_name();
  } else {
    clear_has_package_name();
  }
  package_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), package_name);
  // @@protoc_insertion_point(field_set_allocated:cn.kylinos.kmre.kmrecore.SingleFile.package_name)
}

// -------------------------------------------------------------------

// FilesList

// required int32 type = 1;
inline bool FilesList::has_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void FilesList::set_has_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void FilesList::clear_has_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void FilesList::clear_type() {
  type_ = 0;
  clear_has_type();
}
inline ::google::protobuf::int32 FilesList::type() const {
  // @@protoc_insertion_point(field_get:cn.kylinos.kmre.kmrecore.FilesList.type)
  return type_;
}
inline void FilesList::set_type(::google::protobuf::int32 value) {
  set_has_type();
  type_ = value;
  // @@protoc_insertion_point(field_set:cn.kylinos.kmre.kmrecore.FilesList.type)
}

// repeated .cn.kylinos.kmre.kmrecore.SingleFile item = 2;
inline int FilesList::item_size() const {
  return item_.size();
}
inline void FilesList::clear_item() {
  item_.Clear();
}
inline ::cn::kylinos::kmre::kmrecore::SingleFile* FilesList::mutable_item(int index) {
  // @@protoc_insertion_point(field_mutable:cn.kylinos.kmre.kmrecore.FilesList.item)
  return item_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::cn::kylinos::kmre::kmrecore::SingleFile >*
FilesList::mutable_item() {
  // @@protoc_insertion_point(field_mutable_list:cn.kylinos.kmre.kmrecore.FilesList.item)
  return &item_;
}
inline const ::cn::kylinos::kmre::kmrecore::SingleFile& FilesList::item(int index) const {
  // @@protoc_insertion_point(field_get:cn.kylinos.kmre.kmrecore.FilesList.item)
  return item_.Get(index);
}
inline ::cn::kylinos::kmre::kmrecore::SingleFile* FilesList::add_item() {
  // @@protoc_insertion_point(field_add:cn.kylinos.kmre.kmrecore.FilesList.item)
  return item_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::cn::kylinos::kmre::kmrecore::SingleFile >&
FilesList::item() const {
  // @@protoc_insertion_point(field_list:cn.kylinos.kmre.kmrecore.FilesList.item)
  return item_;
}

// required int32 size = 3;
inline bool FilesList::has_size() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void FilesList::set_has_size() {
  _has_bits_[0] |= 0x00000002u;
}
inline void FilesList::clear_has_size() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void FilesList::clear_size() {
  size_ = 0;
  clear_has_size();
}
inline ::google::protobuf::int32 FilesList::size() const {
  // @@protoc_insertion_point(field_get:cn.kylinos.kmre.kmrecore.FilesList.size)
  return size_;
}
inline void FilesList::set_size(::google::protobuf::int32 value) {
  set_has_size();
  size_ = value;
  // @@protoc_insertion_point(field_set:cn.kylinos.kmre.kmrecore.FilesList.size)
}

// -------------------------------------------------------------------

// MediaPlayStatus

// required bool result = 1;
inline bool MediaPlayStatus::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MediaPlayStatus::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MediaPlayStatus::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MediaPlayStatus::clear_result() {
  result_ = false;
  clear_has_result();
}
inline bool MediaPlayStatus::result() const {
  // @@protoc_insertion_point(field_get:cn.kylinos.kmre.kmrecore.MediaPlayStatus.result)
  return result_;
}
inline void MediaPlayStatus::set_result(bool value) {
  set_has_result();
  result_ = value;
  // @@protoc_insertion_point(field_set:cn.kylinos.kmre.kmrecore.MediaPlayStatus.result)
}

// -------------------------------------------------------------------

// AppMultiplier

// required string package_name = 1;
inline bool AppMultiplier::has_package_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void AppMultiplier::set_has_package_name() {
  _has_bits_[0] |= 0x00000001u;
}
inline void AppMultiplier::clear_has_package_name() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void AppMultiplier::clear_package_name() {
  package_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_package_name();
}
inline const ::std::string& AppMultiplier::package_name() const {
  // @@protoc_insertion_point(field_get:cn.kylinos.kmre.kmrecore.AppMultiplier.package_name)
  return package_name_.GetNoArena();
}
inline void AppMultiplier::set_package_name(const ::std::string& value) {
  set_has_package_name();
  package_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:cn.kylinos.kmre.kmrecore.AppMultiplier.package_name)
}
#if LANG_CXX11
inline void AppMultiplier::set_package_name(::std::string&& value) {
  set_has_package_name();
  package_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:cn.kylinos.kmre.kmrecore.AppMultiplier.package_name)
}
#endif
inline void AppMultiplier::set_package_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_package_name();
  package_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:cn.kylinos.kmre.kmrecore.AppMultiplier.package_name)
}
inline void AppMultiplier::set_package_name(const char* value, size_t size) {
  set_has_package_name();
  package_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:cn.kylinos.kmre.kmrecore.AppMultiplier.package_name)
}
inline ::std::string* AppMultiplier::mutable_package_name() {
  set_has_package_name();
  // @@protoc_insertion_point(field_mutable:cn.kylinos.kmre.kmrecore.AppMultiplier.package_name)
  return package_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* AppMultiplier::release_package_name() {
  // @@protoc_insertion_point(field_release:cn.kylinos.kmre.kmrecore.AppMultiplier.package_name)
  if (!has_package_name()) {
    return NULL;
  }
  clear_has_package_name();
  return package_name_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void AppMultiplier::set_allocated_package_name(::std::string* package_name) {
  if (package_name != NULL) {
    set_has_package_name();
  } else {
    clear_has_package_name();
  }
  package_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), package_name);
  // @@protoc_insertion_point(field_set_allocated:cn.kylinos.kmre.kmrecore.AppMultiplier.package_name)
}

// required int32 multiplier = 2;
inline bool AppMultiplier::has_multiplier() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void AppMultiplier::set_has_multiplier() {
  _has_bits_[0] |= 0x00000004u;
}
inline void AppMultiplier::clear_has_multiplier() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void AppMultiplier::clear_multiplier() {
  multiplier_ = 0;
  clear_has_multiplier();
}
inline ::google::protobuf::int32 AppMultiplier::multiplier() const {
  // @@protoc_insertion_point(field_get:cn.kylinos.kmre.kmrecore.AppMultiplier.multiplier)
  return multiplier_;
}
inline void AppMultiplier::set_multiplier(::google::protobuf::int32 value) {
  set_has_multiplier();
  multiplier_ = value;
  // @@protoc_insertion_point(field_set:cn.kylinos.kmre.kmrecore.AppMultiplier.multiplier)
}

// optional string info = 3;
inline bool AppMultiplier::has_info() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void AppMultiplier::set_has_info() {
  _has_bits_[0] |= 0x00000002u;
}
inline void AppMultiplier::clear_has_info() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void AppMultiplier::clear_info() {
  info_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_info();
}
inline const ::std::string& AppMultiplier::info() const {
  // @@protoc_insertion_point(field_get:cn.kylinos.kmre.kmrecore.AppMultiplier.info)
  return info_.GetNoArena();
}
inline void AppMultiplier::set_info(const ::std::string& value) {
  set_has_info();
  info_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:cn.kylinos.kmre.kmrecore.AppMultiplier.info)
}
#if LANG_CXX11
inline void AppMultiplier::set_info(::std::string&& value) {
  set_has_info();
  info_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:cn.kylinos.kmre.kmrecore.AppMultiplier.info)
}
#endif
inline void AppMultiplier::set_info(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_info();
  info_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:cn.kylinos.kmre.kmrecore.AppMultiplier.info)
}
inline void AppMultiplier::set_info(const char* value, size_t size) {
  set_has_info();
  info_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:cn.kylinos.kmre.kmrecore.AppMultiplier.info)
}
inline ::std::string* AppMultiplier::mutable_info() {
  set_has_info();
  // @@protoc_insertion_point(field_mutable:cn.kylinos.kmre.kmrecore.AppMultiplier.info)
  return info_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* AppMultiplier::release_info() {
  // @@protoc_insertion_point(field_release:cn.kylinos.kmre.kmrecore.AppMultiplier.info)
  if (!has_info()) {
    return NULL;
  }
  clear_has_info();
  return info_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void AppMultiplier::set_allocated_info(::std::string* info) {
  if (info != NULL) {
    set_has_info();
  } else {
    clear_has_info();
  }
  info_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), info);
  // @@protoc_insertion_point(field_set_allocated:cn.kylinos.kmre.kmrecore.AppMultiplier.info)
}

// -------------------------------------------------------------------

// AppMultiplierList

// repeated .cn.kylinos.kmre.kmrecore.AppMultiplier item = 1;
inline int AppMultiplierList::item_size() const {
  return item_.size();
}
inline void AppMultiplierList::clear_item() {
  item_.Clear();
}
inline ::cn::kylinos::kmre::kmrecore::AppMultiplier* AppMultiplierList::mutable_item(int index) {
  // @@protoc_insertion_point(field_mutable:cn.kylinos.kmre.kmrecore.AppMultiplierList.item)
  return item_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::cn::kylinos::kmre::kmrecore::AppMultiplier >*
AppMultiplierList::mutable_item() {
  // @@protoc_insertion_point(field_mutable_list:cn.kylinos.kmre.kmrecore.AppMultiplierList.item)
  return &item_;
}
inline const ::cn::kylinos::kmre::kmrecore::AppMultiplier& AppMultiplierList::item(int index) const {
  // @@protoc_insertion_point(field_get:cn.kylinos.kmre.kmrecore.AppMultiplierList.item)
  return item_.Get(index);
}
inline ::cn::kylinos::kmre::kmrecore::AppMultiplier* AppMultiplierList::add_item() {
  // @@protoc_insertion_point(field_add:cn.kylinos.kmre.kmrecore.AppMultiplierList.item)
  return item_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::cn::kylinos::kmre::kmrecore::AppMultiplier >&
AppMultiplierList::item() const {
  // @@protoc_insertion_point(field_list:cn.kylinos.kmre.kmrecore.AppMultiplierList.item)
  return item_;
}

// required int32 size = 2;
inline bool AppMultiplierList::has_size() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void AppMultiplierList::set_has_size() {
  _has_bits_[0] |= 0x00000001u;
}
inline void AppMultiplierList::clear_has_size() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void AppMultiplierList::clear_size() {
  size_ = 0;
  clear_has_size();
}
inline ::google::protobuf::int32 AppMultiplierList::size() const {
  // @@protoc_insertion_point(field_get:cn.kylinos.kmre.kmrecore.AppMultiplierList.size)
  return size_;
}
inline void AppMultiplierList::set_size(::google::protobuf::int32 value) {
  set_has_size();
  size_ = value;
  // @@protoc_insertion_point(field_set:cn.kylinos.kmre.kmrecore.AppMultiplierList.size)
}

// -------------------------------------------------------------------

// Info

// required string package_name = 1;
inline bool Info::has_package_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Info::set_has_package_name() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Info::clear_has_package_name() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Info::clear_package_name() {
  package_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_package_name();
}
inline const ::std::string& Info::package_name() const {
  // @@protoc_insertion_point(field_get:cn.kylinos.kmre.kmrecore.Info.package_name)
  return package_name_.GetNoArena();
}
inline void Info::set_package_name(const ::std::string& value) {
  set_has_package_name();
  package_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:cn.kylinos.kmre.kmrecore.Info.package_name)
}
#if LANG_CXX11
inline void Info::set_package_name(::std::string&& value) {
  set_has_package_name();
  package_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:cn.kylinos.kmre.kmrecore.Info.package_name)
}
#endif
inline void Info::set_package_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_package_name();
  package_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:cn.kylinos.kmre.kmrecore.Info.package_name)
}
inline void Info::set_package_name(const char* value, size_t size) {
  set_has_package_name();
  package_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:cn.kylinos.kmre.kmrecore.Info.package_name)
}
inline ::std::string* Info::mutable_package_name() {
  set_has_package_name();
  // @@protoc_insertion_point(field_mutable:cn.kylinos.kmre.kmrecore.Info.package_name)
  return package_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Info::release_package_name() {
  // @@protoc_insertion_point(field_release:cn.kylinos.kmre.kmrecore.Info.package_name)
  if (!has_package_name()) {
    return NULL;
  }
  clear_has_package_name();
  return package_name_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Info::set_allocated_package_name(::std::string* package_name) {
  if (package_name != NULL) {
    set_has_package_name();
  } else {
    clear_has_package_name();
  }
  package_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), package_name);
  // @@protoc_insertion_point(field_set_allocated:cn.kylinos.kmre.kmrecore.Info.package_name)
}

// optional int32 value1 = 2;
inline bool Info::has_value1() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void Info::set_has_value1() {
  _has_bits_[0] |= 0x00000008u;
}
inline void Info::clear_has_value1() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void Info::clear_value1() {
  value1_ = 0;
  clear_has_value1();
}
inline ::google::protobuf::int32 Info::value1() const {
  // @@protoc_insertion_point(field_get:cn.kylinos.kmre.kmrecore.Info.value1)
  return value1_;
}
inline void Info::set_value1(::google::protobuf::int32 value) {
  set_has_value1();
  value1_ = value;
  // @@protoc_insertion_point(field_set:cn.kylinos.kmre.kmrecore.Info.value1)
}

// optional int32 value2 = 3;
inline bool Info::has_value2() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void Info::set_has_value2() {
  _has_bits_[0] |= 0x00000010u;
}
inline void Info::clear_has_value2() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void Info::clear_value2() {
  value2_ = 0;
  clear_has_value2();
}
inline ::google::protobuf::int32 Info::value2() const {
  // @@protoc_insertion_point(field_get:cn.kylinos.kmre.kmrecore.Info.value2)
  return value2_;
}
inline void Info::set_value2(::google::protobuf::int32 value) {
  set_has_value2();
  value2_ = value;
  // @@protoc_insertion_point(field_set:cn.kylinos.kmre.kmrecore.Info.value2)
}

// optional string value3 = 4;
inline bool Info::has_value3() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Info::set_has_value3() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Info::clear_has_value3() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Info::clear_value3() {
  value3_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_value3();
}
inline const ::std::string& Info::value3() const {
  // @@protoc_insertion_point(field_get:cn.kylinos.kmre.kmrecore.Info.value3)
  return value3_.GetNoArena();
}
inline void Info::set_value3(const ::std::string& value) {
  set_has_value3();
  value3_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:cn.kylinos.kmre.kmrecore.Info.value3)
}
#if LANG_CXX11
inline void Info::set_value3(::std::string&& value) {
  set_has_value3();
  value3_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:cn.kylinos.kmre.kmrecore.Info.value3)
}
#endif
inline void Info::set_value3(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_value3();
  value3_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:cn.kylinos.kmre.kmrecore.Info.value3)
}
inline void Info::set_value3(const char* value, size_t size) {
  set_has_value3();
  value3_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:cn.kylinos.kmre.kmrecore.Info.value3)
}
inline ::std::string* Info::mutable_value3() {
  set_has_value3();
  // @@protoc_insertion_point(field_mutable:cn.kylinos.kmre.kmrecore.Info.value3)
  return value3_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Info::release_value3() {
  // @@protoc_insertion_point(field_release:cn.kylinos.kmre.kmrecore.Info.value3)
  if (!has_value3()) {
    return NULL;
  }
  clear_has_value3();
  return value3_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Info::set_allocated_value3(::std::string* value3) {
  if (value3 != NULL) {
    set_has_value3();
  } else {
    clear_has_value3();
  }
  value3_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value3);
  // @@protoc_insertion_point(field_set_allocated:cn.kylinos.kmre.kmrecore.Info.value3)
}

// optional string value4 = 5;
inline bool Info::has_value4() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Info::set_has_value4() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Info::clear_has_value4() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Info::clear_value4() {
  value4_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_value4();
}
inline const ::std::string& Info::value4() const {
  // @@protoc_insertion_point(field_get:cn.kylinos.kmre.kmrecore.Info.value4)
  return value4_.GetNoArena();
}
inline void Info::set_value4(const ::std::string& value) {
  set_has_value4();
  value4_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:cn.kylinos.kmre.kmrecore.Info.value4)
}
#if LANG_CXX11
inline void Info::set_value4(::std::string&& value) {
  set_has_value4();
  value4_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:cn.kylinos.kmre.kmrecore.Info.value4)
}
#endif
inline void Info::set_value4(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_value4();
  value4_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:cn.kylinos.kmre.kmrecore.Info.value4)
}
inline void Info::set_value4(const char* value, size_t size) {
  set_has_value4();
  value4_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:cn.kylinos.kmre.kmrecore.Info.value4)
}
inline ::std::string* Info::mutable_value4() {
  set_has_value4();
  // @@protoc_insertion_point(field_mutable:cn.kylinos.kmre.kmrecore.Info.value4)
  return value4_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Info::release_value4() {
  // @@protoc_insertion_point(field_release:cn.kylinos.kmre.kmrecore.Info.value4)
  if (!has_value4()) {
    return NULL;
  }
  clear_has_value4();
  return value4_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Info::set_allocated_value4(::std::string* value4) {
  if (value4 != NULL) {
    set_has_value4();
  } else {
    clear_has_value4();
  }
  value4_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value4);
  // @@protoc_insertion_point(field_set_allocated:cn.kylinos.kmre.kmrecore.Info.value4)
}

// -------------------------------------------------------------------

// GetInfoList

// repeated .cn.kylinos.kmre.kmrecore.Info item = 1;
inline int GetInfoList::item_size() const {
  return item_.size();
}
inline void GetInfoList::clear_item() {
  item_.Clear();
}
inline ::cn::kylinos::kmre::kmrecore::Info* GetInfoList::mutable_item(int index) {
  // @@protoc_insertion_point(field_mutable:cn.kylinos.kmre.kmrecore.GetInfoList.item)
  return item_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::cn::kylinos::kmre::kmrecore::Info >*
GetInfoList::mutable_item() {
  // @@protoc_insertion_point(field_mutable_list:cn.kylinos.kmre.kmrecore.GetInfoList.item)
  return &item_;
}
inline const ::cn::kylinos::kmre::kmrecore::Info& GetInfoList::item(int index) const {
  // @@protoc_insertion_point(field_get:cn.kylinos.kmre.kmrecore.GetInfoList.item)
  return item_.Get(index);
}
inline ::cn::kylinos::kmre::kmrecore::Info* GetInfoList::add_item() {
  // @@protoc_insertion_point(field_add:cn.kylinos.kmre.kmrecore.GetInfoList.item)
  return item_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::cn::kylinos::kmre::kmrecore::Info >&
GetInfoList::item() const {
  // @@protoc_insertion_point(field_list:cn.kylinos.kmre.kmrecore.GetInfoList.item)
  return item_;
}

// required string type = 2;
inline bool GetInfoList::has_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GetInfoList::set_has_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GetInfoList::clear_has_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GetInfoList::clear_type() {
  type_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_type();
}
inline const ::std::string& GetInfoList::type() const {
  // @@protoc_insertion_point(field_get:cn.kylinos.kmre.kmrecore.GetInfoList.type)
  return type_.GetNoArena();
}
inline void GetInfoList::set_type(const ::std::string& value) {
  set_has_type();
  type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:cn.kylinos.kmre.kmrecore.GetInfoList.type)
}
#if LANG_CXX11
inline void GetInfoList::set_type(::std::string&& value) {
  set_has_type();
  type_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:cn.kylinos.kmre.kmrecore.GetInfoList.type)
}
#endif
inline void GetInfoList::set_type(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_type();
  type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:cn.kylinos.kmre.kmrecore.GetInfoList.type)
}
inline void GetInfoList::set_type(const char* value, size_t size) {
  set_has_type();
  type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:cn.kylinos.kmre.kmrecore.GetInfoList.type)
}
inline ::std::string* GetInfoList::mutable_type() {
  set_has_type();
  // @@protoc_insertion_point(field_mutable:cn.kylinos.kmre.kmrecore.GetInfoList.type)
  return type_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* GetInfoList::release_type() {
  // @@protoc_insertion_point(field_release:cn.kylinos.kmre.kmrecore.GetInfoList.type)
  if (!has_type()) {
    return NULL;
  }
  clear_has_type();
  return type_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GetInfoList::set_allocated_type(::std::string* type) {
  if (type != NULL) {
    set_has_type();
  } else {
    clear_has_type();
  }
  type_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), type);
  // @@protoc_insertion_point(field_set_allocated:cn.kylinos.kmre.kmrecore.GetInfoList.type)
}

// required int32 size = 3;
inline bool GetInfoList::has_size() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GetInfoList::set_has_size() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GetInfoList::clear_has_size() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GetInfoList::clear_size() {
  size_ = 0;
  clear_has_size();
}
inline ::google::protobuf::int32 GetInfoList::size() const {
  // @@protoc_insertion_point(field_get:cn.kylinos.kmre.kmrecore.GetInfoList.size)
  return size_;
}
inline void GetInfoList::set_size(::google::protobuf::int32 value) {
  set_has_size();
  size_ = value;
  // @@protoc_insertion_point(field_set:cn.kylinos.kmre.kmrecore.GetInfoList.size)
}

// -------------------------------------------------------------------

// ResponseInfo

// required int32 event_id = 1;
inline bool ResponseInfo::has_event_id() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void ResponseInfo::set_has_event_id() {
  _has_bits_[0] |= 0x00000008u;
}
inline void ResponseInfo::clear_has_event_id() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void ResponseInfo::clear_event_id() {
  event_id_ = 0;
  clear_has_event_id();
}
inline ::google::protobuf::int32 ResponseInfo::event_id() const {
  // @@protoc_insertion_point(field_get:cn.kylinos.kmre.kmrecore.ResponseInfo.event_id)
  return event_id_;
}
inline void ResponseInfo::set_event_id(::google::protobuf::int32 value) {
  set_has_event_id();
  event_id_ = value;
  // @@protoc_insertion_point(field_set:cn.kylinos.kmre.kmrecore.ResponseInfo.event_id)
}

// required string package_name = 2;
inline bool ResponseInfo::has_package_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ResponseInfo::set_has_package_name() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ResponseInfo::clear_has_package_name() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ResponseInfo::clear_package_name() {
  package_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_package_name();
}
inline const ::std::string& ResponseInfo::package_name() const {
  // @@protoc_insertion_point(field_get:cn.kylinos.kmre.kmrecore.ResponseInfo.package_name)
  return package_name_.GetNoArena();
}
inline void ResponseInfo::set_package_name(const ::std::string& value) {
  set_has_package_name();
  package_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:cn.kylinos.kmre.kmrecore.ResponseInfo.package_name)
}
#if LANG_CXX11
inline void ResponseInfo::set_package_name(::std::string&& value) {
  set_has_package_name();
  package_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:cn.kylinos.kmre.kmrecore.ResponseInfo.package_name)
}
#endif
inline void ResponseInfo::set_package_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_package_name();
  package_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:cn.kylinos.kmre.kmrecore.ResponseInfo.package_name)
}
inline void ResponseInfo::set_package_name(const char* value, size_t size) {
  set_has_package_name();
  package_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:cn.kylinos.kmre.kmrecore.ResponseInfo.package_name)
}
inline ::std::string* ResponseInfo::mutable_package_name() {
  set_has_package_name();
  // @@protoc_insertion_point(field_mutable:cn.kylinos.kmre.kmrecore.ResponseInfo.package_name)
  return package_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ResponseInfo::release_package_name() {
  // @@protoc_insertion_point(field_release:cn.kylinos.kmre.kmrecore.ResponseInfo.package_name)
  if (!has_package_name()) {
    return NULL;
  }
  clear_has_package_name();
  return package_name_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ResponseInfo::set_allocated_package_name(::std::string* package_name) {
  if (package_name != NULL) {
    set_has_package_name();
  } else {
    clear_has_package_name();
  }
  package_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), package_name);
  // @@protoc_insertion_point(field_set_allocated:cn.kylinos.kmre.kmrecore.ResponseInfo.package_name)
}

// required string category = 3;
inline bool ResponseInfo::has_category() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ResponseInfo::set_has_category() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ResponseInfo::clear_has_category() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ResponseInfo::clear_category() {
  category_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_category();
}
inline const ::std::string& ResponseInfo::category() const {
  // @@protoc_insertion_point(field_get:cn.kylinos.kmre.kmrecore.ResponseInfo.category)
  return category_.GetNoArena();
}
inline void ResponseInfo::set_category(const ::std::string& value) {
  set_has_category();
  category_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:cn.kylinos.kmre.kmrecore.ResponseInfo.category)
}
#if LANG_CXX11
inline void ResponseInfo::set_category(::std::string&& value) {
  set_has_category();
  category_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:cn.kylinos.kmre.kmrecore.ResponseInfo.category)
}
#endif
inline void ResponseInfo::set_category(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_category();
  category_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:cn.kylinos.kmre.kmrecore.ResponseInfo.category)
}
inline void ResponseInfo::set_category(const char* value, size_t size) {
  set_has_category();
  category_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:cn.kylinos.kmre.kmrecore.ResponseInfo.category)
}
inline ::std::string* ResponseInfo::mutable_category() {
  set_has_category();
  // @@protoc_insertion_point(field_mutable:cn.kylinos.kmre.kmrecore.ResponseInfo.category)
  return category_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ResponseInfo::release_category() {
  // @@protoc_insertion_point(field_release:cn.kylinos.kmre.kmrecore.ResponseInfo.category)
  if (!has_category()) {
    return NULL;
  }
  clear_has_category();
  return category_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ResponseInfo::set_allocated_category(::std::string* category) {
  if (category != NULL) {
    set_has_category();
  } else {
    clear_has_category();
  }
  category_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), category);
  // @@protoc_insertion_point(field_set_allocated:cn.kylinos.kmre.kmrecore.ResponseInfo.category)
}

// required int32 ret = 4;
inline bool ResponseInfo::has_ret() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void ResponseInfo::set_has_ret() {
  _has_bits_[0] |= 0x00000010u;
}
inline void ResponseInfo::clear_has_ret() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void ResponseInfo::clear_ret() {
  ret_ = 0;
  clear_has_ret();
}
inline ::google::protobuf::int32 ResponseInfo::ret() const {
  // @@protoc_insertion_point(field_get:cn.kylinos.kmre.kmrecore.ResponseInfo.ret)
  return ret_;
}
inline void ResponseInfo::set_ret(::google::protobuf::int32 value) {
  set_has_ret();
  ret_ = value;
  // @@protoc_insertion_point(field_set:cn.kylinos.kmre.kmrecore.ResponseInfo.ret)
}

// optional string info = 5;
inline bool ResponseInfo::has_info() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ResponseInfo::set_has_info() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ResponseInfo::clear_has_info() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ResponseInfo::clear_info() {
  info_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_info();
}
inline const ::std::string& ResponseInfo::info() const {
  // @@protoc_insertion_point(field_get:cn.kylinos.kmre.kmrecore.ResponseInfo.info)
  return info_.GetNoArena();
}
inline void ResponseInfo::set_info(const ::std::string& value) {
  set_has_info();
  info_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:cn.kylinos.kmre.kmrecore.ResponseInfo.info)
}
#if LANG_CXX11
inline void ResponseInfo::set_info(::std::string&& value) {
  set_has_info();
  info_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:cn.kylinos.kmre.kmrecore.ResponseInfo.info)
}
#endif
inline void ResponseInfo::set_info(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_info();
  info_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:cn.kylinos.kmre.kmrecore.ResponseInfo.info)
}
inline void ResponseInfo::set_info(const char* value, size_t size) {
  set_has_info();
  info_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:cn.kylinos.kmre.kmrecore.ResponseInfo.info)
}
inline ::std::string* ResponseInfo::mutable_info() {
  set_has_info();
  // @@protoc_insertion_point(field_mutable:cn.kylinos.kmre.kmrecore.ResponseInfo.info)
  return info_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ResponseInfo::release_info() {
  // @@protoc_insertion_point(field_release:cn.kylinos.kmre.kmrecore.ResponseInfo.info)
  if (!has_info()) {
    return NULL;
  }
  clear_has_info();
  return info_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ResponseInfo::set_allocated_info(::std::string* info) {
  if (info != NULL) {
    set_has_info();
  } else {
    clear_has_info();
  }
  info_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), info);
  // @@protoc_insertion_point(field_set_allocated:cn.kylinos.kmre.kmrecore.ResponseInfo.info)
}

// -------------------------------------------------------------------

// MultiplierSwitch

// required int32 event_id = 1;
inline bool MultiplierSwitch::has_event_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void MultiplierSwitch::set_has_event_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void MultiplierSwitch::clear_has_event_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void MultiplierSwitch::clear_event_id() {
  event_id_ = 0;
  clear_has_event_id();
}
inline ::google::protobuf::int32 MultiplierSwitch::event_id() const {
  // @@protoc_insertion_point(field_get:cn.kylinos.kmre.kmrecore.MultiplierSwitch.event_id)
  return event_id_;
}
inline void MultiplierSwitch::set_event_id(::google::protobuf::int32 value) {
  set_has_event_id();
  event_id_ = value;
  // @@protoc_insertion_point(field_set:cn.kylinos.kmre.kmrecore.MultiplierSwitch.event_id)
}

// required string package_name = 2;
inline bool MultiplierSwitch::has_package_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MultiplierSwitch::set_has_package_name() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MultiplierSwitch::clear_has_package_name() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MultiplierSwitch::clear_package_name() {
  package_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_package_name();
}
inline const ::std::string& MultiplierSwitch::package_name() const {
  // @@protoc_insertion_point(field_get:cn.kylinos.kmre.kmrecore.MultiplierSwitch.package_name)
  return package_name_.GetNoArena();
}
inline void MultiplierSwitch::set_package_name(const ::std::string& value) {
  set_has_package_name();
  package_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:cn.kylinos.kmre.kmrecore.MultiplierSwitch.package_name)
}
#if LANG_CXX11
inline void MultiplierSwitch::set_package_name(::std::string&& value) {
  set_has_package_name();
  package_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:cn.kylinos.kmre.kmrecore.MultiplierSwitch.package_name)
}
#endif
inline void MultiplierSwitch::set_package_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_package_name();
  package_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:cn.kylinos.kmre.kmrecore.MultiplierSwitch.package_name)
}
inline void MultiplierSwitch::set_package_name(const char* value, size_t size) {
  set_has_package_name();
  package_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:cn.kylinos.kmre.kmrecore.MultiplierSwitch.package_name)
}
inline ::std::string* MultiplierSwitch::mutable_package_name() {
  set_has_package_name();
  // @@protoc_insertion_point(field_mutable:cn.kylinos.kmre.kmrecore.MultiplierSwitch.package_name)
  return package_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* MultiplierSwitch::release_package_name() {
  // @@protoc_insertion_point(field_release:cn.kylinos.kmre.kmrecore.MultiplierSwitch.package_name)
  if (!has_package_name()) {
    return NULL;
  }
  clear_has_package_name();
  return package_name_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MultiplierSwitch::set_allocated_package_name(::std::string* package_name) {
  if (package_name != NULL) {
    set_has_package_name();
  } else {
    clear_has_package_name();
  }
  package_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), package_name);
  // @@protoc_insertion_point(field_set_allocated:cn.kylinos.kmre.kmrecore.MultiplierSwitch.package_name)
}

// required bool enable = 3;
inline bool MultiplierSwitch::has_enable() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void MultiplierSwitch::set_has_enable() {
  _has_bits_[0] |= 0x00000004u;
}
inline void MultiplierSwitch::clear_has_enable() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void MultiplierSwitch::clear_enable() {
  enable_ = false;
  clear_has_enable();
}
inline bool MultiplierSwitch::enable() const {
  // @@protoc_insertion_point(field_get:cn.kylinos.kmre.kmrecore.MultiplierSwitch.enable)
  return enable_;
}
inline void MultiplierSwitch::set_enable(bool value) {
  set_has_enable();
  enable_ = value;
  // @@protoc_insertion_point(field_set:cn.kylinos.kmre.kmrecore.MultiplierSwitch.enable)
}

// -------------------------------------------------------------------

// LinkOpen

// required string url = 1;
inline bool LinkOpen::has_url() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void LinkOpen::set_has_url() {
  _has_bits_[0] |= 0x00000001u;
}
inline void LinkOpen::clear_has_url() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void LinkOpen::clear_url() {
  url_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_url();
}
inline const ::std::string& LinkOpen::url() const {
  // @@protoc_insertion_point(field_get:cn.kylinos.kmre.kmrecore.LinkOpen.url)
  return url_.GetNoArena();
}
inline void LinkOpen::set_url(const ::std::string& value) {
  set_has_url();
  url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:cn.kylinos.kmre.kmrecore.LinkOpen.url)
}
#if LANG_CXX11
inline void LinkOpen::set_url(::std::string&& value) {
  set_has_url();
  url_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:cn.kylinos.kmre.kmrecore.LinkOpen.url)
}
#endif
inline void LinkOpen::set_url(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_url();
  url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:cn.kylinos.kmre.kmrecore.LinkOpen.url)
}
inline void LinkOpen::set_url(const char* value, size_t size) {
  set_has_url();
  url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:cn.kylinos.kmre.kmrecore.LinkOpen.url)
}
inline ::std::string* LinkOpen::mutable_url() {
  set_has_url();
  // @@protoc_insertion_point(field_mutable:cn.kylinos.kmre.kmrecore.LinkOpen.url)
  return url_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* LinkOpen::release_url() {
  // @@protoc_insertion_point(field_release:cn.kylinos.kmre.kmrecore.LinkOpen.url)
  if (!has_url()) {
    return NULL;
  }
  clear_has_url();
  return url_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void LinkOpen::set_allocated_url(::std::string* url) {
  if (url != NULL) {
    set_has_url();
  } else {
    clear_has_url();
  }
  url_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), url);
  // @@protoc_insertion_point(field_set_allocated:cn.kylinos.kmre.kmrecore.LinkOpen.url)
}

// -------------------------------------------------------------------

// UpdatePackageStatus

// required string package_name = 1;
inline bool UpdatePackageStatus::has_package_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void UpdatePackageStatus::set_has_package_name() {
  _has_bits_[0] |= 0x00000001u;
}
inline void UpdatePackageStatus::clear_has_package_name() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void UpdatePackageStatus::clear_package_name() {
  package_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_package_name();
}
inline const ::std::string& UpdatePackageStatus::package_name() const {
  // @@protoc_insertion_point(field_get:cn.kylinos.kmre.kmrecore.UpdatePackageStatus.package_name)
  return package_name_.GetNoArena();
}
inline void UpdatePackageStatus::set_package_name(const ::std::string& value) {
  set_has_package_name();
  package_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:cn.kylinos.kmre.kmrecore.UpdatePackageStatus.package_name)
}
#if LANG_CXX11
inline void UpdatePackageStatus::set_package_name(::std::string&& value) {
  set_has_package_name();
  package_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:cn.kylinos.kmre.kmrecore.UpdatePackageStatus.package_name)
}
#endif
inline void UpdatePackageStatus::set_package_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_package_name();
  package_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:cn.kylinos.kmre.kmrecore.UpdatePackageStatus.package_name)
}
inline void UpdatePackageStatus::set_package_name(const char* value, size_t size) {
  set_has_package_name();
  package_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:cn.kylinos.kmre.kmrecore.UpdatePackageStatus.package_name)
}
inline ::std::string* UpdatePackageStatus::mutable_package_name() {
  set_has_package_name();
  // @@protoc_insertion_point(field_mutable:cn.kylinos.kmre.kmrecore.UpdatePackageStatus.package_name)
  return package_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* UpdatePackageStatus::release_package_name() {
  // @@protoc_insertion_point(field_release:cn.kylinos.kmre.kmrecore.UpdatePackageStatus.package_name)
  if (!has_package_name()) {
    return NULL;
  }
  clear_has_package_name();
  return package_name_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void UpdatePackageStatus::set_allocated_package_name(::std::string* package_name) {
  if (package_name != NULL) {
    set_has_package_name();
  } else {
    clear_has_package_name();
  }
  package_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), package_name);
  // @@protoc_insertion_point(field_set_allocated:cn.kylinos.kmre.kmrecore.UpdatePackageStatus.package_name)
}

// required int32 status = 2;
inline bool UpdatePackageStatus::has_status() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void UpdatePackageStatus::set_has_status() {
  _has_bits_[0] |= 0x00000002u;
}
inline void UpdatePackageStatus::clear_has_status() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void UpdatePackageStatus::clear_status() {
  status_ = 0;
  clear_has_status();
}
inline ::google::protobuf::int32 UpdatePackageStatus::status() const {
  // @@protoc_insertion_point(field_get:cn.kylinos.kmre.kmrecore.UpdatePackageStatus.status)
  return status_;
}
inline void UpdatePackageStatus::set_status(::google::protobuf::int32 value) {
  set_has_status();
  status_ = value;
  // @@protoc_insertion_point(field_set:cn.kylinos.kmre.kmrecore.UpdatePackageStatus.status)
}

// optional int32 type = 3;
inline bool UpdatePackageStatus::has_type() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void UpdatePackageStatus::set_has_type() {
  _has_bits_[0] |= 0x00000004u;
}
inline void UpdatePackageStatus::clear_has_type() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void UpdatePackageStatus::clear_type() {
  type_ = 0;
  clear_has_type();
}
inline ::google::protobuf::int32 UpdatePackageStatus::type() const {
  // @@protoc_insertion_point(field_get:cn.kylinos.kmre.kmrecore.UpdatePackageStatus.type)
  return type_;
}
inline void UpdatePackageStatus::set_type(::google::protobuf::int32 value) {
  set_has_type();
  type_ = value;
  // @@protoc_insertion_point(field_set:cn.kylinos.kmre.kmrecore.UpdatePackageStatus.type)
}

// -------------------------------------------------------------------

// SendSystemProp

// required int32 event_type = 1;
inline bool SendSystemProp::has_event_type() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void SendSystemProp::set_has_event_type() {
  _has_bits_[0] |= 0x00000004u;
}
inline void SendSystemProp::clear_has_event_type() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void SendSystemProp::clear_event_type() {
  event_type_ = 0;
  clear_has_event_type();
}
inline ::google::protobuf::int32 SendSystemProp::event_type() const {
  // @@protoc_insertion_point(field_get:cn.kylinos.kmre.kmrecore.SendSystemProp.event_type)
  return event_type_;
}
inline void SendSystemProp::set_event_type(::google::protobuf::int32 value) {
  set_has_event_type();
  event_type_ = value;
  // @@protoc_insertion_point(field_set:cn.kylinos.kmre.kmrecore.SendSystemProp.event_type)
}

// required string value_field = 2;
inline bool SendSystemProp::has_value_field() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SendSystemProp::set_has_value_field() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SendSystemProp::clear_has_value_field() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SendSystemProp::clear_value_field() {
  value_field_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_value_field();
}
inline const ::std::string& SendSystemProp::value_field() const {
  // @@protoc_insertion_point(field_get:cn.kylinos.kmre.kmrecore.SendSystemProp.value_field)
  return value_field_.GetNoArena();
}
inline void SendSystemProp::set_value_field(const ::std::string& value) {
  set_has_value_field();
  value_field_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:cn.kylinos.kmre.kmrecore.SendSystemProp.value_field)
}
#if LANG_CXX11
inline void SendSystemProp::set_value_field(::std::string&& value) {
  set_has_value_field();
  value_field_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:cn.kylinos.kmre.kmrecore.SendSystemProp.value_field)
}
#endif
inline void SendSystemProp::set_value_field(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_value_field();
  value_field_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:cn.kylinos.kmre.kmrecore.SendSystemProp.value_field)
}
inline void SendSystemProp::set_value_field(const char* value, size_t size) {
  set_has_value_field();
  value_field_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:cn.kylinos.kmre.kmrecore.SendSystemProp.value_field)
}
inline ::std::string* SendSystemProp::mutable_value_field() {
  set_has_value_field();
  // @@protoc_insertion_point(field_mutable:cn.kylinos.kmre.kmrecore.SendSystemProp.value_field)
  return value_field_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SendSystemProp::release_value_field() {
  // @@protoc_insertion_point(field_release:cn.kylinos.kmre.kmrecore.SendSystemProp.value_field)
  if (!has_value_field()) {
    return NULL;
  }
  clear_has_value_field();
  return value_field_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SendSystemProp::set_allocated_value_field(::std::string* value_field) {
  if (value_field != NULL) {
    set_has_value_field();
  } else {
    clear_has_value_field();
  }
  value_field_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value_field);
  // @@protoc_insertion_point(field_set_allocated:cn.kylinos.kmre.kmrecore.SendSystemProp.value_field)
}

// required string value = 3;
inline bool SendSystemProp::has_value() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SendSystemProp::set_has_value() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SendSystemProp::clear_has_value() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SendSystemProp::clear_value() {
  value_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_value();
}
inline const ::std::string& SendSystemProp::value() const {
  // @@protoc_insertion_point(field_get:cn.kylinos.kmre.kmrecore.SendSystemProp.value)
  return value_.GetNoArena();
}
inline void SendSystemProp::set_value(const ::std::string& value) {
  set_has_value();
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:cn.kylinos.kmre.kmrecore.SendSystemProp.value)
}
#if LANG_CXX11
inline void SendSystemProp::set_value(::std::string&& value) {
  set_has_value();
  value_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:cn.kylinos.kmre.kmrecore.SendSystemProp.value)
}
#endif
inline void SendSystemProp::set_value(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_value();
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:cn.kylinos.kmre.kmrecore.SendSystemProp.value)
}
inline void SendSystemProp::set_value(const char* value, size_t size) {
  set_has_value();
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:cn.kylinos.kmre.kmrecore.SendSystemProp.value)
}
inline ::std::string* SendSystemProp::mutable_value() {
  set_has_value();
  // @@protoc_insertion_point(field_mutable:cn.kylinos.kmre.kmrecore.SendSystemProp.value)
  return value_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SendSystemProp::release_value() {
  // @@protoc_insertion_point(field_release:cn.kylinos.kmre.kmrecore.SendSystemProp.value)
  if (!has_value()) {
    return NULL;
  }
  clear_has_value();
  return value_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SendSystemProp::set_allocated_value(::std::string* value) {
  if (value != NULL) {
    set_has_value();
  } else {
    clear_has_value();
  }
  value_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set_allocated:cn.kylinos.kmre.kmrecore.SendSystemProp.value)
}

// -------------------------------------------------------------------

// EventSequence

// optional .cn.kylinos.kmre.kmrecore.Notification notification = 1;
inline bool EventSequence::has_notification() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void EventSequence::set_has_notification() {
  _has_bits_[0] |= 0x00000001u;
}
inline void EventSequence::clear_has_notification() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void EventSequence::clear_notification() {
  if (notification_ != NULL) notification_->Clear();
  clear_has_notification();
}
inline const ::cn::kylinos::kmre::kmrecore::Notification& EventSequence::_internal_notification() const {
  return *notification_;
}
inline const ::cn::kylinos::kmre::kmrecore::Notification& EventSequence::notification() const {
  const ::cn::kylinos::kmre::kmrecore::Notification* p = notification_;
  // @@protoc_insertion_point(field_get:cn.kylinos.kmre.kmrecore.EventSequence.notification)
  return p != NULL ? *p : *reinterpret_cast<const ::cn::kylinos::kmre::kmrecore::Notification*>(
      &::cn::kylinos::kmre::kmrecore::_Notification_default_instance_);
}
inline ::cn::kylinos::kmre::kmrecore::Notification* EventSequence::release_notification() {
  // @@protoc_insertion_point(field_release:cn.kylinos.kmre.kmrecore.EventSequence.notification)
  clear_has_notification();
  ::cn::kylinos::kmre::kmrecore::Notification* temp = notification_;
  notification_ = NULL;
  return temp;
}
inline ::cn::kylinos::kmre::kmrecore::Notification* EventSequence::mutable_notification() {
  set_has_notification();
  if (notification_ == NULL) {
    auto* p = CreateMaybeMessage<::cn::kylinos::kmre::kmrecore::Notification>(GetArenaNoVirtual());
    notification_ = p;
  }
  // @@protoc_insertion_point(field_mutable:cn.kylinos.kmre.kmrecore.EventSequence.notification)
  return notification_;
}
inline void EventSequence::set_allocated_notification(::cn::kylinos::kmre::kmrecore::Notification* notification) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete notification_;
  }
  if (notification) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      notification = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, notification, submessage_arena);
    }
    set_has_notification();
  } else {
    clear_has_notification();
  }
  notification_ = notification;
  // @@protoc_insertion_point(field_set_allocated:cn.kylinos.kmre.kmrecore.EventSequence.notification)
}

// optional .cn.kylinos.kmre.kmrecore.EventInfo event_info = 2;
inline bool EventSequence::has_event_info() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void EventSequence::set_has_event_info() {
  _has_bits_[0] |= 0x00000002u;
}
inline void EventSequence::clear_has_event_info() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void EventSequence::clear_event_info() {
  if (event_info_ != NULL) event_info_->Clear();
  clear_has_event_info();
}
inline const ::cn::kylinos::kmre::kmrecore::EventInfo& EventSequence::_internal_event_info() const {
  return *event_info_;
}
inline const ::cn::kylinos::kmre::kmrecore::EventInfo& EventSequence::event_info() const {
  const ::cn::kylinos::kmre::kmrecore::EventInfo* p = event_info_;
  // @@protoc_insertion_point(field_get:cn.kylinos.kmre.kmrecore.EventSequence.event_info)
  return p != NULL ? *p : *reinterpret_cast<const ::cn::kylinos::kmre::kmrecore::EventInfo*>(
      &::cn::kylinos::kmre::kmrecore::_EventInfo_default_instance_);
}
inline ::cn::kylinos::kmre::kmrecore::EventInfo* EventSequence::release_event_info() {
  // @@protoc_insertion_point(field_release:cn.kylinos.kmre.kmrecore.EventSequence.event_info)
  clear_has_event_info();
  ::cn::kylinos::kmre::kmrecore::EventInfo* temp = event_info_;
  event_info_ = NULL;
  return temp;
}
inline ::cn::kylinos::kmre::kmrecore::EventInfo* EventSequence::mutable_event_info() {
  set_has_event_info();
  if (event_info_ == NULL) {
    auto* p = CreateMaybeMessage<::cn::kylinos::kmre::kmrecore::EventInfo>(GetArenaNoVirtual());
    event_info_ = p;
  }
  // @@protoc_insertion_point(field_mutable:cn.kylinos.kmre.kmrecore.EventSequence.event_info)
  return event_info_;
}
inline void EventSequence::set_allocated_event_info(::cn::kylinos::kmre::kmrecore::EventInfo* event_info) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete event_info_;
  }
  if (event_info) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      event_info = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, event_info, submessage_arena);
    }
    set_has_event_info();
  } else {
    clear_has_event_info();
  }
  event_info_ = event_info;
  // @@protoc_insertion_point(field_set_allocated:cn.kylinos.kmre.kmrecore.EventSequence.event_info)
}

// optional .cn.kylinos.kmre.kmrecore.LaunchResult launch_result = 3;
inline bool EventSequence::has_launch_result() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void EventSequence::set_has_launch_result() {
  _has_bits_[0] |= 0x00000004u;
}
inline void EventSequence::clear_has_launch_result() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void EventSequence::clear_launch_result() {
  if (launch_result_ != NULL) launch_result_->Clear();
  clear_has_launch_result();
}
inline const ::cn::kylinos::kmre::kmrecore::LaunchResult& EventSequence::_internal_launch_result() const {
  return *launch_result_;
}
inline const ::cn::kylinos::kmre::kmrecore::LaunchResult& EventSequence::launch_result() const {
  const ::cn::kylinos::kmre::kmrecore::LaunchResult* p = launch_result_;
  // @@protoc_insertion_point(field_get:cn.kylinos.kmre.kmrecore.EventSequence.launch_result)
  return p != NULL ? *p : *reinterpret_cast<const ::cn::kylinos::kmre::kmrecore::LaunchResult*>(
      &::cn::kylinos::kmre::kmrecore::_LaunchResult_default_instance_);
}
inline ::cn::kylinos::kmre::kmrecore::LaunchResult* EventSequence::release_launch_result() {
  // @@protoc_insertion_point(field_release:cn.kylinos.kmre.kmrecore.EventSequence.launch_result)
  clear_has_launch_result();
  ::cn::kylinos::kmre::kmrecore::LaunchResult* temp = launch_result_;
  launch_result_ = NULL;
  return temp;
}
inline ::cn::kylinos::kmre::kmrecore::LaunchResult* EventSequence::mutable_launch_result() {
  set_has_launch_result();
  if (launch_result_ == NULL) {
    auto* p = CreateMaybeMessage<::cn::kylinos::kmre::kmrecore::LaunchResult>(GetArenaNoVirtual());
    launch_result_ = p;
  }
  // @@protoc_insertion_point(field_mutable:cn.kylinos.kmre.kmrecore.EventSequence.launch_result)
  return launch_result_;
}
inline void EventSequence::set_allocated_launch_result(::cn::kylinos::kmre::kmrecore::LaunchResult* launch_result) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete launch_result_;
  }
  if (launch_result) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      launch_result = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, launch_result, submessage_arena);
    }
    set_has_launch_result();
  } else {
    clear_has_launch_result();
  }
  launch_result_ = launch_result;
  // @@protoc_insertion_point(field_set_allocated:cn.kylinos.kmre.kmrecore.EventSequence.launch_result)
}

// optional .cn.kylinos.kmre.kmrecore.CloseResult close_result = 4;
inline bool EventSequence::has_close_result() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void EventSequence::set_has_close_result() {
  _has_bits_[0] |= 0x00000008u;
}
inline void EventSequence::clear_has_close_result() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void EventSequence::clear_close_result() {
  if (close_result_ != NULL) close_result_->Clear();
  clear_has_close_result();
}
inline const ::cn::kylinos::kmre::kmrecore::CloseResult& EventSequence::_internal_close_result() const {
  return *close_result_;
}
inline const ::cn::kylinos::kmre::kmrecore::CloseResult& EventSequence::close_result() const {
  const ::cn::kylinos::kmre::kmrecore::CloseResult* p = close_result_;
  // @@protoc_insertion_point(field_get:cn.kylinos.kmre.kmrecore.EventSequence.close_result)
  return p != NULL ? *p : *reinterpret_cast<const ::cn::kylinos::kmre::kmrecore::CloseResult*>(
      &::cn::kylinos::kmre::kmrecore::_CloseResult_default_instance_);
}
inline ::cn::kylinos::kmre::kmrecore::CloseResult* EventSequence::release_close_result() {
  // @@protoc_insertion_point(field_release:cn.kylinos.kmre.kmrecore.EventSequence.close_result)
  clear_has_close_result();
  ::cn::kylinos::kmre::kmrecore::CloseResult* temp = close_result_;
  close_result_ = NULL;
  return temp;
}
inline ::cn::kylinos::kmre::kmrecore::CloseResult* EventSequence::mutable_close_result() {
  set_has_close_result();
  if (close_result_ == NULL) {
    auto* p = CreateMaybeMessage<::cn::kylinos::kmre::kmrecore::CloseResult>(GetArenaNoVirtual());
    close_result_ = p;
  }
  // @@protoc_insertion_point(field_mutable:cn.kylinos.kmre.kmrecore.EventSequence.close_result)
  return close_result_;
}
inline void EventSequence::set_allocated_close_result(::cn::kylinos::kmre::kmrecore::CloseResult* close_result) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete close_result_;
  }
  if (close_result) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      close_result = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, close_result, submessage_arena);
    }
    set_has_close_result();
  } else {
    clear_has_close_result();
  }
  close_result_ = close_result;
  // @@protoc_insertion_point(field_set_allocated:cn.kylinos.kmre.kmrecore.EventSequence.close_result)
}

// optional .cn.kylinos.kmre.kmrecore.SetClipboard set_clipboard = 5;
inline bool EventSequence::has_set_clipboard() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void EventSequence::set_has_set_clipboard() {
  _has_bits_[0] |= 0x00000010u;
}
inline void EventSequence::clear_has_set_clipboard() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void EventSequence::clear_set_clipboard() {
  if (set_clipboard_ != NULL) set_clipboard_->Clear();
  clear_has_set_clipboard();
}
inline const ::cn::kylinos::kmre::kmrecore::SetClipboard& EventSequence::_internal_set_clipboard() const {
  return *set_clipboard_;
}
inline const ::cn::kylinos::kmre::kmrecore::SetClipboard& EventSequence::set_clipboard() const {
  const ::cn::kylinos::kmre::kmrecore::SetClipboard* p = set_clipboard_;
  // @@protoc_insertion_point(field_get:cn.kylinos.kmre.kmrecore.EventSequence.set_clipboard)
  return p != NULL ? *p : *reinterpret_cast<const ::cn::kylinos::kmre::kmrecore::SetClipboard*>(
      &::cn::kylinos::kmre::kmrecore::_SetClipboard_default_instance_);
}
inline ::cn::kylinos::kmre::kmrecore::SetClipboard* EventSequence::release_set_clipboard() {
  // @@protoc_insertion_point(field_release:cn.kylinos.kmre.kmrecore.EventSequence.set_clipboard)
  clear_has_set_clipboard();
  ::cn::kylinos::kmre::kmrecore::SetClipboard* temp = set_clipboard_;
  set_clipboard_ = NULL;
  return temp;
}
inline ::cn::kylinos::kmre::kmrecore::SetClipboard* EventSequence::mutable_set_clipboard() {
  set_has_set_clipboard();
  if (set_clipboard_ == NULL) {
    auto* p = CreateMaybeMessage<::cn::kylinos::kmre::kmrecore::SetClipboard>(GetArenaNoVirtual());
    set_clipboard_ = p;
  }
  // @@protoc_insertion_point(field_mutable:cn.kylinos.kmre.kmrecore.EventSequence.set_clipboard)
  return set_clipboard_;
}
inline void EventSequence::set_allocated_set_clipboard(::cn::kylinos::kmre::kmrecore::SetClipboard* set_clipboard) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete set_clipboard_;
  }
  if (set_clipboard) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      set_clipboard = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, set_clipboard, submessage_arena);
    }
    set_has_set_clipboard();
  } else {
    clear_has_set_clipboard();
  }
  set_clipboard_ = set_clipboard;
  // @@protoc_insertion_point(field_set_allocated:cn.kylinos.kmre.kmrecore.EventSequence.set_clipboard)
}

// optional .cn.kylinos.kmre.kmrecore.VirtualScreenFocusResult focus_result = 6;
inline bool EventSequence::has_focus_result() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void EventSequence::set_has_focus_result() {
  _has_bits_[0] |= 0x00000020u;
}
inline void EventSequence::clear_has_focus_result() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void EventSequence::clear_focus_result() {
  if (focus_result_ != NULL) focus_result_->Clear();
  clear_has_focus_result();
}
inline const ::cn::kylinos::kmre::kmrecore::VirtualScreenFocusResult& EventSequence::_internal_focus_result() const {
  return *focus_result_;
}
inline const ::cn::kylinos::kmre::kmrecore::VirtualScreenFocusResult& EventSequence::focus_result() const {
  const ::cn::kylinos::kmre::kmrecore::VirtualScreenFocusResult* p = focus_result_;
  // @@protoc_insertion_point(field_get:cn.kylinos.kmre.kmrecore.EventSequence.focus_result)
  return p != NULL ? *p : *reinterpret_cast<const ::cn::kylinos::kmre::kmrecore::VirtualScreenFocusResult*>(
      &::cn::kylinos::kmre::kmrecore::_VirtualScreenFocusResult_default_instance_);
}
inline ::cn::kylinos::kmre::kmrecore::VirtualScreenFocusResult* EventSequence::release_focus_result() {
  // @@protoc_insertion_point(field_release:cn.kylinos.kmre.kmrecore.EventSequence.focus_result)
  clear_has_focus_result();
  ::cn::kylinos::kmre::kmrecore::VirtualScreenFocusResult* temp = focus_result_;
  focus_result_ = NULL;
  return temp;
}
inline ::cn::kylinos::kmre::kmrecore::VirtualScreenFocusResult* EventSequence::mutable_focus_result() {
  set_has_focus_result();
  if (focus_result_ == NULL) {
    auto* p = CreateMaybeMessage<::cn::kylinos::kmre::kmrecore::VirtualScreenFocusResult>(GetArenaNoVirtual());
    focus_result_ = p;
  }
  // @@protoc_insertion_point(field_mutable:cn.kylinos.kmre.kmrecore.EventSequence.focus_result)
  return focus_result_;
}
inline void EventSequence::set_allocated_focus_result(::cn::kylinos::kmre::kmrecore::VirtualScreenFocusResult* focus_result) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete focus_result_;
  }
  if (focus_result) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      focus_result = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, focus_result, submessage_arena);
    }
    set_has_focus_result();
  } else {
    clear_has_focus_result();
  }
  focus_result_ = focus_result;
  // @@protoc_insertion_point(field_set_allocated:cn.kylinos.kmre.kmrecore.EventSequence.focus_result)
}

// optional .cn.kylinos.kmre.kmrecore.InputMethodRequest inputmethod_request = 7;
inline bool EventSequence::has_inputmethod_request() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void EventSequence::set_has_inputmethod_request() {
  _has_bits_[0] |= 0x00000040u;
}
inline void EventSequence::clear_has_inputmethod_request() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void EventSequence::clear_inputmethod_request() {
  if (inputmethod_request_ != NULL) inputmethod_request_->Clear();
  clear_has_inputmethod_request();
}
inline const ::cn::kylinos::kmre::kmrecore::InputMethodRequest& EventSequence::_internal_inputmethod_request() const {
  return *inputmethod_request_;
}
inline const ::cn::kylinos::kmre::kmrecore::InputMethodRequest& EventSequence::inputmethod_request() const {
  const ::cn::kylinos::kmre::kmrecore::InputMethodRequest* p = inputmethod_request_;
  // @@protoc_insertion_point(field_get:cn.kylinos.kmre.kmrecore.EventSequence.inputmethod_request)
  return p != NULL ? *p : *reinterpret_cast<const ::cn::kylinos::kmre::kmrecore::InputMethodRequest*>(
      &::cn::kylinos::kmre::kmrecore::_InputMethodRequest_default_instance_);
}
inline ::cn::kylinos::kmre::kmrecore::InputMethodRequest* EventSequence::release_inputmethod_request() {
  // @@protoc_insertion_point(field_release:cn.kylinos.kmre.kmrecore.EventSequence.inputmethod_request)
  clear_has_inputmethod_request();
  ::cn::kylinos::kmre::kmrecore::InputMethodRequest* temp = inputmethod_request_;
  inputmethod_request_ = NULL;
  return temp;
}
inline ::cn::kylinos::kmre::kmrecore::InputMethodRequest* EventSequence::mutable_inputmethod_request() {
  set_has_inputmethod_request();
  if (inputmethod_request_ == NULL) {
    auto* p = CreateMaybeMessage<::cn::kylinos::kmre::kmrecore::InputMethodRequest>(GetArenaNoVirtual());
    inputmethod_request_ = p;
  }
  // @@protoc_insertion_point(field_mutable:cn.kylinos.kmre.kmrecore.EventSequence.inputmethod_request)
  return inputmethod_request_;
}
inline void EventSequence::set_allocated_inputmethod_request(::cn::kylinos::kmre::kmrecore::InputMethodRequest* inputmethod_request) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete inputmethod_request_;
  }
  if (inputmethod_request) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      inputmethod_request = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, inputmethod_request, submessage_arena);
    }
    set_has_inputmethod_request();
  } else {
    clear_has_inputmethod_request();
  }
  inputmethod_request_ = inputmethod_request;
  // @@protoc_insertion_point(field_set_allocated:cn.kylinos.kmre.kmrecore.EventSequence.inputmethod_request)
}

// optional .cn.kylinos.kmre.kmrecore.FilesList files_list = 8;
inline bool EventSequence::has_files_list() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void EventSequence::set_has_files_list() {
  _has_bits_[0] |= 0x00000080u;
}
inline void EventSequence::clear_has_files_list() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void EventSequence::clear_files_list() {
  if (files_list_ != NULL) files_list_->Clear();
  clear_has_files_list();
}
inline const ::cn::kylinos::kmre::kmrecore::FilesList& EventSequence::_internal_files_list() const {
  return *files_list_;
}
inline const ::cn::kylinos::kmre::kmrecore::FilesList& EventSequence::files_list() const {
  const ::cn::kylinos::kmre::kmrecore::FilesList* p = files_list_;
  // @@protoc_insertion_point(field_get:cn.kylinos.kmre.kmrecore.EventSequence.files_list)
  return p != NULL ? *p : *reinterpret_cast<const ::cn::kylinos::kmre::kmrecore::FilesList*>(
      &::cn::kylinos::kmre::kmrecore::_FilesList_default_instance_);
}
inline ::cn::kylinos::kmre::kmrecore::FilesList* EventSequence::release_files_list() {
  // @@protoc_insertion_point(field_release:cn.kylinos.kmre.kmrecore.EventSequence.files_list)
  clear_has_files_list();
  ::cn::kylinos::kmre::kmrecore::FilesList* temp = files_list_;
  files_list_ = NULL;
  return temp;
}
inline ::cn::kylinos::kmre::kmrecore::FilesList* EventSequence::mutable_files_list() {
  set_has_files_list();
  if (files_list_ == NULL) {
    auto* p = CreateMaybeMessage<::cn::kylinos::kmre::kmrecore::FilesList>(GetArenaNoVirtual());
    files_list_ = p;
  }
  // @@protoc_insertion_point(field_mutable:cn.kylinos.kmre.kmrecore.EventSequence.files_list)
  return files_list_;
}
inline void EventSequence::set_allocated_files_list(::cn::kylinos::kmre::kmrecore::FilesList* files_list) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete files_list_;
  }
  if (files_list) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      files_list = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, files_list, submessage_arena);
    }
    set_has_files_list();
  } else {
    clear_has_files_list();
  }
  files_list_ = files_list;
  // @@protoc_insertion_point(field_set_allocated:cn.kylinos.kmre.kmrecore.EventSequence.files_list)
}

// optional .cn.kylinos.kmre.kmrecore.MediaPlayStatus mediaplay_status = 9;
inline bool EventSequence::has_mediaplay_status() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void EventSequence::set_has_mediaplay_status() {
  _has_bits_[0] |= 0x00000100u;
}
inline void EventSequence::clear_has_mediaplay_status() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void EventSequence::clear_mediaplay_status() {
  if (mediaplay_status_ != NULL) mediaplay_status_->Clear();
  clear_has_mediaplay_status();
}
inline const ::cn::kylinos::kmre::kmrecore::MediaPlayStatus& EventSequence::_internal_mediaplay_status() const {
  return *mediaplay_status_;
}
inline const ::cn::kylinos::kmre::kmrecore::MediaPlayStatus& EventSequence::mediaplay_status() const {
  const ::cn::kylinos::kmre::kmrecore::MediaPlayStatus* p = mediaplay_status_;
  // @@protoc_insertion_point(field_get:cn.kylinos.kmre.kmrecore.EventSequence.mediaplay_status)
  return p != NULL ? *p : *reinterpret_cast<const ::cn::kylinos::kmre::kmrecore::MediaPlayStatus*>(
      &::cn::kylinos::kmre::kmrecore::_MediaPlayStatus_default_instance_);
}
inline ::cn::kylinos::kmre::kmrecore::MediaPlayStatus* EventSequence::release_mediaplay_status() {
  // @@protoc_insertion_point(field_release:cn.kylinos.kmre.kmrecore.EventSequence.mediaplay_status)
  clear_has_mediaplay_status();
  ::cn::kylinos::kmre::kmrecore::MediaPlayStatus* temp = mediaplay_status_;
  mediaplay_status_ = NULL;
  return temp;
}
inline ::cn::kylinos::kmre::kmrecore::MediaPlayStatus* EventSequence::mutable_mediaplay_status() {
  set_has_mediaplay_status();
  if (mediaplay_status_ == NULL) {
    auto* p = CreateMaybeMessage<::cn::kylinos::kmre::kmrecore::MediaPlayStatus>(GetArenaNoVirtual());
    mediaplay_status_ = p;
  }
  // @@protoc_insertion_point(field_mutable:cn.kylinos.kmre.kmrecore.EventSequence.mediaplay_status)
  return mediaplay_status_;
}
inline void EventSequence::set_allocated_mediaplay_status(::cn::kylinos::kmre::kmrecore::MediaPlayStatus* mediaplay_status) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete mediaplay_status_;
  }
  if (mediaplay_status) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      mediaplay_status = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, mediaplay_status, submessage_arena);
    }
    set_has_mediaplay_status();
  } else {
    clear_has_mediaplay_status();
  }
  mediaplay_status_ = mediaplay_status;
  // @@protoc_insertion_point(field_set_allocated:cn.kylinos.kmre.kmrecore.EventSequence.mediaplay_status)
}

// optional .cn.kylinos.kmre.kmrecore.AppMultiplierList app_multipliers = 10;
inline bool EventSequence::has_app_multipliers() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void EventSequence::set_has_app_multipliers() {
  _has_bits_[0] |= 0x00000200u;
}
inline void EventSequence::clear_has_app_multipliers() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void EventSequence::clear_app_multipliers() {
  if (app_multipliers_ != NULL) app_multipliers_->Clear();
  clear_has_app_multipliers();
}
inline const ::cn::kylinos::kmre::kmrecore::AppMultiplierList& EventSequence::_internal_app_multipliers() const {
  return *app_multipliers_;
}
inline const ::cn::kylinos::kmre::kmrecore::AppMultiplierList& EventSequence::app_multipliers() const {
  const ::cn::kylinos::kmre::kmrecore::AppMultiplierList* p = app_multipliers_;
  // @@protoc_insertion_point(field_get:cn.kylinos.kmre.kmrecore.EventSequence.app_multipliers)
  return p != NULL ? *p : *reinterpret_cast<const ::cn::kylinos::kmre::kmrecore::AppMultiplierList*>(
      &::cn::kylinos::kmre::kmrecore::_AppMultiplierList_default_instance_);
}
inline ::cn::kylinos::kmre::kmrecore::AppMultiplierList* EventSequence::release_app_multipliers() {
  // @@protoc_insertion_point(field_release:cn.kylinos.kmre.kmrecore.EventSequence.app_multipliers)
  clear_has_app_multipliers();
  ::cn::kylinos::kmre::kmrecore::AppMultiplierList* temp = app_multipliers_;
  app_multipliers_ = NULL;
  return temp;
}
inline ::cn::kylinos::kmre::kmrecore::AppMultiplierList* EventSequence::mutable_app_multipliers() {
  set_has_app_multipliers();
  if (app_multipliers_ == NULL) {
    auto* p = CreateMaybeMessage<::cn::kylinos::kmre::kmrecore::AppMultiplierList>(GetArenaNoVirtual());
    app_multipliers_ = p;
  }
  // @@protoc_insertion_point(field_mutable:cn.kylinos.kmre.kmrecore.EventSequence.app_multipliers)
  return app_multipliers_;
}
inline void EventSequence::set_allocated_app_multipliers(::cn::kylinos::kmre::kmrecore::AppMultiplierList* app_multipliers) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete app_multipliers_;
  }
  if (app_multipliers) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      app_multipliers = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, app_multipliers, submessage_arena);
    }
    set_has_app_multipliers();
  } else {
    clear_has_app_multipliers();
  }
  app_multipliers_ = app_multipliers;
  // @@protoc_insertion_point(field_set_allocated:cn.kylinos.kmre.kmrecore.EventSequence.app_multipliers)
}

// optional .cn.kylinos.kmre.kmrecore.ResponseInfo response_info = 11;
inline bool EventSequence::has_response_info() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void EventSequence::set_has_response_info() {
  _has_bits_[0] |= 0x00000400u;
}
inline void EventSequence::clear_has_response_info() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void EventSequence::clear_response_info() {
  if (response_info_ != NULL) response_info_->Clear();
  clear_has_response_info();
}
inline const ::cn::kylinos::kmre::kmrecore::ResponseInfo& EventSequence::_internal_response_info() const {
  return *response_info_;
}
inline const ::cn::kylinos::kmre::kmrecore::ResponseInfo& EventSequence::response_info() const {
  const ::cn::kylinos::kmre::kmrecore::ResponseInfo* p = response_info_;
  // @@protoc_insertion_point(field_get:cn.kylinos.kmre.kmrecore.EventSequence.response_info)
  return p != NULL ? *p : *reinterpret_cast<const ::cn::kylinos::kmre::kmrecore::ResponseInfo*>(
      &::cn::kylinos::kmre::kmrecore::_ResponseInfo_default_instance_);
}
inline ::cn::kylinos::kmre::kmrecore::ResponseInfo* EventSequence::release_response_info() {
  // @@protoc_insertion_point(field_release:cn.kylinos.kmre.kmrecore.EventSequence.response_info)
  clear_has_response_info();
  ::cn::kylinos::kmre::kmrecore::ResponseInfo* temp = response_info_;
  response_info_ = NULL;
  return temp;
}
inline ::cn::kylinos::kmre::kmrecore::ResponseInfo* EventSequence::mutable_response_info() {
  set_has_response_info();
  if (response_info_ == NULL) {
    auto* p = CreateMaybeMessage<::cn::kylinos::kmre::kmrecore::ResponseInfo>(GetArenaNoVirtual());
    response_info_ = p;
  }
  // @@protoc_insertion_point(field_mutable:cn.kylinos.kmre.kmrecore.EventSequence.response_info)
  return response_info_;
}
inline void EventSequence::set_allocated_response_info(::cn::kylinos::kmre::kmrecore::ResponseInfo* response_info) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete response_info_;
  }
  if (response_info) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      response_info = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, response_info, submessage_arena);
    }
    set_has_response_info();
  } else {
    clear_has_response_info();
  }
  response_info_ = response_info;
  // @@protoc_insertion_point(field_set_allocated:cn.kylinos.kmre.kmrecore.EventSequence.response_info)
}

// optional .cn.kylinos.kmre.kmrecore.MultiplierSwitch multiplier_switch = 12;
inline bool EventSequence::has_multiplier_switch() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void EventSequence::set_has_multiplier_switch() {
  _has_bits_[0] |= 0x00000800u;
}
inline void EventSequence::clear_has_multiplier_switch() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void EventSequence::clear_multiplier_switch() {
  if (multiplier_switch_ != NULL) multiplier_switch_->Clear();
  clear_has_multiplier_switch();
}
inline const ::cn::kylinos::kmre::kmrecore::MultiplierSwitch& EventSequence::_internal_multiplier_switch() const {
  return *multiplier_switch_;
}
inline const ::cn::kylinos::kmre::kmrecore::MultiplierSwitch& EventSequence::multiplier_switch() const {
  const ::cn::kylinos::kmre::kmrecore::MultiplierSwitch* p = multiplier_switch_;
  // @@protoc_insertion_point(field_get:cn.kylinos.kmre.kmrecore.EventSequence.multiplier_switch)
  return p != NULL ? *p : *reinterpret_cast<const ::cn::kylinos::kmre::kmrecore::MultiplierSwitch*>(
      &::cn::kylinos::kmre::kmrecore::_MultiplierSwitch_default_instance_);
}
inline ::cn::kylinos::kmre::kmrecore::MultiplierSwitch* EventSequence::release_multiplier_switch() {
  // @@protoc_insertion_point(field_release:cn.kylinos.kmre.kmrecore.EventSequence.multiplier_switch)
  clear_has_multiplier_switch();
  ::cn::kylinos::kmre::kmrecore::MultiplierSwitch* temp = multiplier_switch_;
  multiplier_switch_ = NULL;
  return temp;
}
inline ::cn::kylinos::kmre::kmrecore::MultiplierSwitch* EventSequence::mutable_multiplier_switch() {
  set_has_multiplier_switch();
  if (multiplier_switch_ == NULL) {
    auto* p = CreateMaybeMessage<::cn::kylinos::kmre::kmrecore::MultiplierSwitch>(GetArenaNoVirtual());
    multiplier_switch_ = p;
  }
  // @@protoc_insertion_point(field_mutable:cn.kylinos.kmre.kmrecore.EventSequence.multiplier_switch)
  return multiplier_switch_;
}
inline void EventSequence::set_allocated_multiplier_switch(::cn::kylinos::kmre::kmrecore::MultiplierSwitch* multiplier_switch) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete multiplier_switch_;
  }
  if (multiplier_switch) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      multiplier_switch = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, multiplier_switch, submessage_arena);
    }
    set_has_multiplier_switch();
  } else {
    clear_has_multiplier_switch();
  }
  multiplier_switch_ = multiplier_switch;
  // @@protoc_insertion_point(field_set_allocated:cn.kylinos.kmre.kmrecore.EventSequence.multiplier_switch)
}

// optional .cn.kylinos.kmre.kmrecore.LinkOpen link_open = 13;
inline bool EventSequence::has_link_open() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
inline void EventSequence::set_has_link_open() {
  _has_bits_[0] |= 0x00001000u;
}
inline void EventSequence::clear_has_link_open() {
  _has_bits_[0] &= ~0x00001000u;
}
inline void EventSequence::clear_link_open() {
  if (link_open_ != NULL) link_open_->Clear();
  clear_has_link_open();
}
inline const ::cn::kylinos::kmre::kmrecore::LinkOpen& EventSequence::_internal_link_open() const {
  return *link_open_;
}
inline const ::cn::kylinos::kmre::kmrecore::LinkOpen& EventSequence::link_open() const {
  const ::cn::kylinos::kmre::kmrecore::LinkOpen* p = link_open_;
  // @@protoc_insertion_point(field_get:cn.kylinos.kmre.kmrecore.EventSequence.link_open)
  return p != NULL ? *p : *reinterpret_cast<const ::cn::kylinos::kmre::kmrecore::LinkOpen*>(
      &::cn::kylinos::kmre::kmrecore::_LinkOpen_default_instance_);
}
inline ::cn::kylinos::kmre::kmrecore::LinkOpen* EventSequence::release_link_open() {
  // @@protoc_insertion_point(field_release:cn.kylinos.kmre.kmrecore.EventSequence.link_open)
  clear_has_link_open();
  ::cn::kylinos::kmre::kmrecore::LinkOpen* temp = link_open_;
  link_open_ = NULL;
  return temp;
}
inline ::cn::kylinos::kmre::kmrecore::LinkOpen* EventSequence::mutable_link_open() {
  set_has_link_open();
  if (link_open_ == NULL) {
    auto* p = CreateMaybeMessage<::cn::kylinos::kmre::kmrecore::LinkOpen>(GetArenaNoVirtual());
    link_open_ = p;
  }
  // @@protoc_insertion_point(field_mutable:cn.kylinos.kmre.kmrecore.EventSequence.link_open)
  return link_open_;
}
inline void EventSequence::set_allocated_link_open(::cn::kylinos::kmre::kmrecore::LinkOpen* link_open) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete link_open_;
  }
  if (link_open) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      link_open = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, link_open, submessage_arena);
    }
    set_has_link_open();
  } else {
    clear_has_link_open();
  }
  link_open_ = link_open;
  // @@protoc_insertion_point(field_set_allocated:cn.kylinos.kmre.kmrecore.EventSequence.link_open)
}

// optional .cn.kylinos.kmre.kmrecore.UpdatePackageStatus update_package_status = 14;
inline bool EventSequence::has_update_package_status() const {
  return (_has_bits_[0] & 0x00002000u) != 0;
}
inline void EventSequence::set_has_update_package_status() {
  _has_bits_[0] |= 0x00002000u;
}
inline void EventSequence::clear_has_update_package_status() {
  _has_bits_[0] &= ~0x00002000u;
}
inline void EventSequence::clear_update_package_status() {
  if (update_package_status_ != NULL) update_package_status_->Clear();
  clear_has_update_package_status();
}
inline const ::cn::kylinos::kmre::kmrecore::UpdatePackageStatus& EventSequence::_internal_update_package_status() const {
  return *update_package_status_;
}
inline const ::cn::kylinos::kmre::kmrecore::UpdatePackageStatus& EventSequence::update_package_status() const {
  const ::cn::kylinos::kmre::kmrecore::UpdatePackageStatus* p = update_package_status_;
  // @@protoc_insertion_point(field_get:cn.kylinos.kmre.kmrecore.EventSequence.update_package_status)
  return p != NULL ? *p : *reinterpret_cast<const ::cn::kylinos::kmre::kmrecore::UpdatePackageStatus*>(
      &::cn::kylinos::kmre::kmrecore::_UpdatePackageStatus_default_instance_);
}
inline ::cn::kylinos::kmre::kmrecore::UpdatePackageStatus* EventSequence::release_update_package_status() {
  // @@protoc_insertion_point(field_release:cn.kylinos.kmre.kmrecore.EventSequence.update_package_status)
  clear_has_update_package_status();
  ::cn::kylinos::kmre::kmrecore::UpdatePackageStatus* temp = update_package_status_;
  update_package_status_ = NULL;
  return temp;
}
inline ::cn::kylinos::kmre::kmrecore::UpdatePackageStatus* EventSequence::mutable_update_package_status() {
  set_has_update_package_status();
  if (update_package_status_ == NULL) {
    auto* p = CreateMaybeMessage<::cn::kylinos::kmre::kmrecore::UpdatePackageStatus>(GetArenaNoVirtual());
    update_package_status_ = p;
  }
  // @@protoc_insertion_point(field_mutable:cn.kylinos.kmre.kmrecore.EventSequence.update_package_status)
  return update_package_status_;
}
inline void EventSequence::set_allocated_update_package_status(::cn::kylinos::kmre::kmrecore::UpdatePackageStatus* update_package_status) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete update_package_status_;
  }
  if (update_package_status) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      update_package_status = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, update_package_status, submessage_arena);
    }
    set_has_update_package_status();
  } else {
    clear_has_update_package_status();
  }
  update_package_status_ = update_package_status;
  // @@protoc_insertion_point(field_set_allocated:cn.kylinos.kmre.kmrecore.EventSequence.update_package_status)
}

// optional .cn.kylinos.kmre.kmrecore.SendSystemProp system_prop = 15;
inline bool EventSequence::has_system_prop() const {
  return (_has_bits_[0] & 0x00004000u) != 0;
}
inline void EventSequence::set_has_system_prop() {
  _has_bits_[0] |= 0x00004000u;
}
inline void EventSequence::clear_has_system_prop() {
  _has_bits_[0] &= ~0x00004000u;
}
inline void EventSequence::clear_system_prop() {
  if (system_prop_ != NULL) system_prop_->Clear();
  clear_has_system_prop();
}
inline const ::cn::kylinos::kmre::kmrecore::SendSystemProp& EventSequence::_internal_system_prop() const {
  return *system_prop_;
}
inline const ::cn::kylinos::kmre::kmrecore::SendSystemProp& EventSequence::system_prop() const {
  const ::cn::kylinos::kmre::kmrecore::SendSystemProp* p = system_prop_;
  // @@protoc_insertion_point(field_get:cn.kylinos.kmre.kmrecore.EventSequence.system_prop)
  return p != NULL ? *p : *reinterpret_cast<const ::cn::kylinos::kmre::kmrecore::SendSystemProp*>(
      &::cn::kylinos::kmre::kmrecore::_SendSystemProp_default_instance_);
}
inline ::cn::kylinos::kmre::kmrecore::SendSystemProp* EventSequence::release_system_prop() {
  // @@protoc_insertion_point(field_release:cn.kylinos.kmre.kmrecore.EventSequence.system_prop)
  clear_has_system_prop();
  ::cn::kylinos::kmre::kmrecore::SendSystemProp* temp = system_prop_;
  system_prop_ = NULL;
  return temp;
}
inline ::cn::kylinos::kmre::kmrecore::SendSystemProp* EventSequence::mutable_system_prop() {
  set_has_system_prop();
  if (system_prop_ == NULL) {
    auto* p = CreateMaybeMessage<::cn::kylinos::kmre::kmrecore::SendSystemProp>(GetArenaNoVirtual());
    system_prop_ = p;
  }
  // @@protoc_insertion_point(field_mutable:cn.kylinos.kmre.kmrecore.EventSequence.system_prop)
  return system_prop_;
}
inline void EventSequence::set_allocated_system_prop(::cn::kylinos::kmre::kmrecore::SendSystemProp* system_prop) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete system_prop_;
  }
  if (system_prop) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      system_prop = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, system_prop, submessage_arena);
    }
    set_has_system_prop();
  } else {
    clear_has_system_prop();
  }
  system_prop_ = system_prop;
  // @@protoc_insertion_point(field_set_allocated:cn.kylinos.kmre.kmrecore.EventSequence.system_prop)
}

// optional .cn.kylinos.kmre.kmrecore.GetInfoList get_info_list = 16;
inline bool EventSequence::has_get_info_list() const {
  return (_has_bits_[0] & 0x00008000u) != 0;
}
inline void EventSequence::set_has_get_info_list() {
  _has_bits_[0] |= 0x00008000u;
}
inline void EventSequence::clear_has_get_info_list() {
  _has_bits_[0] &= ~0x00008000u;
}
inline void EventSequence::clear_get_info_list() {
  if (get_info_list_ != NULL) get_info_list_->Clear();
  clear_has_get_info_list();
}
inline const ::cn::kylinos::kmre::kmrecore::GetInfoList& EventSequence::_internal_get_info_list() const {
  return *get_info_list_;
}
inline const ::cn::kylinos::kmre::kmrecore::GetInfoList& EventSequence::get_info_list() const {
  const ::cn::kylinos::kmre::kmrecore::GetInfoList* p = get_info_list_;
  // @@protoc_insertion_point(field_get:cn.kylinos.kmre.kmrecore.EventSequence.get_info_list)
  return p != NULL ? *p : *reinterpret_cast<const ::cn::kylinos::kmre::kmrecore::GetInfoList*>(
      &::cn::kylinos::kmre::kmrecore::_GetInfoList_default_instance_);
}
inline ::cn::kylinos::kmre::kmrecore::GetInfoList* EventSequence::release_get_info_list() {
  // @@protoc_insertion_point(field_release:cn.kylinos.kmre.kmrecore.EventSequence.get_info_list)
  clear_has_get_info_list();
  ::cn::kylinos::kmre::kmrecore::GetInfoList* temp = get_info_list_;
  get_info_list_ = NULL;
  return temp;
}
inline ::cn::kylinos::kmre::kmrecore::GetInfoList* EventSequence::mutable_get_info_list() {
  set_has_get_info_list();
  if (get_info_list_ == NULL) {
    auto* p = CreateMaybeMessage<::cn::kylinos::kmre::kmrecore::GetInfoList>(GetArenaNoVirtual());
    get_info_list_ = p;
  }
  // @@protoc_insertion_point(field_mutable:cn.kylinos.kmre.kmrecore.EventSequence.get_info_list)
  return get_info_list_;
}
inline void EventSequence::set_allocated_get_info_list(::cn::kylinos::kmre::kmrecore::GetInfoList* get_info_list) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete get_info_list_;
  }
  if (get_info_list) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      get_info_list = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, get_info_list, submessage_arena);
    }
    set_has_get_info_list();
  } else {
    clear_has_get_info_list();
  }
  get_info_list_ = get_info_list;
  // @@protoc_insertion_point(field_set_allocated:cn.kylinos.kmre.kmrecore.EventSequence.get_info_list)
}

// optional .cn.kylinos.kmre.kmrecore.ContainerEnvBootStatus container_env_boot_status = 17;
inline bool EventSequence::has_container_env_boot_status() const {
  return (_has_bits_[0] & 0x00010000u) != 0;
}
inline void EventSequence::set_has_container_env_boot_status() {
  _has_bits_[0] |= 0x00010000u;
}
inline void EventSequence::clear_has_container_env_boot_status() {
  _has_bits_[0] &= ~0x00010000u;
}
inline void EventSequence::clear_container_env_boot_status() {
  if (container_env_boot_status_ != NULL) container_env_boot_status_->Clear();
  clear_has_container_env_boot_status();
}
inline const ::cn::kylinos::kmre::kmrecore::ContainerEnvBootStatus& EventSequence::_internal_container_env_boot_status() const {
  return *container_env_boot_status_;
}
inline const ::cn::kylinos::kmre::kmrecore::ContainerEnvBootStatus& EventSequence::container_env_boot_status() const {
  const ::cn::kylinos::kmre::kmrecore::ContainerEnvBootStatus* p = container_env_boot_status_;
  // @@protoc_insertion_point(field_get:cn.kylinos.kmre.kmrecore.EventSequence.container_env_boot_status)
  return p != NULL ? *p : *reinterpret_cast<const ::cn::kylinos::kmre::kmrecore::ContainerEnvBootStatus*>(
      &::cn::kylinos::kmre::kmrecore::_ContainerEnvBootStatus_default_instance_);
}
inline ::cn::kylinos::kmre::kmrecore::ContainerEnvBootStatus* EventSequence::release_container_env_boot_status() {
  // @@protoc_insertion_point(field_release:cn.kylinos.kmre.kmrecore.EventSequence.container_env_boot_status)
  clear_has_container_env_boot_status();
  ::cn::kylinos::kmre::kmrecore::ContainerEnvBootStatus* temp = container_env_boot_status_;
  container_env_boot_status_ = NULL;
  return temp;
}
inline ::cn::kylinos::kmre::kmrecore::ContainerEnvBootStatus* EventSequence::mutable_container_env_boot_status() {
  set_has_container_env_boot_status();
  if (container_env_boot_status_ == NULL) {
    auto* p = CreateMaybeMessage<::cn::kylinos::kmre::kmrecore::ContainerEnvBootStatus>(GetArenaNoVirtual());
    container_env_boot_status_ = p;
  }
  // @@protoc_insertion_point(field_mutable:cn.kylinos.kmre.kmrecore.EventSequence.container_env_boot_status)
  return container_env_boot_status_;
}
inline void EventSequence::set_allocated_container_env_boot_status(::cn::kylinos::kmre::kmrecore::ContainerEnvBootStatus* container_env_boot_status) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete container_env_boot_status_;
  }
  if (container_env_boot_status) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      container_env_boot_status = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, container_env_boot_status, submessage_arena);
    }
    set_has_container_env_boot_status();
  } else {
    clear_has_container_env_boot_status();
  }
  container_env_boot_status_ = container_env_boot_status;
  // @@protoc_insertion_point(field_set_allocated:cn.kylinos.kmre.kmrecore.EventSequence.container_env_boot_status)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace kmrecore
}  // namespace kmre
}  // namespace kylinos
}  // namespace cn

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_INCLUDED_KmreCore_2eproto
