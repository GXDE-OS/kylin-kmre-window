/*
 * This file was generated by qdbusxml2cpp version 0.8
 * Command line was: qdbusxml2cpp cn.kylinos.Kmre.Window.xml -i metatypes.h -a window_dbus
 *
 * qdbusxml2cpp is Copyright (C) 2023 The Qt Company Ltd.
 *
 * This is an auto-generated file.
 * Do not edit! All changes made to it will be lost.
 */

#include "window_dbus.h"
#include <QtCore/QMetaObject>
#include <QtCore/QByteArray>
#include <QtCore/QList>
#include <QtCore/QMap>
#include <QtCore/QString>
#include <QtCore/QStringList>
#include <QtCore/QVariant>

/*
 * Implementation of adaptor class WindowAdaptor
 */

WindowAdaptor::WindowAdaptor(QObject *parent)
    : QDBusAbstractAdaptor(parent)
{
    // constructor
    setAutoRelaySignals(true);
}

WindowAdaptor::~WindowAdaptor()
{
    // destructor
}

void WindowAdaptor::activeApp(const QString &pkgName)
{
    // handle method call cn.kylinos.Kmre.Window.activeApp
    QMetaObject::invokeMethod(parent(), "activeApp", Q_ARG(QString, pkgName));
}

void WindowAdaptor::answerCall(bool accept)
{
    // handle method call cn.kylinos.Kmre.Window.answerCall
    QMetaObject::invokeMethod(parent(), "answerCall", Q_ARG(bool, accept));
}

QString WindowAdaptor::getAppMultipliers()
{
    // handle method call cn.kylinos.Kmre.Window.getAppMultipliers
    QString apps;
    QMetaObject::invokeMethod(parent(), "getAppMultipliers", Q_RETURN_ARG(QString, apps));
    return apps;
}

QString WindowAdaptor::getRunningAppList()
{
    // handle method call cn.kylinos.Kmre.Window.getRunningAppList
    QString result;
    QMetaObject::invokeMethod(parent(), "getRunningAppList", Q_RETURN_ARG(QString, result));
    return result;
}

void WindowAdaptor::launchApp(const QString &pkgName, int width, int height)
{
    // handle method call cn.kylinos.Kmre.Window.launchApp
    QMetaObject::invokeMethod(parent(), "launchApp", Q_ARG(QString, pkgName), Q_ARG(int, width), Q_ARG(int, height));
}

void WindowAdaptor::start()
{
    // handle method call cn.kylinos.Kmre.Window.start
    QMetaObject::invokeMethod(parent(), "start");
}

